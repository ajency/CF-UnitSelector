{"version":3,"sources":["authoring-tool/entities/building.entity.coffee"],"names":[],"mappings":"AAIA;AAAA,MAAA;+BAAA;;AAAA,EAAM,aAAa,CAAC;AAEnB,oCAAA,CAAA;;;;KAAA;;AAAA,2BAAA,QAAA,GAAW,UAAU,CAAC,OAAX,CAAmB,qYAAnB,CAAX,CAAA;;AAAA,2BAaA,EAAA,GACC;AAAA,MAAA,KAAA,EAAQ,QAAR;AAAA,MACA,SAAA,EAAY,aADZ;KAdD,CAAA;;AAAA,2BAiBA,aAAA,GAAc,SAAA,GAAA;AACb,UAAA,oBAAA;AAAA,MAAA,IAAA,GAAO,8CAAA,CAAP,CAAA;AAAA,MACA,OAAA,GAAU,EADV,CAAA;AAAA,MAEA,KAAA,GAAQ,UAAU,CAAC,SAAX,CAAqB,IAArB,EAAuB,OAAvB,CAFR,CAAA;AAAA,MAGA,CAAC,CAAC,IAAF,CAAO,KAAP,EAAc,SAAC,GAAD,EAAK,GAAL,GAAA;eACb,OAAO,CAAC,IAAR,CACC;AAAA,UAAA,IAAA,EAAO,GAAG,CAAC,GAAJ,CAAQ,IAAR,CAAP;AAAA,UACA,MAAA,EAAS,GAAG,CAAC,GAAJ,CAAQ,eAAR,CADT;SADD,EADa;MAAA,CAAd,CAHA,CAAA;AAAA,MAOA,IAAI,CAAC,OAAL,GAAe,OAPf,CAAA;aAQA,KATa;IAAA,CAjBd,CAAA;;AAAA,2BA4BA,MAAA,GAAO,SAAA,GAAA;AACN,UAAA,KAAA;AAAA,MAAA,KAAA,GAAQ,kBAAR,CAAA;AACA,MAAA,IAAG,KAAK,CAAC,MAAN,KAAgB,CAAnB;AACC,QAAA,IAAC,CAAA,EAAE,CAAC,KAAK,CAAC,IAAV,CAAA,CAAA,CAAA;AAAA,QACA,IAAC,CAAA,EAAE,CAAC,SAAS,CAAC,IAAd,CAAA,CADA,CAAA;AAAA,QAEA,CAAA,CAAE,QAAF,CAAW,CAAC,IAAZ,CAAiB,sBAAjB,CAFA,CAAA;eAGA,MAAM,CAAC,SAAP,CAAA,EAJD;OAFM;IAAA,CA5BP,CAAA;;wBAAA;;KAFwC,UAAU,CAAC,SAApD,CAAA;;AAAA,EAsCM,aAAa,CAAC;AAEnB,oCAAA,CAAA;;;;KAAA;;AAAA,2BAAA,UAAA,GAAY,SAAA,GAAA;AACX,UAAA,KAAA;AAAA,MAAA,KAAA,GAAQ,kBAAkB,CAAC,OAAnB,CAAA,CAAR,CAAA;aACA,IAAC,CAAA,IAAD,CAAU,IAAA,aAAa,CAAC,YAAd,CACR;AAAA,QAAA,KAAA,EAAQ,KAAR;OADQ,CAAV,EAFW;IAAA,CAAZ,CAAA;;wBAAA;;KAFwC,UAAU,CAAC,iBAtCpD,CAAA;AAAA","file":"authoring-tool/entities/building.entity.js","sourceRoot":"/source/","sourcesContent":["#View and Controller for a building\r\n#Function to show the details of an building if marked\r\n#event handler functions\r\n\r\nclass AuthoringTool.BuildingView extends Marionette.ItemView\r\n\r\n\ttemplate : Handlebars.compile('<form id=\"add-form\"><div class=\"form-group\">\r\n\t\t\t\t\t <label  class=\"unit-label\" for=\"exampleInputPassword1\">Units</label>\r\n\t\t\t\t\t<select class=\"form-control units\">\r\n\t\t\t\t\t\t<option value=\"\">Select</option>\r\n\t\t\t\t\t   {{#options}}\r\n\t\t\t\t\t\t <option value=\"{{id}}\">{{name}}</option>\r\n\t\t\t\t\t\t{{/options}}\r\n\t\t\t\t\t </select>\r\n\t\t\t\t   </div>\r\n\t\t\t\t   <div class=\"checkbox\"> <label> <input type=\"checkbox\" name=\"check_primary\"> Mark as primary unit </label> </div>\r\n\t\t\t\t   </form>')\r\n\r\n\r\n\tui :\r\n\t\tunits : '.units'\r\n\t\tunitLabel : '.unit-label'\t\t\r\n\r\n\tserializeData:->\r\n\t\tdata = super()\r\n\t\toptions = []\r\n\t\tunits = Marionette.getOption(@,'units')\r\n\t\t$.each units, (ind,val)->\r\n\t\t\toptions.push \r\n\t\t\t\t'id' : val.get 'id'\r\n\t\t\t\t'name' : val.get 'building_name'\r\n\t\tdata.options = options\r\n\t\tdata\r\n\r\n\tonShow:->\r\n\t\tunits = buildingCollection\r\n\t\tif units.length == 0\r\n\t\t\t@ui.units.hide()\r\n\t\t\t@ui.unitLabel.hide()\r\n\t\t\t$('.alert').text 'All buildings marked'\r\n\t\t\twindow.hideAlert()\r\n\r\nclass AuthoringTool.BuildingCtrl extends Marionette.RegionController\r\n\r\n\tinitialize :->\r\n\t\tunits = buildingCollection.toArray()\r\n\t\t@show new AuthoringTool.BuildingView\r\n\t\t\t\tunits : units"]}