{"version":3,"sources":["frontend/common/ajTooltip.coffee"],"names":[],"mappings":"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","file":"frontend/common/ajTooltip.js","sourceRoot":"/source/","sourcesContent":["$.fn.ajTooltip = ()->\r\n\r\n\treposition = ->\r\n\t\t  self = this\r\n\t\t  # in case the tooltip has been removed from DOM manually\r\n\t\t  # a function to detect if the tooltip is going off the screen horizontally. If so, reposition the crap out of it!\r\n\r\n\t\t  dontGoOffScreenX = ->\r\n\t\t    windowLeft = $(window).scrollLeft()\r\n\t\t    # if the tooltip goes off the left side of the screen, line it up with the left side of the window\r\n\t\t    if myLeft - windowLeft < 0\r\n\t\t      arrowReposition = myLeft - windowLeft\r\n\t\t      myLeft = windowLeft\r\n\t\t    # if the tooltip goes off the right of the screen, line it up with the right side of the window\r\n\t\t    if myLeft + tooltipWidth - windowLeft > windowWidth\r\n\t\t      arrowReposition = myLeft - (windowWidth + windowLeft - tooltipWidth)\r\n\t\t      myLeft = windowWidth + windowLeft - tooltipWidth\r\n\t\t    return\r\n\r\n\t\t  # a function to detect if the tooltip is going off the screen vertically. If so, switch to the opposite!\r\n\r\n\t\t  dontGoOffScreenY = (switchTo, switchFrom) ->\r\n\t\t    `var tooltipBorderColor`\r\n\t\t    `var tooltipBorderWidth`\r\n\t\t    `var tooltipBorderColor`\r\n\t\t    `var tooltipBorderWidth`\r\n\t\t    `var tooltipBorderColor`\r\n\t\t    `var tooltipBorderWidth`\r\n\t\t    `var tooltipBorderColor`\r\n\t\t    `var tooltipBorderWidth`\r\n\t\t    `var arrowColor`\r\n\t\t    `var newWidth`\r\n\t\t    `var borderWidth`\r\n\t\t    `var topDifference`\r\n\t\t    `var leftDifference`\r\n\t\t    `var areaTop`\r\n\t\t    `var areaLeft`\r\n\t\t    # if it goes off the top off the page\r\n\t\t    if proxy.offset.top - $(window).scrollTop() - tooltipHeight - offsetY - 12 < 0 and switchFrom.indexOf('top') > -1\r\n\t\t      practicalPosition = switchTo\r\n\t\t    # if it goes off the bottom of the page\r\n\t\t    if proxy.offset.top + proxy.dimension.height + tooltipHeight + 12 + offsetY > $(window).scrollTop() + $(window).height() and switchFrom.indexOf('bottom') > -1\r\n\t\t      practicalPosition = switchTo\r\n\t\t      myTop = proxy.offset.top - tooltipHeight - offsetY - 12\r\n\t\t    return\r\n\r\n\t\t  if $('body').find(self.$tooltip).length != 0\r\n\t\t    # reset width\r\n\t\t    self.$tooltip.css 'width', ''\r\n\t\t    # find variables to determine placement\r\n\t\t    self.elProxyPosition = self._repositionInfo(self.$elProxy)\r\n\t\t    arrowReposition = null\r\n\t\t    windowWidth = $(window).width()\r\n\t\t    proxy = self.elProxyPosition\r\n\t\t    tooltipWidth = self.$tooltip.outerWidth(false)\r\n\t\t    tooltipInnerWidth = self.$tooltip.innerWidth() + 1\r\n\t\t    tooltipHeight = self.$tooltip.outerHeight(false)\r\n\t\t    # if this is an <area> tag inside a <map>, all hell breaks loose. Recalculate all the measurements based on coordinates\r\n\t\t    if self.$elProxy.is('area')\r\n\t\t      areaShape = self.$elProxy.attr('shape')\r\n\t\t      mapName = self.$elProxy.parent().attr('name')\r\n\t\t      map = $('img[usemap=\"#' + mapName + '\"]')\r\n\t\t      mapOffsetLeft = map.offset().left\r\n\t\t      mapOffsetTop = map.offset().top\r\n\t\t      areaMeasurements = if self.$elProxy.attr('coords') != undefined then self.$elProxy.attr('coords').split(',') else undefined\r\n\t\t      if areaShape == 'circle'\r\n\t\t        areaLeft = parseInt(areaMeasurements[0])\r\n\t\t        areaTop = parseInt(areaMeasurements[1])\r\n\t\t        areaWidth = parseInt(areaMeasurements[2])\r\n\t\t        proxy.dimension.height = areaWidth * 2\r\n\t\t        proxy.dimension.width = areaWidth * 2\r\n\t\t        proxy.offset.top = mapOffsetTop + areaTop - areaWidth\r\n\t\t        proxy.offset.left = mapOffsetLeft + areaLeft - areaWidth\r\n\t\t      else if areaShape == 'rect'\r\n\t\t        areaLeft = parseInt(areaMeasurements[0])\r\n\t\t        areaTop = parseInt(areaMeasurements[1])\r\n\t\t        areaRight = parseInt(areaMeasurements[2])\r\n\t\t        areaBottom = parseInt(areaMeasurements[3])\r\n\t\t        proxy.dimension.height = areaBottom - areaTop\r\n\t\t        proxy.dimension.width = areaRight - areaLeft\r\n\t\t        proxy.offset.top = mapOffsetTop + areaTop\r\n\t\t        proxy.offset.left = mapOffsetLeft + areaLeft\r\n\t\t      else if areaShape == 'poly'\r\n\t\t        areaXs = []\r\n\t\t        areaYs = []\r\n\t\t        areaSmallestX = 0\r\n\t\t        areaSmallestY = 0\r\n\t\t        areaGreatestX = 0\r\n\t\t        areaGreatestY = 0\r\n\t\t        arrayAlternate = 'even'\r\n\t\t        i = 0\r\n\t\t        while i < areaMeasurements.length\r\n\t\t          areaNumber = parseInt(areaMeasurements[i])\r\n\t\t          if arrayAlternate == 'even'\r\n\t\t            if areaNumber > areaGreatestX\r\n\t\t              areaGreatestX = areaNumber\r\n\t\t              if i == 0\r\n\t\t                areaSmallestX = areaGreatestX\r\n\t\t            if areaNumber < areaSmallestX\r\n\t\t              areaSmallestX = areaNumber\r\n\t\t            arrayAlternate = 'odd'\r\n\t\t          else\r\n\t\t            if areaNumber > areaGreatestY\r\n\t\t              areaGreatestY = areaNumber\r\n\t\t              if i == 1\r\n\t\t                areaSmallestY = areaGreatestY\r\n\t\t            if areaNumber < areaSmallestY\r\n\t\t              areaSmallestY = areaNumber\r\n\t\t            arrayAlternate = 'even'\r\n\t\t          i++\r\n\t\t        proxy.dimension.height = areaGreatestY - areaSmallestY\r\n\t\t        proxy.dimension.width = areaGreatestX - areaSmallestX\r\n\t\t        proxy.offset.top = mapOffsetTop + areaSmallestY\r\n\t\t        proxy.offset.left = mapOffsetLeft + areaSmallestX\r\n\t\t      else\r\n\t\t        proxy.dimension.height = map.outerHeight(false)\r\n\t\t        proxy.dimension.width = map.outerWidth(false)\r\n\t\t        proxy.offset.top = mapOffsetTop\r\n\t\t        proxy.offset.left = mapOffsetLeft\r\n\t\t    # our function and global vars for positioning our tooltip\r\n\t\t    myLeft = 0\r\n\t\t    myLeftMirror = 0\r\n\t\t    myTop = 0\r\n\t\t    offsetY = parseInt(self.options.offsetY)\r\n\t\t    offsetX = parseInt(self.options.offsetX)\r\n\t\t    practicalPosition = self.options.position\r\n\t\t    if practicalPosition == 'top'\r\n\t\t      leftDifference = proxy.offset.left + tooltipWidth - (proxy.offset.left + proxy.dimension.width)\r\n\t\t      myLeft = proxy.offset.left + offsetX - (leftDifference / 2)\r\n\t\t      myTop = proxy.offset.top - tooltipHeight - offsetY - 12\r\n\t\t      dontGoOffScreenX()\r\n\t\t      dontGoOffScreenY 'bottom', 'top'\r\n\t\t    if practicalPosition == 'top-left'\r\n\t\t      myLeft = proxy.offset.left + offsetX\r\n\t\t      myTop = proxy.offset.top - tooltipHeight - offsetY - 12\r\n\t\t      dontGoOffScreenX()\r\n\t\t      dontGoOffScreenY 'bottom-left', 'top-left'\r\n\t\t    if practicalPosition == 'top-right'\r\n\t\t      myLeft = proxy.offset.left + proxy.dimension.width + offsetX - tooltipWidth\r\n\t\t      myTop = proxy.offset.top - tooltipHeight - offsetY - 12\r\n\t\t      dontGoOffScreenX()\r\n\t\t      dontGoOffScreenY 'bottom-right', 'top-right'\r\n\t\t    if practicalPosition == 'bottom'\r\n\t\t      leftDifference = proxy.offset.left + tooltipWidth - (proxy.offset.left + proxy.dimension.width)\r\n\t\t      myLeft = proxy.offset.left - (leftDifference / 2) + offsetX\r\n\t\t      myTop = proxy.offset.top + proxy.dimension.height + offsetY + 12\r\n\t\t      dontGoOffScreenX()\r\n\t\t      dontGoOffScreenY 'top', 'bottom'\r\n\t\t    if practicalPosition == 'bottom-left'\r\n\t\t      myLeft = proxy.offset.left + offsetX\r\n\t\t      myTop = proxy.offset.top + proxy.dimension.height + offsetY + 12\r\n\t\t      dontGoOffScreenX()\r\n\t\t      dontGoOffScreenY 'top-left', 'bottom-left'\r\n\t\t    if practicalPosition == 'bottom-right'\r\n\t\t      myLeft = proxy.offset.left + proxy.dimension.width + offsetX - tooltipWidth\r\n\t\t      myTop = proxy.offset.top + proxy.dimension.height + offsetY + 12\r\n\t\t      dontGoOffScreenX()\r\n\t\t      dontGoOffScreenY 'top-right', 'bottom-right'\r\n\t\t    if practicalPosition == 'left'\r\n\t\t      myLeft = proxy.offset.left - offsetX - tooltipWidth - 12\r\n\t\t      myLeftMirror = proxy.offset.left + offsetX + proxy.dimension.width + 12\r\n\t\t      topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height)\r\n\t\t      myTop = proxy.offset.top - (topDifference / 2) - offsetY\r\n\t\t      # if the tooltip goes off boths sides of the page\r\n\t\t      if myLeft < 0 and myLeftMirror + tooltipWidth > windowWidth\r\n\t\t        borderWidth = parseFloat(self.$tooltip.css('border-width')) * 2\r\n\t\t        newWidth = tooltipWidth + myLeft - borderWidth\r\n\t\t        self.$tooltip.css 'width', newWidth + 'px'\r\n\t\t        tooltipHeight = self.$tooltip.outerHeight(false)\r\n\t\t        myLeft = proxy.offset.left - offsetX - newWidth - 12 - borderWidth\r\n\t\t        topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height)\r\n\t\t        myTop = proxy.offset.top - (topDifference / 2) - offsetY\r\n\t\t      else if myLeft < 0\r\n\t\t        myLeft = proxy.offset.left + offsetX + proxy.dimension.width + 12\r\n\t\t        arrowReposition = 'left'\r\n\t\t    if practicalPosition == 'right'\r\n\t\t      myLeft = proxy.offset.left + offsetX + proxy.dimension.width + 12\r\n\t\t      myLeftMirror = proxy.offset.left - offsetX - tooltipWidth - 12\r\n\t\t      topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height)\r\n\t\t      myTop = proxy.offset.top - (topDifference / 2) - offsetY\r\n\t\t      # if the tooltip goes off boths sides of the page\r\n\t\t      if myLeft + tooltipWidth > windowWidth and myLeftMirror < 0\r\n\t\t        borderWidth = parseFloat(self.$tooltip.css('border-width')) * 2\r\n\t\t        newWidth = windowWidth - myLeft - borderWidth\r\n\t\t        self.$tooltip.css 'width', newWidth + 'px'\r\n\t\t        tooltipHeight = self.$tooltip.outerHeight(false)\r\n\t\t        topDifference = proxy.offset.top + tooltipHeight - (proxy.offset.top + proxy.dimension.height)\r\n\t\t        myTop = proxy.offset.top - (topDifference / 2) - offsetY\r\n\t\t      else if myLeft + tooltipWidth > windowWidth\r\n\t\t        myLeft = proxy.offset.left - offsetX - tooltipWidth - 12\r\n\t\t        arrowReposition = 'right'\r\n\t\t    # if arrow is set true, style it and append it\r\n\t\t    if self.options.arrow\r\n\t\t      arrowClass = 'tooltipster-arrow-' + practicalPosition\r\n\t\t      # set color of the arrow\r\n\t\t      if self.options.arrowColor.length < 1\r\n\t\t        arrowColor = self.$tooltip.css('background-color')\r\n\t\t      else\r\n\t\t        arrowColor = self.options.arrowColor\r\n\t\t      # if the tooltip was going off the page and had to re-adjust, we need to update the arrow's position\r\n\t\t      if !arrowReposition\r\n\t\t        arrowReposition = ''\r\n\t\t      else if arrowReposition == 'left'\r\n\t\t        arrowClass = 'tooltipster-arrow-right'\r\n\t\t        arrowReposition = ''\r\n\t\t      else if arrowReposition == 'right'\r\n\t\t        arrowClass = 'tooltipster-arrow-left'\r\n\t\t        arrowReposition = ''\r\n\t\t      else\r\n\t\t        arrowReposition = 'left:' + Math.round(arrowReposition) + 'px;'\r\n\t\t      # building the logic to create the border around the arrow of the tooltip\r\n\t\t      if practicalPosition == 'top' or practicalPosition == 'top-left' or practicalPosition == 'top-right'\r\n\t\t        tooltipBorderWidth = parseFloat(self.$tooltip.css('border-bottom-width'))\r\n\t\t        tooltipBorderColor = self.$tooltip.css('border-bottom-color')\r\n\t\t      else if practicalPosition == 'bottom' or practicalPosition == 'bottom-left' or practicalPosition == 'bottom-right'\r\n\t\t        tooltipBorderWidth = parseFloat(self.$tooltip.css('border-top-width'))\r\n\t\t        tooltipBorderColor = self.$tooltip.css('border-top-color')\r\n\t\t      else if practicalPosition == 'left'\r\n\t\t        tooltipBorderWidth = parseFloat(self.$tooltip.css('border-right-width'))\r\n\t\t        tooltipBorderColor = self.$tooltip.css('border-right-color')\r\n\t\t      else if practicalPosition == 'right'\r\n\t\t        tooltipBorderWidth = parseFloat(self.$tooltip.css('border-left-width'))\r\n\t\t        tooltipBorderColor = self.$tooltip.css('border-left-color')\r\n\t\t      else\r\n\t\t        tooltipBorderWidth = parseFloat(self.$tooltip.css('border-bottom-width'))\r\n\t\t        tooltipBorderColor = self.$tooltip.css('border-bottom-color')\r\n\t\t      if tooltipBorderWidth > 1\r\n\t\t        tooltipBorderWidth++\r\n\t\t      arrowBorder = ''\r\n\t\t      if tooltipBorderWidth != 0\r\n\t\t        arrowBorderSize = ''\r\n\t\t        arrowBorderColor = 'border-color: ' + tooltipBorderColor + ';'\r\n\t\t        if arrowClass.indexOf('bottom') != -1\r\n\t\t          arrowBorderSize = 'margin-top: -' + Math.round(tooltipBorderWidth) + 'px;'\r\n\t\t        else if arrowClass.indexOf('top') != -1\r\n\t\t          arrowBorderSize = 'margin-bottom: -' + Math.round(tooltipBorderWidth) + 'px;'\r\n\t\t        else if arrowClass.indexOf('left') != -1\r\n\t\t          arrowBorderSize = 'margin-right: -' + Math.round(tooltipBorderWidth) + 'px;'\r\n\t\t        else if arrowClass.indexOf('right') != -1\r\n\t\t          arrowBorderSize = 'margin-left: -' + Math.round(tooltipBorderWidth) + 'px;'\r\n\t\t        arrowBorder = '<span class=\"tooltipster-arrow-border\" style=\"' + arrowBorderSize + ' ' + arrowBorderColor + ';\"></span>'\r\n\t\t      # if the arrow already exists, remove and replace it\r\n\t\t      self.$tooltip.find('.tooltipster-arrow').remove()\r\n\t\t      # build out the arrow and append it\t\t\r\n\t\t      arrowConstruct = '<div class=\"' + arrowClass + ' tooltipster-arrow\" style=\"' + arrowReposition + '\">' + arrowBorder + '<span style=\"border-color:' + arrowColor + ';\"></span></div>'\r\n\t\t      self.$tooltip.append arrowConstruct\r\n\t\t    # position the tooltip\r\n\t\t    self.$tooltip.css\r\n\t\t      'top': Math.round(myTop) + 'px'\r\n\t\t      'left': Math.round(myLeft) + 'px'\r\n\t\t  self"]}