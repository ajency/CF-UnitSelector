{"version":3,"sources":["frontend/common/common.coffee"],"names":[],"mappings":"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","file":"frontend/common/common.js","sourceRoot":"/source/","sourcesContent":["#No Found Controller and veiw\r\nclass CommonFloor.NothingFoundView extends Marionette.ItemView\r\n\t\r\n\ttemplate : '#noFound-template'\r\n\r\nclass CommonFloor.NothingFoundCtrl extends Marionette.RegionController\r\n\r\n\tinitialize:->\r\n\t\t@show new CommonFloor.NothingFoundView\r\n\r\n#No Found Controller and veiw\r\nclass CommonFloor.NoUnitsView extends Marionette.ItemView\r\n\t\r\n\ttemplate : '<div>\r\n\t\t\t\t\t<div id=\"trig\" class=\"toggle-button\"></div>\r\n\t\t\t\t\t<div id=\"view_toggle\" class=\"toggle-view-button map\"></div>\r\n\t\t\t\t\t<div class=\"list-view-container w-map animated fadeIn\">\r\n\t\t\t\t\t\t<div class=\"text-center\" id=\"searchSorryPageWidget\">\r\n\t\t\t\t\t\t\t<div class=\"m-t-10 bldg-list\">\r\n\t\t\t\t\t\t\t\t<span class=\"icon-wondering\"></span>\r\n\t\t\t\t\t\t\t\t<div class=\"m-t-10\">Sorry! We havent found any properties matching your search.</div>\r\n\t\t\t\t\t\t\t\t<div>Please retry with different search options.</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>'\r\n\r\n\tui :\r\n\t\tviewtog \t: '#view_toggle'\r\n\t\ttrig \t\t: '#trig'\r\n\r\n\tevents :\r\n\t\t'click @ui.trig':(e)->\r\n\t\t\t$('.list-container').toggleClass 'closed'\r\n\r\n\t\t'click @ui.viewtog':(e)->\r\n\t\t\t$('.us-left-content').toggleClass 'not-visible visible'\r\n\t\t\t$('.us-right-content').toggleClass 'not-visible visible'\r\n\r\nclass CommonFloor.NoUnitsCtrl extends Marionette.RegionController\r\n\r\n\tinitialize:->\r\n\t\t@show new CommonFloor.NoUnitsView\r\n\r\n#api required to load second step\r\nCommonFloor.loadJSONData = ()->\r\n\r\n\t$.ajax\r\n\t\ttype : 'GET',\r\n\t\turl  : BASERESTURL+'/project/'+\tPROJECTID+'/step-two'\r\n\t\tasync : false\r\n\t\tsuccess :(response)->\r\n\r\n\t\t\t#parsing the integer fields \r\n\t\t\tresponse = window.convertToInt(response)\r\n\t\t\tresponse = response.data\r\n\t\t\tbunglowVariantCollection.setBunglowVariantAttributes(response.bunglow_variants)\r\n\t\t\tsettings.setSettingsAttributes(response.settings)\r\n\t\t\tunitTypeCollection.setUnitTypeAttributes(response.unit_types)\r\n\t\t\tbuildingCollection.setBuildingAttributes(response.buildings)\r\n\t\t\tapartmentVariantCollection.setApartmentVariantAttributes(response.apartment_variants)\r\n\t\t\tfloorLayoutCollection.setFloorLayoutAttributes(response.floor_layout)\r\n\t\t\twindow.propertyTypes = response.property_types\r\n\t\t\tplotVariantCollection.setPlotVariantAttributes(response.plot_variants)\r\n\t\t\tunitCollection.setUnitAttributes(response.units)\r\n\t\t\t\r\n\r\n\t\t\t\r\n\t\terror :(response)->\r\n\t\t\t@region =  new Marionette.Region el : '#noFound-template'\r\n\t\t\tnew CommonFloor.ProjectCtrl region : @region\r\n\t\t\t\r\n\r\n#find the property type with maximum number of units\r\nCommonFloor.propertyMaxUnits = ()->\r\n\tRouter = []\r\n\tRouter.push \r\n\t\t'type'  : 'bunglows'\r\n\t\t'count' :bunglowVariantCollection.getBunglowUnits()\r\n\tRouter.push \r\n\t\t'type'  : 'building'\r\n\t\t'count' :apartmentVariantCollection.getApartmentUnits()\r\n\tRouter.push \r\n\t\t'type'  : 'plot'\r\n\t\t'count' :plotVariantCollection.getPlotUnits()\r\n\t\r\n\tcontroller = _.max Router , (item)->\r\n\t\treturn parseInt item.count.length\r\n\r\n\tcontroller\t\r\n\r\n\t\r\n#function to load the default controller fro master view\r\nCommonFloor.checkPropertyType = ()->\r\n\tCommonFloor.loadJSONData()\r\n\tif Object.keys(project.get('project_master')).length  ==  0\r\n\t\tCommonFloor.navigate '#/list-view' , true\r\n\t\tCommonFloor.router.storeRoute()\r\n\telse\r\n\t\tCommonFloor.navigate '#/master-view' , true\r\n\t\tCommonFloor.router.storeRoute()\r\n\r\n#function to load the default controller for list view \r\nCommonFloor.checkListView = ()->\r\n\tcontroller = CommonFloor.propertyMaxUnits()\r\n\t#CommonFloor.navigate '#/list-view/'+controller.type , true\r\n\r\n\r\n#funtion to convert string into integers\r\nwindow.convertToInt = (response)->\r\n\t$.each response ,(index,value)->\r\n\t\t$.map(value,(item)->\r\n\r\n\t\t\t$.each item ,(ind,val)->\r\n\t\t\t\treturn parseInt val\r\n\t)\r\n\r\n#function to convert value into price format\r\nwindow.numDifferentiation = (val)->\r\n\tif (val >= 10000000) \r\n\t\tval = (val/10000000).toFixed(2) \r\n\t\tdecimal  = val.split('.')[1]\r\n\t\tvalBudget = decimal % 5\r\n\t\tvalBudget = valBudget / 100 \r\n\t\tval = val - valBudget\r\n\t\tval = val.toFixed(2) \r\n\t\tval = val + ' Cr'\r\n\telse if (val >= 100000) \r\n\t\tval = (val/100000).toFixed(2) \r\n\t\tdecimal  = val.split('.')[1]\r\n\t\tvalBudget = decimal % 5\r\n\t\tvalBudget = valBudget / 100 \r\n\t\tval = val - valBudget\r\n\t\tval = val.toFixed(2) \r\n\t\tval = val + ' Lac'\r\n\telse if(val >= 1000) \r\n\t\tval = (val/1000).toFixed(2) \r\n\t\tdecimal  = val.split('.')[1]\r\n\t\tvalBudget = decimal % 5\r\n\t\tvalBudget = valBudget / 100 \r\n\t\tval = val - valBudget\r\n\t\tval = val.toFixed(2) \r\n\t\tval = val + ' K'\r\n\r\n\tval\r\n\r\n\r\n# function to calclate percentage\r\nwindow.calculatePerc = (value,total)->\r\n\tvalue = parseInt value\r\n\ttotal = parseInt total\r\n\r\n\tperc = value/total\r\n\tperc = perc * 100\r\n\tperc = perc.toFixed(2)\r\n\tperc\r\n\r\n\t   \r\n#function to convert value into price format\t\t\r\nwindow.convertRupees = (val)->\r\n\r\n\t$('#price').autoNumeric('init')\r\n\t$('#price').autoNumeric('set', val)\r\n\r\n \r\n#Get all the property type with the count of units\r\nCommonFloor.propertyTypes = ()->\r\n\tRouter = []\r\n\tif bunglowVariantCollection.getBunglowUnits().length != 0\r\n\t\tRouter.push \r\n\t\t\t'type'  : s.capitalize 'villa(s)'\r\n\t\t\t'count' :bunglowVariantCollection.getBunglowUnits()\r\n\t\t\t'type_name' : '(V)'\r\n\tif apartmentVariantCollection.getApartmentUnits().length != 0 || apartmentVariantCollection.getPenthouseUnits().length != 0\r\n\t\ttemp = []\r\n\t\t$.merge temp ,apartmentVariantCollection.getApartmentUnits()\r\n\t\t$.merge temp ,apartmentVariantCollection.getPenthouseUnits()\r\n\t\tRouter.push \r\n\t\t\t'type'  : s.capitalize 'apartment(s)/Penthouse(s)'\r\n\t\t\t'count' :temp\r\n\t\t\t'type_name' : '(A)/(PH)'\r\n\tif plotVariantCollection.getPlotUnits().length != 0\r\n\t\tRouter.push \r\n\t\t\t'type'  : s.capitalize 'plot(s)'\r\n\t\t\t'count' :plotVariantCollection.getPlotUnits()\r\n\t\t\t'type_name' : '(P)'\r\n\tcontroller = _.max Router , (item)->\r\n\t\treturn parseInt item.count.length\r\n\r\n\r\n\tRouter\r\n\r\n#Get all the property type with the count of units\r\nCommonFloor.masterPropertyTypes = ()->\r\n\tRouter = []\r\n\tif bunglowVariantCollection.getBunglowMasterUnits().length != 0\r\n\t\tRouter.push \r\n\t\t\t'type'  : s.capitalize 'villas'\r\n\t\t\t'count' :bunglowVariantCollection.getBunglowMasterUnits()\r\n\t\t\t'type_name' : '(V)'\r\n\t\t\t'name' : 'villa'\r\n\tif apartmentVariantCollection.getApartmentMasterUnits().length != 0\r\n\t\tRouter.push \r\n\t\t\t'type'  : s.capitalize 'apartments'\r\n\t\t\t'count' :apartmentVariantCollection.getApartmentMasterUnits()\r\n\t\t\t'type_name' : '(A)'\r\n\t\t\t'name' : 'apartment'\r\n\tif plotVariantCollection.getPlotMasterUnits().length != 0\r\n\t\tRouter.push \r\n\t\t\t'type'  : s.capitalize 'plots'\r\n\t\t\t'count' :plotVariantCollection.getPlotMasterUnits()\r\n\t\t\t'type_name' : '(P)'\r\n\t\t\t'name' : 'plot'\r\n\tcontroller = _.max Router , (item)->\r\n\t\treturn parseInt item.count.length\r\n\r\n\r\n\tRouter\r\n\r\n# CommonFloor.applyVillaClasses = (classname) ->\r\n# \t$('.villa').each (ind,item)->\r\n# \t\tid = parseInt item.id\r\n# \t\tunit = unitCollection.findWhere \r\n# \t\t\tid :  id \r\n\t\t\r\n# \t\tif ! _.isUndefined unit \r\n# \t\t\tavailability = unit.get('availability')\r\n# \t\t\tavailability = s.decapitalize(availability)\r\n# \t\t\t$('#'+id).attr('class' , 'layer villa '+availability)\r\n\t\t\t\r\n\t\t\t\r\n\r\n\r\n# CommonFloor.applyAptClasses = (classname) ->\r\n# \t$('.apartment').each (ind,item)->\r\n# \t\tid = parseInt item.id\r\n# \t\tunit = unitCollection.findWhere \r\n# \t\t\tid :  id \r\n\t\t\r\n# \t\tif ! _.isUndefined unit \r\n# \t\t\tavailability = unit.get('availability')\r\n# \t\t\tavailability = s.decapitalize(availability)\r\n# \t\t\t$('#'+id).attr('class' , 'layer apartment '+availability)\r\n\t\t\t\r\n\t\t\t\r\n\r\n\r\nCommonFloor.applyAvailabilClasses = (classname)->\r\n\t$('.layer').each (ind,item)->\r\n\t\tid = parseInt item.id\r\n\t\tclass_name = $('#'+id).attr('class')\r\n\t\t# if classname != \"\"\r\n\t\t# \tclass_name = classname\r\n\t\tunit = unitCollection.findWhere \r\n\t\t\tid :  id \r\n\t\t\r\n\t\tif ! _.isUndefined unit \r\n\t\t\tavailability = unit.get('availability')\r\n\t\t\tavailability = s.decapitalize(availability)\r\n\t\t\t$('#'+id).attr('class' ,class_name+' '+availability)\r\n\r\n\t$('.building').each (ind,item)->\r\n\t\tid = parseInt item.id\r\n\t\tclass_name = $('#'+id).attr('class')\r\n\t\tunit = unitCollection.where \r\n\t\t\t'building_id' :  id \r\n\t\t\t'availability' : 'available'\r\n\t\tif unit.length > 0 \r\n\t\t\t$('#'+id).attr('class' ,class_name+' available')\r\n\t\telse\r\n\t\t\t$('#'+id).attr('class' ,class_name+' sold')\r\n\t\t\t\r\n\t\t\t\r\nCommonFloor.randomClass = ()->\r\n\t$('.layer').each (ind,item)->\r\n\t\tid = parseInt item.id\r\n\t\t$('#'+id).attr('style' , 'transform: rotateY(0deg) scale(1); -webkit-transform: rotateY(0deg) scale(1);')\r\n\t\t\r\n\r\n\r\n\r\n\r\nCommonFloor.filter = ()->\r\n\t#check whether url contains any parameters\r\n\tif  window.location.href.indexOf('=') > -1\r\n\t\tparams = params\r\n\t\tparamsArray = params.split('&')\r\n\t\t#loop through all the parameters\r\n\t\tfor element,index in paramsArray\r\n\t\t\tparam_key = element.split('=')\r\n\t\t\tCommonFloor.defaults[param_key[0]] = param_key[1]\r\n\r\n\r\n\t\t#set the params with the filters selected by the user\r\n\t\tparams = 'type:'+CommonFloor.defaults['type']+'&unit_variant_id:'+CommonFloor.defaults['unitVariants']+'&unit_type_id:'+CommonFloor.defaults['unitTypes']+\r\n\t\t\t\t'&price_min:'+CommonFloor.defaults['price_min']+'&price_max:'+CommonFloor.defaults['price_max']+\r\n\t\t\t\t'&availability:'+CommonFloor.defaults['availability']+'&area_min:'+CommonFloor.defaults['area_min']+\r\n\t\t\t\t'&area_max:'+CommonFloor.defaults['area_max']+'&building_id:'+CommonFloor.defaults['building']+\r\n\t\t\t\t'&floor_min:'+CommonFloor.defaults['floor_min']+'&floor_max:'+CommonFloor.defaults['floor_max']+\r\n\t\t\t\t'&flooring:'+CommonFloor.defaults['flooring']\r\n\telse\r\n\r\n\t\t#url doesnt contain any parameters take the value of the defaults\r\n\t\tparams = 'type:'+CommonFloor.defaults['type']+'&unit_variant_id:'+CommonFloor.defaults['unitVariants']+'&unit_type_id:'+CommonFloor.defaults['unitTypes']+\r\n\t\t\t\t'&price_min:'+CommonFloor.defaults['price_min']+'&price_max:'+CommonFloor.defaults['price_max']+\r\n\t\t\t\t'&availability:'+CommonFloor.defaults['availability']+'&area_min:'+CommonFloor.defaults['area_min']+\r\n\t\t\t\t'&area_max:'+CommonFloor.defaults['area_max']+'&building_id:'+CommonFloor.defaults['building']+\r\n\t\t\t\t'&floor_min:'+CommonFloor.defaults['floor_min']+'&floor_max:'+CommonFloor.defaults['floor_max']+\r\n\t\t\t\t'&flooring:'+CommonFloor.defaults['flooring']\r\n\r\n\r\n\tparam_arr = params.split('&')\r\n\t$.each param_arr, (index,value)->\r\n\t\t\tvalue_arr  =  value.split(':')\r\n\t\t\tparam_key = value_arr[0]\r\n\t\t\tif param_key == 'type' && value_arr[1] != \"\"\r\n\t\t\t\tCommonFloor.resetCollections()\r\n\t\t\t\tcollection = CommonFloor.resetProperyType(value_arr[1])\t\r\n\t\t\tif param_key != 'price_min' && param_key != 'price_max' && value_arr[1] != \"\" && param_key != 'area_min' && param_key != 'area_max' && param_key != 'type' && param_key != 'floor_min' && param_key != 'floor_max' &&  param_key != 'flooring'\r\n\t\t\t\tparam_val = value_arr[1]\r\n\t\t\t\tparam_val_arr = param_val.split(',')\r\n\t\t\t\tcollection = []\r\n\t\t\t\t$.each param_val_arr, (index,value)->\r\n\t\t\t\t\t\tparamkey = {}\r\n\t\t\t\t\t\tparamkey[param_key] = parseInt(value)\r\n\t\t\t\t\t\tif param_key == 'availability'\r\n\t\t\t\t\t\t\tparamkey[param_key] = value\r\n\t\t\t\t\t\t$.merge collection, unitCollection.where paramkey\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tunitCollection.reset collection\r\n\tif CommonFloor.defaults['price_max'] != \"\"\r\n\t\tCommonFloor.filterBudget()\r\n\tif CommonFloor.defaults['area_max'] != \"\"\r\n\t\tCommonFloor.filterArea()\r\n\tif CommonFloor.defaults['floor_max'] != \"\"\r\n\t\tCommonFloor.filterFloor()\r\n\tif CommonFloor.defaults['flooring'] != \"\"\r\n\t\tCommonFloor.filterFlooringAttributes()\r\n\tCommonFloor.resetCollections()\r\n\tCommonFloor.applyFliterClass()\r\n\t\r\n\t\r\n\r\nCommonFloor.resetProperyType = (param)->\r\n\tcollection = []\r\n\tif param == 'villa'\r\n\t\t$.merge collection , bunglowVariantCollection.getBunglowUnits()\r\n\tif param == 'apartment'\r\n\t\t$.merge collection , apartmentVariantCollection.getApartmentUnits()\r\n\t\t$.merge collection , apartmentVariantCollection.getPenthouseUnits()\r\n\tif param == 'plot'\r\n\t\t$.merge collection , plotVariantCollection.getPlotUnits()\r\n\tcollection\r\n\t\r\n\r\nCommonFloor.applyFliterClass = ()->\r\n\tactualunits = _.pluck unitMasterCollection.toArray() ,'id'\r\n\tfilterunits = _.pluck unitCollection.toArray() ,'id'\r\n\tnotSelecteUnits = _.difference actualunits , filterunits\r\n\tactualbuildings = _.pluck buildingMasterCollection.toArray() ,'id'\r\n\tfilterbuildings = _.pluck buildingCollection.toArray() ,'id'\r\n\tnotSelectebuildings = _.difference actualbuildings , filterbuildings\r\n\tflag = CommonFloor.applyNonFilterClass()\r\n\tif flag == 0\r\n\t\treturn false\r\n\t$('.villa,.plot,.apartment').each (ind,item)->\r\n\t\tid = parseInt item.id\r\n\t\tif $.inArray(id , filterunits) > -1\r\n\t\t\tsetTimeout( ()->\r\n\t\t\t\t$('#'+id).attr('style', ' stroke-width: 3px; stroke-dasharray: 320 0;stroke-dashoffset: 0;stroke:#F68121; transform: rotateY(0deg) scale(1); -webkit-transform: rotateY(0deg) scale(1);');\r\n\t\t\t,Math.random() * 1000)\r\n\t\t\t\r\n\t\telse\r\n\t\t\tsetTimeout( ()->\r\n\t\t\t\t$('#'+id).attr('style', ' stroke-width: 0px; stroke-dasharray: 320 0;stroke-dashoffset: 0;transform: rotateY(0deg) scale(1); -webkit-transform: rotateY(0deg) scale(1);');\r\n\t\t\t,Math.random() * 1000)\r\n\t\t\t\r\n\r\n\t$('.building').each (ind,item)->\r\n\t\ttypes = []\r\n\t\tif CommonFloor.defaults['type']!= \"\"\r\n\t\t\ttypes = CommonFloor.defaults['type'].split(',')\r\n\t\tid = parseInt item.id\r\n\t\tif $.inArray('villa',types) ==  -1 && $.inArray('plot',types) ==  -1\r\n\t\t\tif $.inArray(id , filterbuildings) > -1 && filterbuildings.length != 0 && buildingCollection.length isnt 0\r\n\t\t\t\tsetTimeout( ()->\r\n\t\t\t\t\t$('#'+id).attr('style', ' stroke-width: 3px; stroke-dasharray: 320 0;stroke-dashoffset: 0; stroke:#F68121; transform: rotateY(0deg) scale(1);-webkit-transform: rotateY(0deg) scale(1);');\r\n\t\t\t\t,Math.random() * 1000)\r\n\t\t\t\t\r\n\t\t\telse\r\n\t\t\t\tsetTimeout( ()->\r\n\t\t\t\t\t$('#'+id).attr('style', ' stroke-width: 0px; stroke-dasharray: 320 0;stroke-dashoffset: 0; transform: rotateY(0deg) scale(1);-webkit-transform: rotateY(0deg) scale(1);');\r\n\t\t\t\t,Math.random() * 1000)\r\n\t\telse\r\n\t\t\tsetTimeout( ()->\r\n\t\t\t\t\t$('#'+id).attr('style', ' stroke-width: 0px; stroke-dasharray: 320 0;stroke-dashoffset: 0; transform: rotateY(0deg) scale(1);-webkit-transform: rotateY(0deg) scale(1);');\r\n\t\t\t\t,Math.random() * 1000)\r\n\r\nCommonFloor.applyNonFilterClass = ()->\r\n\tflag = 0\r\n\tif CommonFloor.defaults['type']  != \"\"\r\n\t\t\t\tflag = 1\r\n\t$.each CommonFloor.defaults['apartment'],(index,value)->\r\n\t\tif value  != \"\" && !(_.isEmpty value)\r\n\t\t\tflag = 1\r\n\t$.each CommonFloor.defaults['plot'],(index,value)->\r\n\t\tif value  != \"\" && !(_.isEmpty value)\r\n\t\t\tflag = 1\r\n\t$.each CommonFloor.defaults['villa'],(index,value)->\r\n\t\tif value  != \"\" && !(_.isEmpty value)\r\n\t\t\tflag = 1\r\n\t$.each CommonFloor.defaults['common'],(index,value)->\r\n\t\tif value  != \"\" \r\n\t\t\tflag = 1\r\n\r\n\tif flag == 0\r\n\t\t$('.villa,.plot,.apartment').each (ind,item)->\r\n\t\t\tid = parseInt item.id\r\n\t\t\t$('#'+id).attr('style', ' stroke-width: 0px; stroke-dasharray: 320 0;stroke-dashoffset: 0;transform: rotateY(0deg) scale(1);-webkit-transform: rotateY(0deg) scale(1);');\r\n\t\t\t\r\n\t\t$('.building').each (ind,item)->\r\n\t\t\tid = parseInt item.id\r\n\t\t\t$('#'+id).attr('style', ' stroke-width: 0px; stroke-dasharray: 320 0;stroke-dashoffset: 0;transform: rotateY(0deg) scale(1);-webkit-transform: rotateY(0deg) scale(1);');\r\n\t\t\t\r\n\treturn flag\r\n\t\t\t\r\n\r\n\r\nCommonFloor.resetCollections = ()->\r\n\tapartments = []\r\n\tbunglows   = []\r\n\tunitTypes = []\r\n\tplots = []\r\n\tbuildings = []\r\n\tunitCollection.each (item)->\r\n\t\tunitType = unitTypeMasterCollection.findWhere\r\n\t\t\t\t\t\t\t'id' :  item.get('unit_type_id')\r\n\t\tif item.get('building_id') != 0 \r\n\t\t\tbuilding = buildingMasterCollection.findWhere\r\n\t\t\t\t\t\t'id' : item.get('building_id')\r\n\t\t\tbuildings.push building\r\n\t\tproperty = window.propertyTypes[unitType.get('property_type_id')]\r\n\t\tif s.decapitalize(property) == 'apartments' || s.decapitalize(property) == 'penthouses'\r\n\t\t\tapartments.push apartmentVariantMasterCollection.get(item.get('unit_variant_id'))\r\n\t\tif s.decapitalize(property) == 'villas/Bungalows'\r\n\t\t\tbunglows.push bunglowVariantMasterCollection.get(item.get('unit_variant_id'))\r\n\t\tif s.decapitalize(property) == 'plots'\r\n\t\t\tplots.push plotVariantMasterCollection.get(item.get('unit_variant_id'))\r\n\t\tunitTypes.push unitType\r\n\t\t\r\n\tapartmentVariantCollection.reset apartments\r\n\tbunglowVariantCollection.reset bunglows\r\n\tplotVariantCollection.reset plots\r\n\tunitTypeCollection.reset unitTypes\r\n\tbuildingCollection.reset buildings\r\n\tunitCollection.reset unitCollection.toArray()\r\n\t\r\n\r\nCommonFloor.filterBudget = ()->\r\n\tCommonFloor.resetCollections()\r\n\tbudget = []\r\n\tunitCollection.each (item)->\r\n\t\tunitPrice = parseFloat window.unit.getFilterUnitDetails(item.get('id'))[3]\r\n\t\tif unitPrice >= parseFloat(CommonFloor.defaults['common']['price_min']) && unitPrice <= parseFloat(CommonFloor.defaults['common']['price_max'])\r\n\t\t\tbudget.push item\r\n\r\n\tunitCollection.reset budget\r\n\r\nCommonFloor.filterFloor = ()->\r\n\tCommonFloor.resetCollections()\r\n\tfloorArr = []\r\n\tunitCollection.each (item)->\r\n\t\tfloor = item.get 'floor'\r\n\t\tif floor >= parseInt(CommonFloor.defaults['common']['floor_min']) && floor <= parseInt(CommonFloor.defaults['common']['floor_max'])\r\n\t\t\tfloorArr.push item\r\n\r\n\tunitCollection.reset floorArr\r\n\r\nCommonFloor.filterArea = ()->\r\n\tCommonFloor.resetCollections()\r\n\tareaArr = []\r\n\tunitCollection.each (item)->\r\n\t\tarea = item.get('area')\r\n\t\tif area >= parseFloat(CommonFloor.defaults['common']['area_min']) && area <= parseFloat(CommonFloor.defaults['common']['area_max'])\r\n\t\t\tareaArr.push item\r\n\r\n\tunitCollection.reset areaArr\r\n\r\nCommonFloor.getFilters = ()->\r\n\tunitTypes = []\r\n\tunitVariants = []\r\n\tresults = []\r\n\tflooring = []\r\n\ttype = []\r\n\tfilters = []\r\n\tprice = []\r\n\tarea = []\r\n\ttype= []\r\n\tstatus= []\r\n\tfloor = []\r\n\tmain = []\r\n\tviews = []\r\n\tfacings = []\r\n\tif CommonFloor.defaults['common']['price_max'] != \"\"\r\n\t\tmin_price = window.numDifferentiation CommonFloor.defaults['common']['price_min']\r\n\t\tmax_price = window.numDifferentiation CommonFloor.defaults['common']['price_max']\r\n\t\tprice.push \r\n\t\t\t\t'name' : min_price+'-'+max_price\r\n\t\t\t\t'type'  : '' \r\n\t\t\t\t'id' : 'budget'\r\n\t\t\t\t'id_name' : 'filter_budget'\r\n\t\t\t\t'classname' : 'budget'\r\n\r\n\tif CommonFloor.defaults['common']['area_max'] != \"\"\r\n\t\tarea_min = CommonFloor.defaults['common']['area_min']\r\n\t\tarea_max = CommonFloor.defaults['common']['area_max']\r\n\t\tarea.push \r\n\t\t\t\t'name' : area_min+'-'+area_max\r\n\t\t\t\t'type'  : project.get('measurement_units') \r\n\t\t\t\t'id' : 'area'\r\n\t\t\t\t'id_name' : 'filter_area'\r\n\t\t\t\t'classname' : 'area'\r\n\r\n\tif CommonFloor.defaults['common']['floor_max'] != \"\"\r\n\t\tfloor_min = CommonFloor.defaults['common']['floor_min']\r\n\t\tfloor_max = CommonFloor.defaults['common']['floor_max']\r\n\t\tfloor.push \r\n\t\t\t\t'name' : 'Floor ' +floor_min+'-'+floor_max\r\n\t\t\t\t'type'  : '' \r\n\t\t\t\t'id' : 'floor'\r\n\t\t\t\t'id_name' : 'filter_floor'\r\n\t\t\t\t'classname' : 'floor'\r\n\r\n\tif CommonFloor.defaults['common']['availability'] != \"\"\r\n\t\tstatus.push \r\n\t\t\t'name' : 'Available'\r\n\t\t\t'classname' : 'types'\r\n\t\t\t'id'\t\t: 'available'\r\n\t\t\t'id_name' : 'filter_available'\r\n\r\n\tif CommonFloor.defaults['common']['views'] != \"\"\r\n\t\t$.each CommonFloor.defaults['common']['views'].split(',') , (index,value)->\r\n\r\n\t\t\tviews.push \r\n\t\t\t\t'name' : value\r\n\t\t\t\t'classname' : 'views'\r\n\t\t\t\t'id'\t\t: value\r\n\t\t\t\t'id_name' : 'filter_'+value\r\n\r\n\tif CommonFloor.defaults['common']['facings'] != \"\"\r\n\t\t$.each CommonFloor.defaults['common']['facings'].split(',') , (index,value)->\r\n\r\n\t\t\tfacings.push \r\n\t\t\t\t'name' : value\r\n\t\t\t\t'classname' : 'facings'\r\n\t\t\t\t'id'\t\t: value\r\n\t\t\t\t'id_name' : 'filter_'+value\r\n\r\n\tif CommonFloor.defaults['type'] != \"\"\r\n\t\ttypeArr = CommonFloor.defaults['type'].split(',')\r\n\t\t$.each typeArr, (index,value)->\r\n\t\t\tname = s.capitalize(value) \r\n\t\t\tname = name+'(s)'\r\n\t\t\tif value == 'apartment'\r\n\t\t\t\tname = 'Apartment(s)/Penthouse(s)'\r\n\t\t\t\tfilters = CommonFloor.getApartmentFilters()\r\n\t\t\tif value == 'villa'\r\n\t\t\t\tfilters = CommonFloor.getVillaFilters()\r\n\t\t\tif value == 'plot'\r\n\t\t\t\tfilters = CommonFloor.getPlotFilters()\r\n\t\t\t$.each filters,(index,value)->\r\n\t\t\t\tif value.length == 0 \r\n\t\t\t\t\tfilters = _.omit(filters, index)\r\n\t\t\tif Object.keys(filters).length == 0\r\n\t\t\t\tfilters = []\r\n\r\n\t\t\ttype.push \r\n\t\t\t\t'name' : name\r\n\t\t\t\t'classname' : 'types'\r\n\t\t\t\t'id'\t\t: value\r\n\t\t\t\t'id_name' : 'filter_'+value\r\n\t\t\t\t'filters' : filters\r\n\t\t\t\t\r\n\r\n\tmain.push \r\n\t\t'filters' : type\r\n\t\t'area' : area\r\n\t\t'price' : price\r\n\t\t'floor' : floor\r\n\t\t'status' : status\r\n\t\t'views' : views\r\n\t\t'facings' : facings\r\n\r\n\t\r\n\t# $.each main,(index,value)->\r\n\t# \tif value.length == 0\r\n\t# \t\tmain[index] = []\r\n\tmain\r\n\r\nCommonFloor.getStepFilters = ()->\r\n\tunitTypes = []\r\n\tunitVariants = []\r\n\tresults = []\r\n\tflooring = []\r\n\ttype = []\r\n\tfilters = []\r\n\tprice = []\r\n\tarea = []\r\n\ttype= []\r\n\tstatus= []\r\n\tfloor = []\r\n\tmain = []\r\n\tviews = []\r\n\tfacings = []\r\n\tif CommonFloor.defaults['common']['price_max'] != \"\"\r\n\t\tmin_price = window.numDifferentiation CommonFloor.defaults['common']['price_min']\r\n\t\tmax_price = window.numDifferentiation CommonFloor.defaults['common']['price_max']\r\n\t\tprice.push \r\n\t\t\t\t'name' : min_price+'-'+max_price\r\n\t\t\t\t'type'  : '' \r\n\t\t\t\t'id' : 'budget'\r\n\t\t\t\t'id_name' : 'filter_budget'\r\n\t\t\t\t'classname' : 'budget'\r\n\r\n\tif CommonFloor.defaults['common']['area_max'] != \"\"\r\n\t\tarea_min = CommonFloor.defaults['common']['area_min']\r\n\t\tarea_max = CommonFloor.defaults['common']['area_max']\r\n\t\tarea.push \r\n\t\t\t\t'name' : area_min+'-'+area_max\r\n\t\t\t\t'type'  : project.get('measurement_units') \r\n\t\t\t\t'id' : 'area'\r\n\t\t\t\t'id_name' : 'filter_area'\r\n\t\t\t\t'classname' : 'area'\r\n\r\n\tif CommonFloor.defaults['common']['floor_max'] != \"\"\r\n\t\tfloor_min = CommonFloor.defaults['common']['floor_min']\r\n\t\tfloor_max = CommonFloor.defaults['common']['floor_max']\r\n\t\tfloor.push \r\n\t\t\t\t'name' : 'Floor ' +floor_min+'-'+floor_max\r\n\t\t\t\t'type'  : '' \r\n\t\t\t\t'id' : 'floor'\r\n\t\t\t\t'id_name' : 'filter_floor'\r\n\t\t\t\t'classname' : 'floor'\r\n\r\n\tif CommonFloor.defaults['common']['availability'] != \"\"\r\n\t\tstatus.push \r\n\t\t\t'name' : 'Available'\r\n\t\t\t'classname' : 'types'\r\n\t\t\t'id'\t\t: 'available'\r\n\t\t\t'id_name' : 'filter_available'\r\n\r\n\tif CommonFloor.defaults['common']['views'] != \"\"\r\n\t\t$.each CommonFloor.defaults['common']['views'].split(',') , (index,value)->\r\n\r\n\t\t\tviews.push \r\n\t\t\t\t'name' : value\r\n\t\t\t\t'classname' : 'views'\r\n\t\t\t\t'id'\t\t: value\r\n\t\t\t\t'id_name' : 'filter_'+value\r\n\r\n\tif CommonFloor.defaults['common']['facings'] != \"\"\r\n\t\t$.each CommonFloor.defaults['common']['facings'].split(',') , (index,value)->\r\n\r\n\t\t\tfacings.push \r\n\t\t\t\t'name' : value\r\n\t\t\t\t'classname' : 'facings'\r\n\t\t\t\t'id'\t\t: value\r\n\t\t\t\t'id_name' : 'filter_'+value\r\n\r\n\tfilters = CommonFloor.getApartmentFilters()\r\n\t\t\t\r\n\tif Object.keys(filters).length == 0\r\n\t\tfilters = []\r\n\r\n\ttype.push \r\n\t\t'filters' : filters\r\n\t\t\t\t\r\n\r\n\tmain.push \r\n\t\t'area' : area\r\n\t\t'price' : price\r\n\t\t'floor' : floor\r\n\t\t'status' : status\r\n\t\t'views' : views\r\n\t\t'facings' : facings\r\n\t\t'filters' : type\r\n\t\t\r\n\r\n\r\n\t# $.each main,(index,value)->\r\n\t# \tif value.length == 0\r\n\t# \t\tmain = _.omit(main, index)\r\n\tmain\r\n\r\n\r\n\r\nCommonFloor.getFilters111 = ()->\r\n\tunitTypes = []\r\n\tunitVariants = []\r\n\tresults = []\r\n\tflooring = []\r\n\tvillaFilters = CommonFloor.getVillaFilters()\r\n\t$.merge unitTypes , villaFilters.unitTypes\r\n\t$.merge unitVariants , villaFilters.unitVariants\r\n\t$.merge flooring , villaFilters.flooring\r\n\t# apartmentFilters = CommonFloor.getApartmentFilters()\r\n\t# $.merge unitTypes , apartmentFilters.unitTypes\r\n\t# $.merge unitVariants , apartmentFilters.unitVariants\r\n\t# $.merge flooring , apartmentFilters.flooring\r\n\t# plotFilters = CommonFloor.getPlotFilters()\r\n\t# $.merge unitTypes , plotFilters.unitTypes\r\n\t# $.merge unitVariants , plotFilters.unitVariants\r\n\t# $.merge flooring , plotFilters.flooring\r\n\tprice = []\r\n\tarea = []\r\n\ttype= []\r\n\tstatus= []\r\n\tfloor = []\r\n\t# results.push\r\n\t# \t'type'\t: 'Villa(s)'\r\n\t# \t'count' : villaFilters.count\r\n\t# results.push\r\n\t# \t'type'\t: 'Apartment(s)/Penthouse(s)'\r\n\t# \t'count' : apartmentFilters.count\r\n\t# results.push\r\n\t# \t'type'\t: 'Plot(s)'\r\n\t# \t'count' : plotFilters.count\r\n\t# if CommonFloor.defaults['price_max'] != \"\"\r\n\t# \tmin_price = window.numDifferentiation CommonFloor.defaults['price_min']\r\n\t# \tmax_price = window.numDifferentiation CommonFloor.defaults['price_max']\r\n\t# \tprice.push \r\n\t# \t\t\t'name' : min_price+'-'+max_price\r\n\t# \t\t\t'type'  : '' \r\n\t# \t\t\t'id' : 'budget'\r\n\t# \t\t\t'id_name' : 'filter_budget'\r\n\t# \t\t\t'classname' : 'budget'\r\n\t# if CommonFloor.defaults['area_max'] != \"\"\r\n\t# \tarea_min = CommonFloor.defaults['area_min']\r\n\t# \tarea_max = CommonFloor.defaults['area_max']\r\n\t# \tarea.push \r\n\t# \t\t\t'name' : area_min+'-'+area_max\r\n\t# \t\t\t'type'  : project.get('measurement_units') \r\n\t# \t\t\t'id' : 'area'\r\n\t# \t\t\t'id_name' : 'filter_area'\r\n\t# \t\t\t'classname' : 'area'\r\n\r\n\t# if CommonFloor.defaults['floor_max'] != \"\"\r\n\t# \tfloor_min = CommonFloor.defaults['floor_min']\r\n\t# \tfloor_max = CommonFloor.defaults['floor_max']\r\n\t# \tfloor.push \r\n\t# \t\t\t'name' : 'Floor ' +floor_min+'-'+floor_max\r\n\t# \t\t\t'type'  : '' \r\n\t# \t\t\t'id' : 'floor'\r\n\t# \t\t\t'id_name' : 'filter_floor'\r\n\t# \t\t\t'classname' : 'floor'\r\n\r\n\tif CommonFloor.defaults['type'] != \"\"\r\n\t\ttypeArr = CommonFloor.defaults['type'].split(',')\r\n\t\t$.each typeArr, (index,value)->\r\n\t\t\tname = s.capitalize(value) \r\n\t\t\tname = name+'(s)'\r\n\t\t\tif value == 'apartement'\r\n\t\t\t\tname = 'Apartment(s)/Penthouse(s)'\r\n\t\t\ttype.push \r\n\t\t\t\t'name' : name\r\n\t\t\t\t'classname' : 'types'\r\n\t\t\t\t'id'\t\t: value\r\n\t\t\t\t'id_name' : 'filter_'+value\r\n\t\r\n\t# if CommonFloor.defaults['availability'] != \"\"\r\n\t# \tstatus.push \r\n\t# \t\t'name' : 'Available'\r\n\t# \t\t'classname' : 'types'\r\n\t# \t\t'id'\t\t: 'available'\r\n\t# \t\t'id_name' : 'filter_available'\r\n\tfilters = {'type' : type\r\n\t\t\t\t,'unitTypes' : unitTypes\r\n\t\t\t\t,'unitVariants' : unitVariants\r\n\t\t\t\t,'price' : price\r\n\t\t\t\t,'area' : area\r\n\t\t\t\t,'status' : status\r\n\t\t\t\t,'floor': floor\r\n\t\t\t\t,'flooring' : flooring\r\n\t\t\t\t}\r\n\t$.each filters,(index,value)->\r\n\t\tif value.length == 0\r\n\t\t\tfilters = _.omit(filters, index)\r\n\t$.each results,(index,value)->\r\n\t\tif value.count == 0\r\n\t\t\tresults = _.omit(results, index)\r\n\t[filters,results]\t\r\n\t\t\t\r\nCommonFloor.getVillaFilters = ()->\r\n\tunitVariants = []\r\n\tunit_variant = ''\r\n\tunitTypes = []\r\n\tunit_type = ''\r\n\tstatus = []\r\n\tflooring = []\r\n\t$.each CommonFloor.defaults['villa'],(ind,val)->\r\n\t\tif val != \"\" && ind != 'attributes'\r\n\t\t\tparam_val_arr = val.split(',')\r\n\t\t\t$.each param_val_arr, (index,value)->\r\n\t\t\t\tif value != \"\" && ind == 'unit_variant_id'\r\n\t\t\t\t\tif ! _.isUndefined bunglowVariantMasterCollection.get(parseInt(value))\r\n\t\t\t\t\t\tunit_variant = bunglowVariantMasterCollection.findWhere\r\n\t\t\t\t\t\t\t\t\t'id' : parseInt value\r\n\t\t\t\t\t\tunitVariants.push \r\n\t\t\t\t\t\t\t\t\t'typename':'villa'\r\n\t\t\t\t\t\t\t\t\t'name'\t: unit_variant.get 'unit_variant_name'\r\n\t\t\t\t\t\t\t\t\t'type'\t: '(V)'\r\n\t\t\t\t\t\t\t\t\t'classname' : 'variant_names'\r\n\t\t\t\t\t\t\t\t\t'id' : unit_variant.get 'id'\r\n\t\t\t\t\t\t\t\t\t'id_name' : 'filter_varinat_name'+unit_variant.get 'id'\r\n\t\t\t\t\t\t\t\t\t'index'  : ''\r\n\t\t\t\tif value != \"\" && ind == 'unit_type_id' && $.inArray(parseInt(value),bunglowVariantMasterCollection.getVillaUnitTypes()) > -1\r\n\t\t\t\t\tunit_type = unitTypeMasterCollection.findWhere\r\n\t\t\t\t\t\t\t\t\t'id' : parseInt value\r\n\r\n\t\t\t\t\tunitTypes.push \r\n\t\t\t\t\t\t\t\t'typename':'villa'\r\n\t\t\t\t\t\t\t\t'name' : unit_type.get 'name'\r\n\t\t\t\t\t\t\t\t'type'\t: '(V)'\r\n\t\t\t\t\t\t\t\t'classname' : 'unit_types'\r\n\t\t\t\t\t\t\t\t'id' : unit_type.get 'id'\r\n\t\t\t\t\t\t\t\t'id_name' : 'filter_unit_type'+unit_type.get 'id'\r\n\t\t\t\t\t\t\t\t'index'  : ''\r\n\t\telse if val != \"\" && ind == 'attributes'\r\n\t\t\t$.each val ,(ind1,val1)->\r\n\t\t\t\ttemp_var = val1.split(',')\r\n\t\t\t\t$.each temp_var , (indexkey,valkey)->\r\n\r\n\t\t\t\t\tif $.isNumeric(valkey)\r\n\t\t\t\t\t\ttemp = parseInt valkey\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\ttemp = valkey\r\n\t\t\t\t\tif valkey != \"\"  && $.inArray(temp,bunglowVariantMasterCollection.getVillaAttributes()) > -1\r\n\t\t\t\t\t\tflooring.push \r\n\t\t\t\t\t\t\t\t'typename':'villa'\r\n\t\t\t\t\t\t\t\t'name' : valkey\r\n\t\t\t\t\t\t\t\t'type'\t: '(V)'\r\n\t\t\t\t\t\t\t\t'classname' : 'filter_flooring'\r\n\t\t\t\t\t\t\t\t'id' : valkey\r\n\t\t\t\t\t\t\t\t'id_name' : 'filter_'+valkey\r\n\t\t\t\t\t\t\t\t'index'  : ind1\r\n\r\n\t\r\n\tfilters = {'unitVariants' : unitVariants,'unitTypes': unitTypes\r\n\t\t\t,'flooring' : flooring}\r\n\t\r\n\tfilters\r\n\r\nCommonFloor.getApartmentFilters = ()->\r\n\tunitVariants = []\r\n\tunit_variant = ''\r\n\tunitTypes = []\r\n\tunit_type = ''\r\n\tstatus = []\r\n\tflooring = []\r\n\t$.each CommonFloor.defaults['apartment'],(ind,val)->\r\n\t\tif val != \"\" && ind != 'attributes'\r\n\t\t\tparam_val_arr = val.split(',')\r\n\t\t\t$.each param_val_arr, (index,value)->\r\n\t\t\t\tif value != \"\" && ind == 'unit_variant_id'\r\n\t\t\t\t\tif !_.isUndefined apartmentVariantMasterCollection.get(parseInt(value))\r\n\t\t\t\t\t\tunit_variant = apartmentVariantMasterCollection.findWhere\r\n\t\t\t\t\t\t\t\t\t'id' : parseInt value\r\n\t\t\t\t\t\tunitTypeModel = unitTypeMasterCollection.findWhere\r\n\t\t\t\t\t\t\t\t\t'id' : parseInt unit_variant.get('unit_type_id')\r\n\t\t\t\t\t\ttype = 'A'\r\n\t\t\t\t\t\tif window.propertyTypes[unitTypeModel.get('property_type_id')] == 'Penthouses'\r\n\t\t\t\t\t\t\t\ttype = 'PH'\r\n\t\t\t\t\t\tunitVariants.push \r\n\t\t\t\t\t\t\t\t\t'typename':'apartment'\r\n\t\t\t\t\t\t\t\t\t'name'\t: unit_variant.get 'unit_variant_name'\r\n\t\t\t\t\t\t\t\t\t'type'\t: '('+type+')'\r\n\t\t\t\t\t\t\t\t\t'classname' : 'variant_names'\r\n\t\t\t\t\t\t\t\t\t'id' : unit_variant.get 'id'\r\n\t\t\t\t\t\t\t\t\t'id_name' : 'filter_varinat_name'+unit_variant.get 'id'\r\n\t\t\t\t\t\t\t\t\t'index'  : ''\r\n\t\t\t\tif value != \"\" && ind == 'unit_type_id' && $.inArray(parseInt(value),apartmentVariantMasterCollection.getApartmentUnitTypes()) > -1\r\n\t\t\t\t\tunit_type = unitTypeMasterCollection.findWhere\r\n\t\t\t\t\t\t\t\t\t'id' : parseInt value\r\n\t\t\t\t\ttype = 'A'\r\n\t\t\t\t\tif window.propertyTypes[unit_type.get('property_type_id')] == 'Penthouses'\r\n\t\t\t\t\t\t\t\ttype = 'PH'\r\n\t\t\t\t\tunitTypes.push \r\n\t\t\t\t\t\t\t\t'typename':'apartment'\r\n\t\t\t\t\t\t\t\t'name' : unit_type.get 'name'\r\n\t\t\t\t\t\t\t\t'type'\t: '('+type+')'\r\n\t\t\t\t\t\t\t\t'classname' : 'unit_types'\r\n\t\t\t\t\t\t\t\t'id' : unit_type.get 'id'\r\n\t\t\t\t\t\t\t\t'id_name' : 'filter_unit_type'+unit_type.get 'id'\r\n\t\t\t\t\t\t\t\t'index'  : ''\r\n\r\n\t\telse if val != \"\" && ind == 'attributes'\r\n\t\t\t$.each val ,(ind1,val1)->\r\n\t\t\t\t\ttemp_var = val1.split(',')\r\n\t\t\t\t\t$.each temp_var , (indexkey,valkey)->\r\n\r\n\t\t\t\t\t\tif $.isNumeric(valkey)\r\n\t\t\t\t\t\t\ttemp = parseInt valkey\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\ttemp = valkey\r\n\t\t\t\t\t\tattributes = apartmentVariantMasterCollection.getApartmentAttributes()\r\n\t\t\t\t\t\tif valkey != \"\" && $.inArray(temp,attributes[0]) > -1\r\n\t\t\t\t\t\t\tflooring.push \r\n\t\t\t\t\t\t\t\t\t'typename':'apartment'\r\n\t\t\t\t\t\t\t\t\t'name' : valkey\r\n\t\t\t\t\t\t\t\t\t'type'\t: '(A)'\r\n\t\t\t\t\t\t\t\t\t'classname' : 'filter_flooring'\r\n\t\t\t\t\t\t\t\t\t'id' : valkey\r\n\t\t\t\t\t\t\t\t\t'id_name' : 'filter_'+valkey\r\n\t\t\t\t\t\t\t\t\t'index'  : ind1\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\r\n\tfilters = {'unitVariants' : unitVariants,'unitTypes': unitTypes \r\n\t\t\t\t,'flooring' :flooring}\r\n\t# $.each filters,(index,value)->\r\n\t# \tif value.length == 0\r\n\t# \t\tfilters = _.omit(filters, index) \r\n\tfilters\r\n\r\nCommonFloor.getPlotFilters = ()->\r\n\tunitVariants = []\r\n\tunit_variant = ''\r\n\tunitTypes = []\r\n\tunit_type = ''\r\n\tstatus = []\r\n\tflooring = []\r\n\t$.each CommonFloor.defaults['plot'],(ind,val)->\r\n\t\tif val != \"\" && ind != 'attributes'\r\n\t\t\tparam_val_arr = val.split(',')\r\n\t\t\t$.each param_val_arr, (index,value)->\r\n\t\t\t\tif value != \"\" && ind == 'unit_variant_id'\r\n\t\t\t\t\tif !_.isUndefined plotVariantMasterCollection.get(parseInt(value))\r\n\t\t\t\t\t\tunit_variant = plotVariantMasterCollection.findWhere\r\n\t\t\t\t\t\t\t\t\t'id' : parseInt value\r\n\t\t\t\t\t\tunitVariants.push \r\n\t\t\t\t\t\t\t\t\t'typename':'plot'\r\n\t\t\t\t\t\t\t\t\t'name'\t: unit_variant.get 'unit_variant_name'\r\n\t\t\t\t\t\t\t\t\t'type'\t: '(P)'\r\n\t\t\t\t\t\t\t\t\t'classname' : 'variant_names'\r\n\t\t\t\t\t\t\t\t\t'id' : unit_variant.get 'id'\r\n\t\t\t\t\t\t\t\t\t'id_name' : 'filter_varinat_name'+unit_variant.get 'id'\r\n\t\t\t\t\t\t\t\t\t'index'  : ''\r\n\t\t\t\tif value != \"\" && ind == 'unit_type_id' && $.inArray(parseInt(value),plotVariantMasterCollection.getPlotUnitTypes()) > -1\r\n\t\t\t\t\tunit_type = unitTypeMasterCollection.findWhere\r\n\t\t\t\t\t\t\t\t\t'id' : parseInt value\r\n\r\n\t\t\t\t\tunitTypes.push \r\n\t\t\t\t\t\t\t\t'typename':'plot'\r\n\t\t\t\t\t\t\t\t'name' : unit_type.get 'name'\r\n\t\t\t\t\t\t\t\t'type'\t: '(P)'\r\n\t\t\t\t\t\t\t\t'classname' : 'unit_types'\r\n\t\t\t\t\t\t\t\t'id' : unit_type.get 'id'\r\n\t\t\t\t\t\t\t\t'id_name' : 'filter_unit_type'+unit_type.get 'id'\r\n\t\t\t\t\t\t\t\t'index'  : ''\r\n\r\n\r\n\t\telse if val != \"\" && ind == 'attributes'\r\n\t\t\t$.each val ,(ind1,val1)->\r\n\t\t\t\t\ttemp_var = val1.split(',')\r\n\t\t\t\t\t$.each temp_var , (indexkey,valkey)->\r\n\r\n\t\t\t\t\t\tif $.isNumeric(valkey)\r\n\t\t\t\t\t\t\ttemp = parseInt valkey\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\ttemp = valkey\r\n\t\t\t\t\t\tif valkey != \"\"  && $.inArray(temp,plotVariantMasterCollection.getPlotAttributes()) > -1\r\n\t\t\t\t\t\t\tflooring.push \r\n\t\t\t\t\t\t\t\t\t'typename':'plot'\r\n\t\t\t\t\t\t\t\t\t'name' : valkey\r\n\t\t\t\t\t\t\t\t\t'type'\t: '(P)'\r\n\t\t\t\t\t\t\t\t\t'classname' : 'filter_flooring'\r\n\t\t\t\t\t\t\t\t\t'id' : valkey\r\n\t\t\t\t\t\t\t\t\t'id_name' : 'filter_'+valkey\r\n\t\t\t\t\t\t\t\t\t'index'  : ind1\r\n\r\n\t\t\r\n\t\t\t\t\r\n\r\n\t\t\r\n\tfilters = {'unitVariants' : unitVariants,'unitTypes': unitTypes \r\n\t\t\t\t,'flooring':flooring}\r\n\tfilters\r\n\r\nCommonFloor.getStatus = ()->\r\n\tstatus = []\r\n\tstatus_arr = []\r\n\tunitMasterCollection.each (item)->\r\n\r\n\t\tif ($.inArray item.get('availability') , status_arr) ==  -1\r\n\t\t\t\tstatus_arr.push item.get 'availability'\r\n\t\t\t\tstatus.push \r\n\t\t\t\t\t'id': item.get 'availability'\r\n\t\t\t\t\t'name': s.humanize item.get 'availability'\r\n\tstatus\r\n\r\nCommonFloor.getStatusFilters = ()->\r\n\tstatus = []\r\n\tresponse = CommonFloor.getStatus()\r\n\tstatusColl = new Backbone.Collection response\r\n\tstatusIds = statusColl.pluck 'id'\r\n\t$.each CommonFloor.defaults,(ind,val)->\r\n\t\tif ind == 'availability' && val != \"\"\r\n\t\t\tparam_val_arr = val.split(',')\r\n\t\t\t$.each param_val_arr, (index,value)->\r\n\t\t\t\tif value != \"\" && ind == 'availability' && $.inArray(value,statusIds) > -1\r\n\t\t\t\t\tstatus.push s.humanize value\r\n\r\n\t{'status' : status}\r\n\r\n\r\nCommonFloor.filterBuilding = (id)->\r\n\tcollection = unitCollection.where\r\n\t\t\t\t\t'building_id' : id\r\n\tunitCollection.reset collection\r\n\tCommonFloor.resetCollections()\r\n\tunitTempCollection.reset unitCollection.toArray()\r\n\twindow.building_id = id\r\n\r\n\r\nCommonFloor.getUnitsProperty = (unitModel)->\t\r\n\tunitType = unitTypeMasterCollection.findWhere\r\n\t\t\t\t\t\t\t'id' :  unitModel.get('unit_type_id')\r\n\tproperty = window.propertyTypes[unitType.get('property_type_id')]\r\n\ttext = ''\r\n\ttype = ''\r\n\twindow.tempColl = unitCollection.clone()\r\n\tif s.decapitalize(property) == 'apartments' \r\n\t\ttemp = []\r\n\t\t$.each apartmentVariantCollection.getApartmentUnits() , (index,value)->\r\n\t\t\tif value.get('availability') is 'available'\r\n\t\t\t\ttemp.push value\r\n\t\twindow.tempColl.reset temp\r\n\t\ttext =  'Similar '+s.decapitalize(property)+' based on your filters'\r\n\t\ttype = 'apartment'\r\n\tif s.decapitalize(property) == 'penthouses'\r\n\t\ttemp = []\r\n\t\t$.each apartmentVariantCollection.getPenthouseUnits() , (index,value)->\r\n\t\t\tif value.get('availability') is 'available'\r\n\t\t\t\ttemp.push value\r\n\t\twindow.tempColl.reset temp\r\n\t\ttext =  'Similar '+s.decapitalize(property)+' based on your filters'\r\n\t\ttype = s.decapitalize(property)\r\n\tif s.decapitalize(property) == 'villas/Bungalows'\r\n\t\ttemp = []\r\n\t\t$.each bunglowVariantCollection.getBunglowUnits() , (index,value)->\r\n\t\t\tif value.get('availability') is 'available'\r\n\t\t\t\ttemp.push value\r\n\t\twindow.tempColl.reset temp\r\n\t\ttext =  'Similar '+s.decapitalize(property)+' based on your filters'\r\n\t\ttype = 'villa'\r\n\tif s.decapitalize(property) == 'plots'\r\n\t\ttemp = []\r\n\t\t$.each plotVariantCollection.getPlotUnits() , (index,value)->\r\n\t\t\tif value.get('availability') is 'available'\r\n\t\t\t\ttemp.push value\r\n\t\twindow.tempColl.reset temp\r\n\t\ttext =  'Similar '+s.decapitalize(property)+' based on your filters'\r\n\t\ttype = s.decapitalize(property)\r\n\r\n\t[window.tempColl,text,type]\r\n\r\n\r\n#get apartments which are in the view\r\nCommonFloor.getApartmentsInView = ()->\r\n\tunits = []\r\n\tnewUnits = []\r\n\t$('.apartment').each (index,value)->\r\n\t\tid  = parseInt value.id\r\n\t\tunits.push value.id\r\n\tnewUnits  = $.map units, (item)->\r\n\t\treturn parseInt item\r\n\tnewUnits\r\n\r\n\r\nCommonFloor.applyOnViewClass = ()->\r\n\tviewUnits = CommonFloor.getApartmentsInView()\r\n\tclassview = ''\r\n\tunits = unitCollection.toArray()\r\n\t$.each units,(index,value)->\r\n\t\tid  = parseInt value.id\r\n\t\tif $.inArray(id, viewUnits) == -1\r\n\t\t\t$('#apartment'+id).addClass 'onview'\r\n\t\t\t$('#apartment'+id).hide()\r\n\t\telse\r\n\t\t\t$('#apartment'+id).removeClass 'onview'\r\n\t\t\t$('#apartment'+id).show()\r\n\t$('#inview').bootstrapToggle('on')\r\n\r\nCommonFloor.filterFlooringAttributes= ()->\r\n\tflooring = []\r\n\tunitCollection.each ( item)->\r\n\t\tunitDetails = window.unit.getUnitDetails(item.get('id'))\r\n\t\tunitVarinat = unitDetails[0]\r\n\t\tattributes = unitVarinat.get('variant_attributes').flooring\r\n\t\tarr = CommonFloor.defaults['flooring'].split(',')\r\n\t\tif $.inArray(attributes, arr ) > -1\r\n\t\t\tflooring.push item\r\n\r\n\tunitCollection.reset flooring\r\n\r\n#new filter function applied\r\nCommonFloor.filterNew = ()->\r\n\tcollection = []\r\n\ttemp = []\r\n\tparams = CommonFloor.defaults['type'].split(',')\r\n\tif CommonFloor.defaults['type'] == \"\"\r\n\t\t$.merge collection , unitCollection.toArray()\r\n\t$.each params , (ind,val)->\r\n\t\tif val is 'villa'\r\n\t\t\tunitCollection.reset unitMasterCollection.toArray()\r\n\t\t\ttemp = CommonFloor.filterVillas()\r\n\t\tif val is 'apartment'\r\n\t\t\tunitCollection.reset unitMasterCollection.toArray()\r\n\t\t\ttemp = CommonFloor.filterApartments()\r\n\t\tif val is 'plot'\r\n\t\t\tunitCollection.reset unitMasterCollection.toArray()\r\n\t\t\ttemp = CommonFloor.filterPlots()\r\n\t\t$.merge collection , temp\r\n\tunitCollection.reset collection\r\n\tif CommonFloor.defaults['common']['price_max'] != \"\"\r\n\t\tCommonFloor.filterBudget()\r\n\tif CommonFloor.defaults['common']['area_max'] != \"\"\r\n\t\tCommonFloor.filterArea()\r\n\tif CommonFloor.defaults['common']['floor_max'] != \"\"\r\n\t\tCommonFloor.filterFloor()\r\n\tif CommonFloor.defaults['common']['views'] != \"\"\r\n\t\tCommonFloor.filterViews()\r\n\tif CommonFloor.defaults['common']['facings'] != \"\"\r\n\t\tCommonFloor.filterFacings()\r\n\tif CommonFloor.defaults['common']['availability'] != \"\"\r\n\t\tparamkey = {}\r\n\t\tparamkey['availability'] = 'available'\r\n\t\ttemp = unitCollection.where paramkey\r\n\t\tunitCollection.reset temp\r\n\tCommonFloor.applyFliterClass()\r\n\tCommonFloor.resetCollections()\r\n\r\nCommonFloor.filterStepNew = ()->\r\n\tcollection = []\r\n\ttemp = []\r\n\t\r\n\ttemp = CommonFloor.filterApartments()\r\n\t$.merge collection , temp\r\n\tunitCollection.reset collection\r\n\tif CommonFloor.defaults['common']['price_max'] != \"\"\r\n\t\tCommonFloor.filterBudget()\r\n\tif CommonFloor.defaults['common']['area_max'] != \"\"\r\n\t\tCommonFloor.filterArea()\r\n\tif CommonFloor.defaults['common']['floor_max'] != \"\"\r\n\t\tCommonFloor.filterFloor()\r\n\tif CommonFloor.defaults['common']['views'] != \"\"\r\n\t\tCommonFloor.filterViews()\r\n\tif CommonFloor.defaults['common']['facings'] != \"\"\r\n\t\tCommonFloor.filterFacings()\r\n\tif CommonFloor.defaults['common']['availability'] != \"\"\r\n\t\tparamkey = {}\r\n\t\tparamkey['availability'] = 'available'\r\n\t\ttemp = unitCollection.where paramkey\r\n\t\tunitCollection.reset temp\r\n\tCommonFloor.applyFliterClass()\r\n\tCommonFloor.resetCollections()\r\n\r\n\r\n\r\n\r\n\r\nCommonFloor.filterVillas = ()->\r\n\tcollection = []\r\n\tcollection = CommonFloor.resetProperyType('villa')\r\n\tnewColl = new Backbone.Collection collection\t\r\n\ttempColl = []\t\r\n\t$.each CommonFloor.defaults['villa'] , (index,value)->\r\n\t\ttemp = []\r\n\t\r\n\t\tif value != \"\" && index == 'attributes' && ! _.isEmpty value\r\n\t\t\tattributes = bunglowVariantCollection.getBunglowUnits()\r\n\t\t\tif temp.length == 0\r\n\t\t\t\ttemp = bunglowVariantCollection.getBunglowUnits()\r\n\t\t\t$.each CommonFloor.defaults['villa']['attributes'] , (ind1,val1)->\r\n\t\t\t\tif val1!= \"\"\r\n\t\t\t\t\tattributes = CommonFloor.filterVillaAttributes(ind1,val1)\r\n\t\t\t# $.merge temp, attributes\r\n\t\t\t# unitCollection.reset attributes\r\n\r\n\t\t\tnewColl.reset attributes\r\n\t\tif value != \"\" && index != 'attributes'\r\n\t\t\tparam_val  = value.split(',')\r\n\t\t\t$.each param_val,(key,key_val)->\r\n\t\t\t\tparamkey = {}\r\n\t\t\t\tparamkey[index] = parseInt(key_val)\r\n\t\t\t\ttempColl = unitCollection.where paramkey\r\n\t\t\t\tif tempColl.length is 0\r\n\t\t\t\t\ttemp = []\r\n\t\t\t\telse\r\n\t\t\t\t\t$.merge temp, unitCollection.where paramkey\r\n\t\t\tunitCollection.reset temp\r\n\t\t\tnewColl.reset temp\r\n\tnewColl.toArray()\t\r\n\r\n\r\nCommonFloor.filterVillaAttributes = (ind1,val1)->\r\n\tflooring = []\r\n\t\r\n\ttempColl = bunglowVariantCollection.getBunglowUnits()\r\n\tnewtempColl = _.intersection(tempColl,unitCollection.toArray())\r\n\t$.each newtempColl, (item , value)->\r\n\t\tunitDetails = window.unit.getUnitDetails(value.get('id'))\r\n\t\tunitVarinat = unitDetails[0]\r\n\t\tvalkey = unitVarinat.get('variant_attributes')\r\n\t\tval = _.propertyOf(valkey)(ind1)\r\n\t\tarr = val1.split(',')\r\n\t\tif _.isUndefined val\r\n\t\t\treturn\r\n\t\tif _.isArray(val)  \r\n\t\t\t\t$.each val , (ind1,val1)->\r\n\t\t\t\t\tif _.isString(val1)\r\n\t\t\t\t\t\ttemp = val1\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\ttemp =  val1.toString()\r\n\t\t\t\t\tif $.inArray(temp, arr ) > -1\r\n\t\t\t\t\t\tflooring.push value\r\n\t\telse\r\n\t\t\tif _.isString(val)\r\n\t\t\t\ttemp = val\r\n\t\t\telse\r\n\t\t\t\ttemp =  val.toString()\r\n\t\t\tif $.inArray(temp, arr ) > -1\r\n\t\t\t\tflooring.push value\r\n\t\tunitCollection.reset flooring\r\n\t\r\n\ttem = \tunitCollection.toArray()\t\t\t\r\n\ttem\r\n\t\r\n\r\nCommonFloor.filterApartments = ()->\r\n\tcollection = []\r\n\tcollection = CommonFloor.resetProperyType('apartment')\r\n\t\r\n\tnewColl = new Backbone.Collection collection\t\r\n\ttempColl = []\t\r\n\t$.each CommonFloor.defaults['apartment'] , (index,value)->\r\n\t\ttemp = []\r\n\t\tif value != \"\" && index == 'attributes' && ! _.isEmpty value\r\n\t\t\tattributes = []\r\n\t\t\t$.merge attributes ,  apartmentVariantCollection.getApartmentUnits()\r\n\t\t\t$.merge attributes ,  apartmentVariantCollection.getPenthouseUnits()\r\n\t\t\tif temp.length == 0\r\n\t\t\t\ttemp = apartmentVariantCollection.getApartmentUnits()\r\n\t\t\t$.each CommonFloor.defaults['apartment']['attributes'] , (ind1,val1)->\r\n\t\t\t\tif val1!= \"\"\r\n\t\t\t\t\tattributes = CommonFloor.filterApartmentAttributes(ind1,val1)\r\n\t\t\t# $.merge temp, attributes\r\n\t\t\t# unitCollection.reset attributes\r\n\r\n\t\t\tnewColl.reset attributes\r\n\t\t\r\n\t\tif value != \"\" && index != 'attributes'\r\n\t\t\tparam_val  = value.split(',')\r\n\t\t\t$.each param_val,(key,key_val)->\r\n\t\t\t\tparamkey = {}\r\n\t\t\t\tparamkey[index] = parseInt(key_val)\r\n\t\t\t\ttempColl = unitCollection.where paramkey\r\n\t\t\t\tif tempColl.length is 0\r\n\t\t\t\t\ttemp = []\r\n\t\t\t\telse\r\n\t\t\t\t\t$.merge temp, unitCollection.where paramkey\r\n\t\t\t\t\r\n\t\t\tunitCollection.reset temp\r\n\t\t\tnewColl.reset temp\r\n\tnewColl.toArray()\r\n\r\n\r\nCommonFloor.filterApartmentAttributes= (ind1,val1)->\r\n\tflooring = []\r\n\ttempColl = []\r\n\t$.merge tempColl ,  apartmentVariantCollection.getApartmentUnits()\r\n\t$.merge tempColl ,  apartmentVariantCollection.getPenthouseUnits()\r\n\tnewtempColl = _.intersection(tempColl,unitCollection.toArray())\r\n\t$.each newtempColl, (item , value)->\r\n\t\tunitDetails = window.unit.getUnitDetails(value.get('id'))\r\n\t\tunitVarinat = unitDetails[0]\r\n\t\tvalkey = unitVarinat.get('variant_attributes')\r\n\t\tval = _.propertyOf(valkey)(ind1)\r\n\t\tarr = val1.split(',')\r\n\t\tif _.isUndefined val\r\n\t\t\treturn\r\n\t\tif _.isArray(val)  \r\n\t\t\t\t$.each val , (ind1,val1)->\r\n\t\t\t\t\tif _.isString(val1)\r\n\t\t\t\t\t\ttemp = val1\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\ttemp =  val1.toString()\r\n\t\t\t\t\tif $.inArray(temp, arr ) > -1\r\n\t\t\t\t\t\tflooring.push value\r\n\t\telse\r\n\t\t\tif _.isString(val)\r\n\t\t\t\ttemp = val\r\n\t\t\telse\r\n\t\t\t\ttemp =  val.toString()\r\n\t\t\tif $.inArray(temp, arr ) > -1\r\n\t\t\t\tflooring.push value\r\n\t\tunitCollection.reset flooring\r\n\t\r\n\t\t\t\t\r\n\ttem = \tunitCollection.toArray()\t\t\t\r\n\ttem\r\n\r\nCommonFloor.filterPlots = ()->\r\n\tcollection = []\r\n\tcollection = CommonFloor.resetProperyType('plot')\r\n\tnewColl = new Backbone.Collection collection\t\r\n\ttempColl = []\t\r\n\t$.each CommonFloor.defaults['plot'] , (index,value)->\r\n\t\ttemp = []\r\n\t\tif value != \"\" && index == 'attributes' && ! _.isEmpty value\r\n\t\t\tattributes = plotVariantCollection.getPlotUnits()\r\n\t\t\tif temp.length == 0\r\n\t\t\t\ttemp = plotVariantCollection.getPlotUnits()\r\n\t\t\t$.each CommonFloor.defaults['plot']['attributes'] , (ind1,val1)->\r\n\t\t\t\tif val1!= \"\"\r\n\t\t\t\t\tattributes = CommonFloor.filterPlotAttributes(ind1,val1)\r\n\t\t\t# $.merge temp, attributes\r\n\t\t\t# unitCollection.reset attributes\r\n\r\n\t\t\tnewColl.reset attributes\r\n\t\t\r\n\t\tif value != \"\" && index != 'attributes'\r\n\t\t\tparam_val  = value.split(',')\r\n\t\t\t$.each param_val,(key,key_val)->\r\n\t\t\t\tparamkey = {}\r\n\t\t\t\tparamkey[index] = parseInt(key_val)\r\n\t\t\t\ttempColl = unitCollection.where paramkey\r\n\t\t\t\tif tempColl.length is 0\r\n\t\t\t\t\ttemp = []\r\n\t\t\t\telse\r\n\t\t\t\t\t$.merge temp, unitCollection.where paramkey\r\n\t\t\t\t\r\n\t\t\tunitCollection.reset temp\r\n\t\t\tnewColl.reset temp\r\n\tnewColl.toArray()\r\n\r\nCommonFloor.filterPlotAttributes= (ind1,val1)->\r\n\tflooring = []\r\n\ttempColl = plotVariantCollection.getPlotUnits()\r\n\tnewtempColl = _.intersection(tempColl,unitCollection.toArray())\r\n\t$.each newtempColl, (item , value)->\r\n\t\tunitDetails = window.unit.getUnitDetails(value.get('id'))\r\n\t\tunitVarinat = unitDetails[0]\r\n\t\tvalkey = unitVarinat.get('variant_attributes')\r\n\t\tval = _.propertyOf(valkey)(ind1)\r\n\t\tarr = val1.split(',')\r\n\t\tif _.isUndefined val\r\n\t\t\treturn\r\n\t\tif _.isArray(val)  \r\n\t\t\t\t$.each val , (ind1,val1)->\r\n\t\t\t\t\tif _.isString(val1)\r\n\t\t\t\t\t\ttemp = val1\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\ttemp =  val1.toString()\r\n\t\t\t\t\tif $.inArray(temp, arr ) > -1\r\n\t\t\t\t\t\tflooring.push value\r\n\t\telse\r\n\t\t\tif _.isString(val)\r\n\t\t\t\ttemp = val\r\n\t\t\telse\r\n\t\t\t\ttemp =  val.toString()\r\n\t\t\tif $.inArray(temp, arr ) > -1\r\n\t\t\t\tflooring.push value\r\n\t\tunitCollection.reset flooring\r\n\t\r\n\t\t\t\t\r\n\ttem = \tunitCollection.toArray()\t\t\t\r\n\ttem\r\n\r\n\r\nCommonFloor.removeStepFilters = ()->\r\n\t\r\n\t$.each CommonFloor.defaults['apartment'] , (index,value)->\r\n\t\tif value != \"\"\r\n\t\t\tstep_types = CommonFloor.defaults['step_three'][index].split(',')\r\n\t\t\ttypes = step_types.map (item)->\r\n\t\t\t\treturn parseInt item\r\n\t\t\tvalue_Arr = value.split(',')\r\n\t\t\tnew_types = value_Arr.map (item)->\r\n\t\t\t\treturn parseInt item\r\n\t\t\tactualTypes = _.difference new_types , types\r\n\t\t\tCommonFloor.defaults['apartment'][index] = actualTypes.join(',')\r\n\t\t\tCommonFloor.defaults['step_three'][index] = \"\"\r\n\r\n\t$.each CommonFloor.defaults['common'],(index,value)->\r\n\t\tCommonFloor.defaults['common'][index] = \"\"\r\n\r\n\tunitCollection.reset unitMasterCollection.toArray()\r\n\tCommonFloor.resetCollections()\r\n\tCommonFloor.filterNew()\r\n\r\n\r\n$(window).bind('hashchange', ()->\r\n\r\n\r\n\tCommonFloor.defaults['type'] = \"\"\r\n\t$.each CommonFloor.defaults['villa'],(index,value)->\r\n\t\tCommonFloor.defaults['villa'][index] = \"\"\r\n\t$.each CommonFloor.defaults['plot'],(index,value)->\r\n\t\tCommonFloor.defaults['plot'][index] = \"\"\r\n\t$.each CommonFloor.defaults['apartment'],(index,value)->\r\n\t\tCommonFloor.defaults['apartment'][index] = \"\"\r\n\t$.each CommonFloor.defaults['common'],(index,value)->\r\n\t\tCommonFloor.defaults['common'][index] = \"\"\r\n\tunitCollection.reset unitMasterCollection.toArray()\r\n\tCommonFloor.resetCollections()\r\n\tCommonFloor.filterNew()\r\n\tclearTimeout(window.renderLoopInterval)\r\n)\r\n\r\nCommonFloor.filterViews = ()->\r\n\tCommonFloor.resetCollections()\r\n\ttemp = []\r\n\tunitCollection.each (item)->\r\n\t\tviews = item.get('views')\r\n\t\t$.each views , (ind,val)->\r\n\t\t\tif $.inArray(val,CommonFloor.defaults['common']['views'].split(',')) > -1 && val != \"\"\r\n\t\t\t\ttemp.push item\r\n\r\n\tunitCollection.reset temp\r\n\r\n\r\nCommonFloor.filterFacings = ()->\r\n\tCommonFloor.resetCollections()\r\n\ttemp = []\r\n\tunitCollection.each (item)->\r\n\t\tfacings = item.get('direction')\r\n\t\tif $.inArray(facings,CommonFloor.defaults['common']['facings'].split(',')) > -1  && facings != \"\"\r\n\t\t\t\ttemp.push item\r\n\r\n\tunitCollection.reset temp\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}