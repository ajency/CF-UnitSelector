{"version":3,"sources":["frontend/common/common.coffee"],"names":[],"mappings":"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","file":"frontend/common/common.js","sourceRoot":"/source/","sourcesContent":["#No Found Controller and veiw\r\nclass CommonFloor.NothingFoundView extends Marionette.ItemView\r\n\t\r\n\ttemplate : '#noFound-template'\r\n\r\nclass CommonFloor.NothingFoundCtrl extends Marionette.RegionController\r\n\r\n\tinitialize:->\r\n\t\t@show new CommonFloor.NothingFoundView\r\n\r\n#api required to load second step\r\nCommonFloor.loadJSONData = ()->\r\n\r\n\t$.ajax\r\n\t\ttype : 'GET',\r\n\t\turl  : BASERESTURL+'/project/'+\tPROJECTID+'/step-two'\r\n\t\tasync : false\r\n\t\tsuccess :(response)->\r\n\t\t\t#parsing the integer fields \r\n\t\t\tresponse = window.convertToInt(response)\r\n\t\t\tresponse = response.data\r\n\t\t\tbunglowVariantCollection.setBunglowVariantAttributes(response.bunglow_variants)\r\n\t\t\tsettings.setSettingsAttributes(response.settings)\r\n\t\t\tunitTypeCollection.setUnitTypeAttributes(response.unit_types)\r\n\t\t\tbuildingCollection.setBuildingAttributes(response.buildings)\r\n\t\t\tapartmentVariantCollection.setApartmentVariantAttributes(response.apartment_variants)\r\n\t\t\tfloorLayoutCollection.setFloorLayoutAttributes(response.floor_layout)\r\n\t\t\twindow.propertyTypes = response.property_types\r\n\t\t\tunitCollection.setUnitAttributes(response.units)\r\n\t\t\t\r\n\t\t\t\r\n\t\terror :(response)->\r\n\t\t\t@region =  new Marionette.Region el : '#noFound-template'\r\n\t\t\tnew CommonFloor.ProjectCtrl region : @region\r\n\t\t\t\r\n\r\n#find the property type with maximum number of units\r\nCommonFloor.propertyMaxUnits = ()->\r\n\tRouter = []\r\n\tRouter.push \r\n\t\t'type'  : 'bunglows'\r\n\t\t'count' :bunglowVariantCollection.getBunglowUnits()\r\n\tRouter.push \r\n\t\t'type'  : 'building'\r\n\t\t'count' :apartmentVariantCollection.getApartmentUnits()\r\n\tconsole.log Router\r\n\tcontroller = _.max Router , (item)->\r\n\t\treturn parseInt item.count.length\r\n\r\n\tcontroller\t\r\n\r\n\t\r\n#function to load the default controller fro master view\r\nCommonFloor.checkPropertyType = ()->\r\n\tCommonFloor.loadJSONData()\r\n\tif project.get('project_master').front  == \"\"\r\n\t\tCommonFloor.navigate '#/list-view' , true\r\n\t\tCommonFloor.router.storeRoute()\r\n\telse\r\n\t\tCommonFloor.navigate '#/master-view' , true\r\n\t\tCommonFloor.router.storeRoute()\r\n\r\n#function to load the default controller for list view \r\nCommonFloor.checkListView = ()->\r\n\tcontroller = CommonFloor.propertyMaxUnits()\r\n\t#CommonFloor.navigate '#/list-view/'+controller.type , true\r\n\r\n\r\n#funtion to convert string into integers\r\nwindow.convertToInt = (response)->\r\n\t$.each response ,(index,value)->\r\n\t\t$.map(value,(item)->\r\n\r\n\t\t\t$.each item ,(ind,val)->\r\n\t\t\t\treturn parseInt val\r\n\t)\r\n\r\n#function to convert value into price format\r\nwindow.numDifferentiation = (val)->\r\n\tif (val >= 10000000) \r\n\t\tval = (val/10000000).toFixed(2) + ' Cr'\r\n\telse if (val >= 100000) \r\n\t\tval = (val/100000).toFixed(2) + ' Lac'\r\n\telse if(val >= 1000) \r\n\t\tval = (val/1000).toFixed(2) + ' K'\r\n\tval\r\n\t   \r\n\r\n#function to convert value into price format\t\t\r\nwindow.convertRupees = (val)->\r\n\r\n\t$('#price').autoNumeric('init')\r\n\t$('#price').autoNumeric('set', val)\r\n\r\n \r\n#Get all the property type with the count of units\r\nCommonFloor.propertyTypes = ()->\r\n\tRouter = []\r\n\tif bunglowVariantCollection.getBunglowUnits().length != 0\r\n\t\tRouter.push \r\n\t\t\t'type'  : s.capitalize 'villas'\r\n\t\t\t'count' :bunglowVariantCollection.getBunglowUnits()\r\n\tif buildingCollection.toArray().length != 0\r\n\t\tRouter.push \r\n\t\t\t'type'  : s.capitalize 'buildings'\r\n\t\t\t'count' :buildingCollection.toArray()\r\n\tcontroller = _.max Router , (item)->\r\n\t\treturn parseInt item.count.length\r\n\r\n\r\n\tRouter\r\n\r\n\r\nCommonFloor.filter = ()->\r\n\t#check whether url contains any parameters\r\n\tif  window.location.href.indexOf('=') > -1\r\n\t\tparams = params\r\n\t\tparamsArray = params.split('&')\r\n\t\t#loop through all the parameters\r\n\t\tfor element,index in paramsArray\r\n\t\t\tparam_key = element.split('=')\r\n\t\t\tCommonFloor.defaults[param_key[0]] = param_key[1]\r\n\r\n\r\n\t\t#set the params with the filters selected by the user\r\n\t\tparams = 'unit_variant_id:'+CommonFloor.defaults['unitVariants']+'&unit_type_id:'+CommonFloor.defaults['unitTypes']+\r\n\t\t\t\t'&price_min:'+CommonFloor.defaults['price_min']+'price_max:'+CommonFloor.defaults['price_max']+\r\n\t\t\t\t'&availability:'+CommonFloor.defaults['availability']\r\n\telse\r\n\r\n\t\t#url doesnt contain any parameters take the value of the defaults\r\n\t\tparams = 'unit_variant_id:'+CommonFloor.defaults['unitVariants']+'&unit_type_id:'+CommonFloor.defaults['unitTypes']+\r\n\t\t\t\t'&price_min:'+CommonFloor.defaults['price_min']+'price_max:'+CommonFloor.defaults['price_max']+\r\n\t\t\t\t'&availability:'+CommonFloor.defaults['availability']\r\n\r\n\tparam_arr = params.split('&')\r\n\t$.each param_arr, (index,value)->\r\n\t\t\tvalue_arr  =  value.split(':')\r\n\t\t\tparam_key = value_arr[0]\r\n\t\t\tif param_key != 'price_min' && param_key != 'price_max'\r\n\t\t\t\tparam_val = value_arr[1]\r\n\t\t\t\tparam_val_arr = param_val.split(',')\r\n\t\t\t\tcollection = []\r\n\t\t\t\t$.each param_val_arr, (index,value)->\r\n\t\t\t\t\t\tparamkey = {}\r\n\t\t\t\t\t\tparamkey[param_key] = parseInt(value)\r\n\t\t\t\t\t\t# if _.isString(value)\r\n\t\t\t\t\t\t# \tparamkey[param_key] = value\r\n\t\t\t\t\t\tif param_key == 'availability'\r\n\t\t\t\t\t\t\tparamkey[param_key] = value\r\n\t\t\t\t\t\tconsole.log paramkey\r\n\t\t\t\t\t\t$.merge collection, unitTempCollection.where paramkey\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tunitTempCollection.reset collection\r\n\tCommonFloor.filterBudget()\r\n   \r\n\tCommonFloor.resetCollections()\r\n\r\nCommonFloor.resetCollections = ()->\r\n\tapartments = []\r\n\tbunglows   = []\r\n\tunitTypes = []\r\n\tunitTempCollection.each (item)->\r\n\t\tunitType = unitTypeCollection.findWhere\r\n\t\t\t\t\t\t\t'id' :  item.get('unit_type_id')\r\n\r\n\t\tproperty = window.propertyTypes[unitType.get('property_type_id')]\r\n\t\tif s.decapitalize(property) == 'apartments'\r\n\t\t\tapartments.push apartmentVariantCollection.get(item.get('unit_variant_id'))\r\n\t\tif s.decapitalize(property) == 'villas/Bungalows'\r\n\t\t\tbunglows.push bunglowVariantCollection.get(item.get('unit_variant_id'))\r\n\t\tunitTypes.push unitType\r\n\tapartmentVariantTempCollection.reset apartments\r\n\tbunglowVariantTempCollection.reset bunglows\r\n\tunitTypeTempCollection.reset unitTypes\r\n\r\nCommonFloor.filterBudget = ()->\r\n\tbudget = []\r\n\tunitTempCollection.each (item)->\r\n        console.log unitPrice = window.unit.getUnitDetails(item.get('id'))[3]\r\n        if unitPrice > parseInt(CommonFloor.defaults['price_min']) && unitPrice < parseInt(CommonFloor.defaults['price_max'])\r\n            budget.push item\r\n    unitTempCollection.reset budget\r\n\r\n\t\t\r\n\r\n\r\n"]}