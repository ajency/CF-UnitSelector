{"version":3,"sources":["frontend/entities/plot.variant.entity.coffee"],"names":[],"mappings":"AACA;AAAA,MAAA,kCAAA;IAAA;+BAAA;;AAAA,EAAM;AAGL,mCAAA,CAAA;;;;KAAA;;AAAA,0BAAA,aAAA,GAAc,SAAC,UAAD,GAAA;AACb,UAAA,uCAAA;AAAA,MAAA,SAAA,GAAY,EAAZ,CAAA;AACA,MAAA,IAAG,CAAA,CAAA,UAAA,YAA0B,QAAQ,CAAC,KAAnC,CAAA,IAA4C,UAAA,KAAc,EAA7D;AACC,cAAA,CADD;OADA;AAAA,MAGA,gBAAA,GAAmB,qBAAqB,CAAC,SAAtB,CAAgC;AAAA,QAClD,IAAA,EAAK,QAAA,CAAS,UAAU,CAAC,GAAX,CAAe,iBAAf,CAAT,CAD6C;OAAhC,CAHnB,CAAA;AAKA,MAAA,IAAG,gBAAA,KAAoB,MAAvB;AACC,QAAA,UAAA,GAAa,CAAE,UAAA,CAAW,gBAAgB,CAAC,GAAjB,CAAqB,iBAArB,CAAX,CAAF,CAAA,GACT,UAAA,CAAW,gBAAgB,CAAC,GAAjB,CAAqB,MAArB,CAAX,CADJ,CAAA;AAAA,QAEA,SAAA,GAAY,UAAU,CAAC,OAAX,CAAmB,CAAnB,CAFZ,CADD;OALA;aASA,UAVa;IAAA,CAAd,CAAA;;uBAAA;;KAHyB,QAAQ,CAAC,MAAnC,CAAA;;AAAA,EAmBM;AACL,6CAAA,CAAA;;;;KAAA;;AAAA,oCAAA,KAAA,GAAQ,WAAR,CAAA;;AAAA,oCAGA,wBAAA,GAAyB,SAAC,IAAD,GAAA;aACxB,qBAAqB,CAAC,KAAtB,CAA4B,IAA5B,EADwB;IAAA,CAHzB,CAAA;;AAAA,oCAOA,YAAA,GAAa,SAAA,GAAA;AACZ,UAAA,eAAA;AAAA,MAAA,KAAA,GAAQ,EAAR,CAAA;AAAA,MACA,QAAA,GAAW,EADX,CAAA;AAAA,MAEA,qBAAqB,CAAC,IAAtB,CAA2B,SAAC,KAAD,GAAA;AAC1B,YAAA,SAAA;AAAA,QAAA,SAAA,GAAY,cAAc,CAAC,KAAf,CACX;AAAA,UAAA,eAAA,EAAkB,KAAK,CAAC,GAAN,CAAU,IAAV,CAAlB;SADW,CAAZ,CAAA;eAEA,KAAK,CAAC,IAAN,CAAY,SAAZ,EAH0B;MAAA,CAA3B,CAFA,CAAA;AAAA,MAMA,CAAC,CAAC,IAAF,CAAO,KAAP,EAAa,SAAC,KAAD,EAAO,KAAP,GAAA;eACZ,QAAA,GAAW,CAAC,CAAC,KAAF,CAAQ,QAAR,EAAmB,KAAnB,EADC;MAAA,CAAb,CANA,CAAA;aASA,SAVY;IAAA,CAPb,CAAA;;iCAAA;;KADmC,QAAQ,CAAC,WAnB7C,CAAA;;AAAA,EAuCA,MAAM,CAAC,qBAAP,GAAgC,GAAA,CAAA,qBAvChC,CAAA;;AAAA,EAwCA,MAAM,CAAC,WAAP,GAAqB,GAAA,CAAA,WAxCrB,CAAA;AAAA","file":"frontend/entities/plot.variant.entity.js","sourceRoot":"/source/","sourcesContent":["#Plot Variant model and Plot Variant collection Definition\r\nclass PlotVariant extends Backbone.Model\r\n\r\n\t#calculate unit price of a model \r\n\tfindUnitPrice:(unit_model)->\r\n\t\tbasicCost = \"\"\r\n\t\tif unit_model not instanceof Backbone.Model || unit_model == \"\"\r\n\t\t\treturn \r\n\t\tunitVarinatModel = plotVariantCollection.findWhere({\r\n\t\t\t'id':parseInt(unit_model.get('unit_variant_id'))})\r\n\t\tif unitVarinatModel != undefined\r\n\t\t\tbasic_cost = ( parseFloat(unitVarinatModel.get('per_sq_ft_price'))) *\r\n\t\t\t\t\t\t\tparseFloat(unitVarinatModel.get('size'))\r\n\t\t\tbasicCost = basic_cost.toFixed(2)\r\n\t\tbasicCost\r\n\r\n\t\r\n\r\n\r\n\r\nclass PlotVariantCollection extends Backbone.Collection\r\n\tmodel : PlotVariant\r\n\t\r\n\t#set attributes of a Plot Variant model\r\n\tsetPlotVariantAttributes:(data)->\r\n\t\tplotVariantCollection.reset data\r\n\r\n\t#set plot units\r\n\tgetPlotUnits:->\r\n\t\tunits = []\r\n\t\tnewUnits = []\r\n\t\tplotVariantCollection.each (model)->\r\n\t\t\tplotUnits = unitCollection.where\r\n\t\t\t\tunit_variant_id : model.get('id')\r\n\t\t\tunits.push  plotUnits\r\n\t\t$.each units,(index,value)->\r\n\t\t\tnewUnits = $.merge(newUnits , value)\r\n\r\n\t\tnewUnits\r\n\r\nwindow.plotVariantCollection  = new PlotVariantCollection\r\nwindow.plotVariant = new PlotVariant"]}