{"version":3,"sources":["frontend/entities/plot.variant.entity.coffee"],"names":[],"mappings":"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","file":"frontend/entities/plot.variant.entity.js","sourceRoot":"/source/","sourcesContent":["#Plot Variant model and Plot Variant collection Definition\nclass PlotVariant extends Backbone.Model\n\n\t#calculate unit price of a model \n\tfindUnitPrice:(unit_model)->\n\t\tbasicCost = \"\"\n\t\tif unit_model not instanceof Backbone.Model || unit_model == \"\"\n\t\t\treturn \n\t\tunitVarinatModel = plotVariantMasterCollection.findWhere({\n\t\t\t'id':parseInt(unit_model.get('unit_variant_id'))})\n\t\tif unitVarinatModel != undefined\n\t\t\tbasic_cost = ( parseFloat(unitVarinatModel.get('per_sq_ft_price'))) *\n\t\t\t\t\t\t\tparseFloat(unitVarinatModel.get('size'))\n\t\t\tbasicCost = basic_cost.toFixed(2)\n\t\tbasicCost\n\n\t\n\n\n\nclass PlotVariantCollection extends Backbone.Collection\n\tmodel : PlotVariant\n\t\n\t#set attributes of a Plot Variant model\n\tsetPlotVariantAttributes:(data)->\n\t\tplotVariantCollection.reset data\n\t\tplotVariantMasterCollection.reset data\n\n\t#set plot units\n\tgetPlotUnits:->\n\t\tunits = []\n\t\tnewUnits = []\n\t\tplotVariantCollection.each (model)->\n\t\t\tplotUnits = unitCollection.where\n\t\t\t\tunit_variant_id : model.get('id')\n\t\t\tunits.push  plotUnits\n\t\t$.each units,(index,value)->\n\t\t\tnewUnits = $.merge(newUnits , value)\n\n\t\tnewUnits\n\n\t#set plot units\n\tgetPlotMasterUnits:->\n\t\tunits = []\n\t\tnewUnits = []\n\t\tplotVariantMasterCollection.each (model)->\n\t\t\tplotUnits = unitMasterCollection.where\n\t\t\t\tunit_variant_id : model.get('id')\n\t\t\tunits.push  plotUnits\n\t\t$.each units,(index,value)->\n\t\t\tnewUnits = $.merge(newUnits , value)\n\n\t\tnewUnits\n\n\tgetPlotUnitTypes:->\n\t\tunit_types = []\n\t\tplotVariantMasterCollection.each (item)->\n\t\t\tunitTypeModel = unitTypeMasterCollection.findWhere\n\t\t\t\t\t\t\t\t'id' : item.get 'unit_type_id'\n\t\t\tif $.inArray(item.get('unit_type_id'),unit_types) == -1\n\t\t\t\tunit_types.push parseInt unitTypeModel.get 'id'\n\t\t\t\t\n\t\t\t\t\t\t\n\n\t\tunit_types\n\n\tgetPlotAttributes:->\n\t\tattributes = []\n\t\t$.each item.get('variant_attributes') , (index,value)->\n\t\t\t\tif $.inArray(value,attributes) == -1\n\t\t\t\t\tattributes.push value\n\t\t\t\t\n\t\t\t\t\t\t\n\n\t\tattributes\n\n\t\n\nwindow.plotVariantCollection  = new PlotVariantCollection\nwindow.plotVariantMasterCollection  = new PlotVariantCollection\nwindow.plotVariant = new PlotVariant"]}