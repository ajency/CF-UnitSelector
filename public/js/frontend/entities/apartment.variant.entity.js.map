{"version":3,"sources":["frontend/entities/apartment.variant.entity.coffee"],"names":[],"mappings":"AACA;AAAA,MAAA,4CAAA;IAAA;+BAAA;;AAAA,EAAM;AAGL,wCAAA,CAAA;;;;KAAA;;AAAA,+BAAA,aAAA,GAAc,SAAC,SAAD,GAAA;AACb,UAAA,kEAAA;AAAA,MAAA,SAAA,GAAY,IAAZ,CAAA;AACA,MAAA,IAAG,CAAA,CAAA,SAAA,YAAyB,QAAQ,CAAC,KAAlC,CAAA,IAA2C,SAAA,KAAa,EAA3D;AACC,cAAA,CADD;OADA;AAAA,MAGA,gBAAA,GAAmB,0BAA0B,CAAC,SAA3B,CAAqC;AAAA,QACvD,IAAA,EAAK,QAAA,CAAS,SAAS,CAAC,GAAV,CAAc,iBAAd,CAAT,CADkD;OAArC,CAHnB,CAAA;AAKA,MAAA,IAAG,CAAA,CAAG,CAAC,WAAF,CAAc,gBAAd,CAAL;AACC,QAAA,cAAA,GAAiB,QAAQ,CAAC,iBAAT,CAA2B,SAAS,CAAC,GAAV,CAAc,aAAd,CAA3B,CAAjB,CAAA;AAAA,QACA,SAAA,GAAY,cAAe,CAAA,SAAS,CAAC,GAAV,CAAc,OAAd,CAAA,CAD3B,CAAA;AAAA,QAEA,UAAA,GAAa,CAAE,UAAA,CAAW,gBAAgB,CAAC,GAAjB,CAAqB,iBAArB,CAAX,CAAA,GAAsD,UAAA,CAAW,SAAX,CAAxD,CAAA,GACT,UAAA,CAAW,gBAAgB,CAAC,GAAjB,CAAqB,qBAArB,CAAX,CAHJ,CAAA;AAAA,QAIA,SAAA,GAAY,UAAU,CAAC,OAAX,CAAmB,CAAnB,CAJZ,CADD;OALA;aAWA,UAZa;IAAA,CAAd,CAAA;;4BAAA;;KAH8B,QAAQ,CAAC,MAAxC,CAAA;;AAAA,EAqBM;AACL,kDAAA,CAAA;;;;KAAA;;AAAA,yCAAA,KAAA,GAAQ,gBAAR,CAAA;;AAAA,yCAEA,6BAAA,GAA8B,SAAC,IAAD,GAAA;AAG7B,MAAA,0BAA0B,CAAC,KAA3B,CAAiC,IAAjC,CAAA,CAAA;aACA,gCAAgC,CAAC,KAAjC,CAAuC,IAAvC,EAJ6B;IAAA,CAF9B,CAAA;;AAAA,yCASA,iBAAA,GAAkB,SAAA,GAAA;AACjB,UAAA,eAAA;AAAA,MAAA,KAAA,GAAQ,EAAR,CAAA;AAAA,MACA,QAAA,GAAW,EADX,CAAA;AAAA,MAEA,0BAA0B,CAAC,IAA3B,CAAgC,SAAC,KAAD,GAAA;AAC/B,YAAA,cAAA;AAAA,QAAA,cAAA,GAAiB,cAAc,CAAC,KAAf,CAChB;AAAA,UAAA,eAAA,EAAkB,KAAK,CAAC,GAAN,CAAU,IAAV,CAAlB;SADgB,CAAjB,CAAA;eAEA,KAAK,CAAC,IAAN,CAAY,cAAZ,EAH+B;MAAA,CAAhC,CAFA,CAAA;AAAA,MAMA,CAAC,CAAC,IAAF,CAAO,KAAP,EAAa,SAAC,KAAD,EAAO,KAAP,GAAA;eACZ,QAAA,GAAW,CAAC,CAAC,KAAF,CAAQ,QAAR,EAAmB,KAAnB,EADC;MAAA,CAAb,CANA,CAAA;aASA,SAViB;IAAA,CATlB,CAAA;;sCAAA;;KADwC,QAAQ,CAAC,WArBlD,CAAA;;AAAA,EA2CA,MAAM,CAAC,0BAAP,GAAqC,GAAA,CAAA,0BA3CrC,CAAA;;AAAA,EA4CA,MAAM,CAAC,gCAAP,GAA2C,GAAA,CAAA,0BA5C3C,CAAA;;AAAA,EA6CA,MAAM,CAAC,gBAAP,GAA2B,GAAA,CAAA,gBA7C3B,CAAA;AAAA","file":"frontend/entities/apartment.variant.entity.js","sourceRoot":"/source/","sourcesContent":["#Apartment Variant model and Apartment Variant collection Definition\r\nclass ApartmentVariant extends Backbone.Model\r\n\r\n\t#calculate unit price of a model \r\n\tfindUnitPrice:(unitModel)->\r\n\t\tbasicCost = 0.00\r\n\t\tif unitModel not instanceof Backbone.Model || unitModel == \"\"\r\n\t\t\treturn \r\n\t\tunitVarinatModel = apartmentVariantCollection.findWhere({\r\n\t\t\t'id':parseInt(unitModel.get('unit_variant_id'))})\r\n\t\tif ! _.isUndefined unitVarinatModel \r\n\t\t\tfloorRiseArray = settings.generateFloorRise(unitModel.get('building_id'))\r\n\t\t\tfloorRise = floorRiseArray[unitModel.get('floor')]\r\n\t\t\tbasic_cost = ( parseFloat(unitVarinatModel.get('per_sq_ft_price')) + parseFloat(floorRise )) *\r\n\t\t\t\t\t\t\tparseFloat(unitVarinatModel.get('super_built_up_area'))\r\n\t\t\tbasicCost = basic_cost.toFixed(2)\r\n\t\tbasicCost\r\n\r\n\t\r\n\r\n\r\n\r\nclass ApartmentVariantCollection extends Backbone.Collection\r\n\tmodel : ApartmentVariant\r\n\t#set attributes of a Apartment Variant model\r\n\tsetApartmentVariantAttributes:(data)->\r\n\r\n\t\t# @set apartmentApartmentData\r\n\t\tapartmentVariantCollection.reset data\r\n\t\tapartmentVariantMasterCollection.reset data\r\n\r\n\t#set apartment units\r\n\tgetApartmentUnits:->\r\n\t\tunits = []\r\n\t\tnewUnits = []\r\n\t\tapartmentVariantCollection.each (model)->\r\n\t\t\tapartmentUnits = unitCollection.where\r\n\t\t\t\tunit_variant_id : model.get('id')\r\n\t\t\tunits.push  apartmentUnits\r\n\t\t$.each units,(index,value)->\r\n\t\t\tnewUnits = $.merge(newUnits , value)\r\n\r\n\t\tnewUnits\r\n\r\nwindow.apartmentVariantCollection  = new ApartmentVariantCollection\r\nwindow.apartmentVariantMasterCollection  = new ApartmentVariantCollection\r\nwindow.apartmentVariant  = new ApartmentVariant"]}