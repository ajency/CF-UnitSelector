{"version":3,"sources":["frontend/entities/apartment.variant.entity.coffee"],"names":[],"mappings":"AACA;AAAA,MAAA,4CAAA;IAAA;+BAAA;;AAAA,EAAM;AAGL,wCAAA,CAAA;;;;KAAA;;AAAA,+BAAA,aAAA,GAAc,SAAC,UAAD,GAAA;AACb,UAAA,uCAAA;AAAA,MAAA,IAAG,CAAA,CAAA,UAAA,YAA0B,QAAQ,CAAC,KAAnC,CAAA,IAA4C,UAAA,KAAc,EAA7D;AACC,cAAA,CADD;OAAA;AAAA,MAEA,gBAAA,GAAmB,0BAA0B,CAAC,SAA3B,CAAqC;AAAA,QACvD,YAAA,EAAa,QAAA,CAAS,UAAU,CAAC,GAAX,CAAe,cAAf,CAAT,CAD0C;OAArC,CAFnB,CAAA;AAAA,MAIA,SAAA,GAAY,QAAQ,CAAC,GAAT,CAAa,YAAb,CAA2B,CAAA,UAAU,CAAC,GAAX,CAAe,OAAf,CAAA,CAJvC,CAAA;AAAA,MAKA,UAAA,GAAa,CAAE,UAAA,CAAW,gBAAgB,CAAC,GAAjB,CAAqB,iBAArB,CAAX,CAAA,GAAsD,UAAA,CAAW,SAAX,CAAxD,CAAA,GACT,UAAA,CAAW,gBAAgB,CAAC,GAAjB,CAAqB,eAArB,CAAX,CANJ,CAAA;aAOA,UAAU,CAAC,OAAX,CAAmB,CAAnB,EARa;IAAA,CAAd,CAAA;;4BAAA;;KAH8B,QAAQ,CAAC,MAAxC,CAAA;;AAAA,EAiBM;AACL,kDAAA,CAAA;;;;KAAA;;AAAA,yCAAA,KAAA,GAAQ,gBAAR,CAAA;;AAAA,yCAEA,GAAA,GAAM,SAAA,GAAA;aACL,gFADK;IAAA,CAFN,CAAA;;AAAA,yCAWA,6BAAA,GAA8B,SAAC,IAAD,GAAA;aAG7B,0BAA0B,CAAC,KAA3B,CAAiC,IAAjC,EAH6B;IAAA,CAX9B,CAAA;;AAAA,yCAiBA,iBAAA,GAAkB,SAAA,GAAA;AACjB,UAAA,eAAA;AAAA,MAAA,KAAA,GAAQ,EAAR,CAAA;AAAA,MACA,QAAA,GAAW,EADX,CAAA;AAAA,MAEA,0BAA0B,CAAC,IAA3B,CAAgC,SAAC,KAAD,GAAA;AAC/B,YAAA,cAAA;AAAA,QAAA,cAAA,GAAiB,cAAc,CAAC,KAAf,CAChB;AAAA,UAAA,eAAA,EAAkB,KAAK,CAAC,GAAN,CAAU,IAAV,CAAlB;SADgB,CAAjB,CAAA;eAEA,KAAK,CAAC,IAAN,CAAY,cAAZ,EAH+B;MAAA,CAAhC,CAFA,CAAA;AAAA,MAMA,CAAC,CAAC,IAAF,CAAO,KAAP,EAAa,SAAC,KAAD,EAAO,KAAP,GAAA;eACZ,QAAA,GAAW,CAAC,CAAC,KAAF,CAAQ,QAAR,EAAmB,KAAnB,EADC;MAAA,CAAb,CANA,CAAA;aASA,SAViB;IAAA,CAjBlB,CAAA;;sCAAA;;KADwC,QAAQ,CAAC,WAjBlD,CAAA;;AAAA,EA+CA,MAAM,CAAC,0BAAP,GAAqC,GAAA,CAAA,0BA/CrC,CAAA;AAAA","file":"frontend/entities/apartment.variant.entity.js","sourceRoot":"/source/","sourcesContent":["#Apartment Variant model and Apartment Variant collection Definition\r\nclass ApartmentVariant extends Backbone.Model\r\n\r\n\t#calculate unit price of a model \r\n\tfindUnitPrice:(unit_model)->\r\n\t\tif unit_model not instanceof Backbone.Model || unit_model == \"\"\r\n\t\t\treturn \r\n\t\tunitVarinatModel = apartmentVariantCollection.findWhere({\r\n\t\t\t'variant_id':parseInt(unit_model.get('unit_variant'))})\r\n\t\tfloorRise = settings.get('floor_rise')[unit_model.get('floor')]\r\n\t\tbasic_cost = ( parseFloat(unitVarinatModel.get('per_sq_ft_price')) + parseFloat(floorRise )) *\r\n\t\t\t\t\t\tparseFloat(unitVarinatModel.get('sellable_area'))\r\n\t\tbasic_cost.toFixed(2)\r\n\r\n\t\r\n\r\n\r\n\r\nclass ApartmentVariantCollection extends Backbone.Collection\r\n\tmodel : ApartmentVariant\r\n\t#url to fetch Apartment Variants\r\n\turl : ->\r\n\t\t\"http://commonfloor.local/methods/functions.php?action=load_apartment_variants\"\r\n\r\n\r\n\t\r\n\r\n\r\n\t#set attributes of a Apartment Variant model\r\n\t# if blank,fetch it from the server with the url mentioned above.\r\n\tsetApartmentVariantAttributes:(data)->\r\n\r\n\t\t# @set apartmentApartmentData\r\n\t\tapartmentVariantCollection.reset data\r\n\r\n\r\n\tgetApartmentUnits:->\r\n\t\tunits = []\r\n\t\tnewUnits = []\r\n\t\tapartmentVariantCollection.each (model)->\r\n\t\t\tapartmentUnits = unitCollection.where\r\n\t\t\t\tunit_variant_id : model.get('id')\r\n\t\t\tunits.push  apartmentUnits\r\n\t\t$.each units,(index,value)->\r\n\t\t\tnewUnits = $.merge(newUnits , value)\r\n\r\n\t\tnewUnits\r\n\r\nwindow.apartmentVariantCollection  = new ApartmentVariantCollection;"]}