{"version":3,"sources":["frontend/entities/apartment.variant.entity.coffee"],"names":[],"mappings":"AACA;AAAA,MAAA,4CAAA;IAAA;+BAAA;;AAAA,EAAM;AAGL,wCAAA,CAAA;;;;KAAA;;AAAA,+BAAA,aAAA,GAAc,SAAC,UAAD,GAAA;AACb,UAAA,kEAAA;AAAA,MAAA,SAAA,GAAY,EAAZ,CAAA;AACA,MAAA,IAAG,CAAA,CAAA,UAAA,YAA0B,QAAQ,CAAC,KAAnC,CAAA,IAA4C,UAAA,KAAc,EAA7D;AACC,cAAA,CADD;OADA;AAAA,MAGA,gBAAA,GAAmB,0BAA0B,CAAC,SAA3B,CAAqC;AAAA,QACvD,IAAA,EAAK,QAAA,CAAS,UAAU,CAAC,GAAX,CAAe,iBAAf,CAAT,CADkD;OAArC,CAHnB,CAAA;AAKA,MAAA,IAAG,gBAAA,KAAoB,MAAvB;AACC,QAAA,cAAA,GAAiB,QAAQ,CAAC,iBAAT,CAA2B,UAAU,CAAC,GAAX,CAAe,aAAf,CAA3B,CAAjB,CAAA;AAAA,QACA,SAAA,GAAY,cAAe,CAAA,UAAU,CAAC,GAAX,CAAe,OAAf,CAAA,CAD3B,CAAA;AAAA,QAEA,UAAA,GAAa,CAAE,UAAA,CAAW,gBAAgB,CAAC,GAAjB,CAAqB,iBAArB,CAAX,CAAA,GAAsD,UAAA,CAAW,SAAX,CAAxD,CAAA,GACT,UAAA,CAAW,gBAAgB,CAAC,GAAjB,CAAqB,qBAArB,CAAX,CAHJ,CAAA;AAAA,QAIA,SAAA,GAAY,UAAU,CAAC,OAAX,CAAmB,CAAnB,CAJZ,CADD;OALA;aAWA,UAZa;IAAA,CAAd,CAAA;;4BAAA;;KAH8B,QAAQ,CAAC,MAAxC,CAAA;;AAAA,EAqBM;AACL,kDAAA,CAAA;;;;KAAA;;AAAA,yCAAA,KAAA,GAAQ,gBAAR,CAAA;;AAAA,yCAEA,GAAA,GAAM,SAAA,GAAA;aACL,gFADK;IAAA,CAFN,CAAA;;AAAA,yCAWA,6BAAA,GAA8B,SAAC,IAAD,GAAA;aAG7B,0BAA0B,CAAC,KAA3B,CAAiC,IAAjC,EAH6B;IAAA,CAX9B,CAAA;;AAAA,yCAiBA,iBAAA,GAAkB,SAAA,GAAA;AACjB,UAAA,eAAA;AAAA,MAAA,KAAA,GAAQ,EAAR,CAAA;AAAA,MACA,QAAA,GAAW,EADX,CAAA;AAAA,MAEA,0BAA0B,CAAC,IAA3B,CAAgC,SAAC,KAAD,GAAA;AAC/B,YAAA,cAAA;AAAA,QAAA,cAAA,GAAiB,cAAc,CAAC,KAAf,CAChB;AAAA,UAAA,eAAA,EAAkB,KAAK,CAAC,GAAN,CAAU,IAAV,CAAlB;SADgB,CAAjB,CAAA;eAEA,KAAK,CAAC,IAAN,CAAY,cAAZ,EAH+B;MAAA,CAAhC,CAFA,CAAA;AAAA,MAMA,CAAC,CAAC,IAAF,CAAO,KAAP,EAAa,SAAC,KAAD,EAAO,KAAP,GAAA;eACZ,QAAA,GAAW,CAAC,CAAC,KAAF,CAAQ,QAAR,EAAmB,KAAnB,EADC;MAAA,CAAb,CANA,CAAA;aASA,SAViB;IAAA,CAjBlB,CAAA;;sCAAA;;KADwC,QAAQ,CAAC,WArBlD,CAAA;;AAAA,EAmDA,MAAM,CAAC,0BAAP,GAAqC,GAAA,CAAA,0BAnDrC,CAAA;;AAAA,EAoDA,MAAM,CAAC,gBAAP,GAA2B,GAAA,CAAA,gBApD3B,CAAA;AAAA","file":"frontend/entities/apartment.variant.entity.js","sourceRoot":"/source/","sourcesContent":["#Apartment Variant model and Apartment Variant collection Definition\nclass ApartmentVariant extends Backbone.Model\n\n\t#calculate unit price of a model \n\tfindUnitPrice:(unit_model)->\n\t\tbasicCost = \"\"\n\t\tif unit_model not instanceof Backbone.Model || unit_model == \"\"\n\t\t\treturn \n\t\tunitVarinatModel = apartmentVariantCollection.findWhere({\n\t\t\t'id':parseInt(unit_model.get('unit_variant_id'))})\n\t\tif unitVarinatModel != undefined\n\t\t\tfloorRiseArray = settings.generateFloorRise(unit_model.get('building_id'))\n\t\t\tfloorRise = floorRiseArray[unit_model.get('floor')]\n\t\t\tbasic_cost = ( parseFloat(unitVarinatModel.get('per_sq_ft_price')) + parseFloat(floorRise )) *\n\t\t\t\t\t\t\tparseFloat(unitVarinatModel.get('super_built_up_area'))\n\t\t\tbasicCost = basic_cost.toFixed(2)\n\t\tbasicCost\n\n\t\n\n\n\nclass ApartmentVariantCollection extends Backbone.Collection\n\tmodel : ApartmentVariant\n\t#url to fetch Apartment Variants\n\turl : ->\n\t\t\"http://commonfloor.local/methods/functions.php?action=load_apartment_variants\"\n\n\n\t\n\n\n\t#set attributes of a Apartment Variant model\n\t# if blank,fetch it from the server with the url mentioned above.\n\tsetApartmentVariantAttributes:(data)->\n\n\t\t# @set apartmentApartmentData\n\t\tapartmentVariantCollection.reset data\n\n\n\tgetApartmentUnits:->\n\t\tunits = []\n\t\tnewUnits = []\n\t\tapartmentVariantCollection.each (model)->\n\t\t\tapartmentUnits = unitCollection.where\n\t\t\t\tunit_variant_id : model.get('id')\n\t\t\tunits.push  apartmentUnits\n\t\t$.each units,(index,value)->\n\t\t\tnewUnits = $.merge(newUnits , value)\n\n\t\tnewUnits\n\nwindow.apartmentVariantCollection  = new ApartmentVariantCollection\nwindow.apartmentVariant  = new ApartmentVariant"]}