{"version":3,"sources":["frontend/entities/project.entity.coffee"],"names":[],"mappings":"AACA;AAAA,MAAA;+BAAA;;AAAA,EAAM,WAAW,CAAC;AAIjB,+BAAA,CAAA;;;;KAAA;;AAAA,sBAAA,OAAA,GAAS,SAAA,GAAA;aACR,WAAA,GAAY,WAAZ,GAAwB,IAAC,CAAA,WADjB;IAAA,CAAT,CAAA;;AAAA,sBAMA,KAAA,GAAM,SAAC,QAAD,GAAA;AACL,UAAA,IAAA;AAAA,MAAA,IAAA,GAAO,QAAQ,CAAC,IAAhB,CAAA;AACA,aAAO,IAAP,CAFK;IAAA,CANN,CAAA;;AAAA,sBAgBA,oBAAA,GAAqB,SAAC,UAAD,GAAA;AAEpB,MAAA,IAAC,CAAA,UAAD,GAAc,UAAd,CAAA;AACA,MAAA,IAAG,MAAM,CAAC,aAAP,CAAqB,IAAC,CAAA,MAAD,CAAA,CAArB,CAAA,IAAmC,QAAA,CAAS,IAAC,CAAA,GAAD,CAAK,IAAL,CAAT,CAAA,KAAwB,QAAA,CAAS,UAAT,CAA9D;eACC,IAAC,CAAA,KAAD,CACC;AAAA,UAAA,KAAA,EAAO,KAAP;AAAA,UACA,OAAA,EAAQ,CAAA,SAAA,KAAA,GAAA;mBAAA,SAAC,UAAD,EAAa,QAAb,GAAA;AACP,cAAA,KAAC,CAAA,GAAD,CAAK,SAAL,EAAiB;AAAA,gBAAC,OAAA,EAAU,CAAC,WAAD,EAAe,kBAAf,EAAmC,UAAnC,CAAX;AAAA,gBACZ,WAAA,EAAc,CAAC,WAAD,EAAe,kBAAf,EAAoC,UAApC,CADF;AAAA,gBAEZ,MAAA,EAAS,CAAC,WAAD,EAAe,kBAAf,EAAoC,UAApC,CAFG;eAAjB,CAAA,CAAA;AAAA,cAGA,KAAC,CAAA,GAAD,CAAK,WAAL,EAAmB,OAAnB,CAHA,CAAA;AAIA,cAAA,IAAG,QAAA,KAAY,CAAZ,IAAiB,MAAM,CAAC,aAAP,CAAqB,QAArB,CAApB;uBACC,KAAC,CAAA,KAAD,CAAA,EADD;eALO;YAAA,EAAA;UAAA,CAAA,CAAA,CAAA,IAAA,CADR;SADD,EADD;OAHoB;IAAA,CAhBrB,CAAA;;AAAA,sBAqCA,cAAA,GAAe,SAAA,GAAA;AACd,MAAA,cAAc,CAAC,KAAf,CAAA,CAAA,CAAA;aACA,QAAQ,CAAC,KAAT,CAAA,EAFc;IAAA,CArCf,CAAA;;AAAA,sBA0CA,iBAAA,GAAkB,SAAA,GAAA;AACjB,UAAA,6BAAA;AAAA,MAAA,gBAAA,GAAmB,EAAnB,CAAA;AAAA,MACA,WAAA,GAAc,OAAO,CAAC,GAAR,CAAY,aAAZ,CADd,CAAA;AAGA,MAAA,IAAG,QAAA,CAAS,WAAW,CAAC,MAArB,CAAA,GAA+B,CAAlC;AACC,QAAA,IAAC,CAAA,GAAD,CAAK,UAAL,EAAkB,CAAlB,CAAA,CADD;OAAA,MAAA;AAGC,QAAA,IAAC,CAAA,GAAD,CAAK,UAAL,EAAkB,CAAlB,CAAA,CAHD;OAHA;aAQA,IAAC,CAAA,GAAD,CAAK,UAAL,EATiB;IAAA,CA1ClB,CAAA;;mBAAA;;KAJiC,QAAQ,CAAC,MAA3C,CAAA;;AAAA,EA2DA,MAAM,CAAC,OAAP,GAAiB,GAAA,CAAA,WAAe,CAAC,OA3DjC,CAAA;AAAA","file":"frontend/entities/project.entity.js","sourceRoot":"/source/","sourcesContent":["#Project model Definition\nclass CommonFloor.Project extends Backbone.Model\n\n\n\t#url to fetch project data\n\turlRoot :->\n\t\tBASERESTURL+'/project/'+@project_id\n\n\n\n\t\n\tparse:(response)->\n\t\tresp = response.data\n\t\treturn resp\n\t\t\n\n\n\n\n\n\t# set attributes of a projet model\n\tsetProjectAttributes:(project_id)->\n\t\t# @set projectData\n\t\t@project_id = project_id\n\t\tif jQuery.isEmptyObject(@toJSON()) || parseInt(@get('id')) != parseInt(project_id)\n\t\t\t@fetch(\n\t\t\t\tasync: false\n\t\t\t\tsuccess:(collection, response)=>\n\t\t\t\t\t@set 'filters' , {'Villa' : ['unitTypes' , 'unitVariantNames', 'flooring' ]\n\t\t\t\t\t\t\t\t\t,'Apartment' : ['unitTypes' , 'unitVariantNames' , 'flooring']\n\t\t\t\t\t\t\t\t\t,'Plot' : ['unitTypes' , 'unitVariantNames' , 'flooring']}\n\t\t\t\t\t@set 'area_unit' , 'Sq.ft'\n\t\t\t\t\tif response == 0 || jQuery.isEmptyObject(response)\n\t\t\t\t\t\t@clear()\n\n\t\t\t\t\n\n\t\t\t\t)\n\t\t\t# @resetEntitites()\n\n\t\t\n\n\tresetEntitites:->\n\t\tunitCollection.reset()\n\t\tsettings.clear()\n\n\t#Rotation for project master\n\tcheckRotationView:->\n\t\ttransitionImages = []\n\t\tbreakpoints = project.get('breakpoints')\n\t\t\n\t\tif parseInt(breakpoints.length) > 1\n\t\t\t@set 'rotation' , 1\n\t\telse\n\t\t\t@set 'rotation' , 0\n\n\t\t@get('rotation')\n\n\n\nwindow.project = new CommonFloor.Project\n\t\t\n\n\t\t\n\n\t\n"]}