{"version":3,"sources":["frontend/entities/building.entity.coffee"],"names":[],"mappings":"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","file":"frontend/entities/building.entity.js","sourceRoot":"/source/","sourcesContent":["#Building model and Building collection Definition\r\nclass Building extends Backbone.Model\r\n\r\n\r\n\t#Count the number of units for each unit type in a building\r\n\tgetUnitTypes:(building_id)->\r\n\r\n\t\tunitTypes = []\r\n\t\tif building_id == \"\"\r\n\t\t\treturn unitTypes\r\n\t\tunits = unitCollection.where\r\n\t\t\t\t\t\t'building_id'  : building_id\r\n\r\n\t\tunits = new Backbone.Collection units\r\n\t\tvariants = units.pluck(\"unit_variant_id\") \r\n\t\t$.each variants,(index,value)->\r\n\t\t\tvarinatModel = apartmentVariantCollection.findWhere\r\n\t\t\t\t\t\t\t\t\t'id' : value\r\n\t\t\tunitTypes.push varinatModel.get 'unit_type_id'\r\n\r\n\t\tunitTypes = _.uniq unitTypes\r\n\t\tunitTypes\r\n\r\n\tgetUnitTypesCount:(building_id,unitTypes)->\r\n\r\n\t\ttypes = []\r\n\t\t$.each unitTypes,(ind,val)->\r\n\t\t\tunitTypeModel = unitTypeCollection.findWhere\r\n\t\t\t\t\t\t\t\t'id' : val\r\n\t\t\tvariants = apartmentVariantCollection.where\r\n\t\t\t\t\t\t\t'unit_type_id' : val\r\n\t\t\tunits = []\r\n\t\t\t$.each variants,(index,value)->\r\n\t\t\t\tunitsColl = unitCollection.where\r\n\t\t\t\t\t\t\t\t'unit_variant_id' : value.get 'id'\r\n\t\t\t\t\t\t\t\t'building_id' : building_id\r\n\r\n\t\t\t\t$.merge units, unitsColl\r\n\t\t\ttypes.push \r\n\t\t\t\t'name' : unitTypeModel.get 'name'\r\n\t\t\t\t'units' : units.length\r\n\r\n\t\ttypes\r\n\r\n\t#check 3d rotation view available or not\r\n\tcheckRotationView:(buildingId)->\r\n\t\tbuildingModel = buildingCollection.findWhere({'building_id':parseInt(buildingId)})\r\n\t\tif buildingId == \"\"\r\n\t\t\treturn false\r\n\t\trotationImages = buildingModel.get('threed_view').image.length\r\n\t\tif parseInt(rotationImages) >= 4\r\n\t\t\tbuildingModel.set 'rotation' , 'yes'\r\n\t\telse\r\n\t\t\tbuildingModel.set 'rotation' , 'no'\r\n\r\n\t\tbuildingModel.get('rotation')\r\n\r\n\r\n\tgetBuildingUnits:(building_id)->\r\n\t\tunits = unitCollection.where\r\n\t\t\t\t\t'building_id' : building_id\r\n\r\n\t\tunits \r\n\r\n\tcheckRotationView:(building)->\r\n\t\ttransitionImages = []\r\n\t\t$.merge transitionImages , building.get('building_master')['right-front']\r\n\t\t$.merge transitionImages , building.get('building_master')['back-right']\r\n\t\t$.merge transitionImages , building.get('building_master')['left-back']\r\n\t\t$.merge transitionImages , building.get('building_master')['front-left']\r\n\t\tif parseInt(transitionImages.length) >= 4\r\n\t\t\t@set 'rotation' , 1\r\n\t\telse\r\n\t\t\t@set 'rotation' , 0\r\n\r\n\t\t@get('rotation')\r\n\r\n\r\n\r\n\r\n\r\nclass BuildingCollection extends Backbone.Collection\r\n\tmodel : Building\r\n\t#url to fetch building data\r\n\turl : ->\r\n\t\t\"http://commonfloor.local/methods/functions.php?action=load_buildings\"\r\n\r\n\t#set the attributes of a building model\r\n\t# if blank,fetch it from the server with the url mentioned above.\r\n\tsetBuildingAttributes:(data)->\r\n\r\n\t\t# @set buildingData\r\n\t\tconsole.log data\r\n\t\tbuildingCollection.reset data\r\n\r\nwindow.buildingCollection  = new BuildingCollection\r\nwindow.building  = new Building"]}