{"version":3,"sources":["frontend/entities/building.entity.coffee"],"names":[],"mappings":"AACA;AAAA,MAAA,4BAAA;IAAA;+BAAA;;AAAA,EAAM;AAIL,gCAAA,CAAA;;;;KAAA;;AAAA,uBAAA,YAAA,GAAa,SAAC,WAAD,GAAA;AAEZ,UAAA,0BAAA;AAAA,MAAA,SAAA,GAAY,EAAZ,CAAA;AACA,MAAA,IAAG,WAAA,KAAe,EAAlB;AACC,eAAO,SAAP,CADD;OADA;AAAA,MAGA,KAAA,GAAQ,cAAc,CAAC,KAAf,CACJ;AAAA,QAAA,aAAA,EAAiB,WAAjB;OADI,CAHR,CAAA;AAAA,MAMA,KAAA,GAAY,IAAA,QAAQ,CAAC,UAAT,CAAoB,KAApB,CANZ,CAAA;AAAA,MAOA,QAAA,GAAW,KAAK,CAAC,KAAN,CAAY,iBAAZ,CAPX,CAAA;AAAA,MAQA,CAAC,CAAC,IAAF,CAAO,QAAP,EAAgB,SAAC,KAAD,EAAO,KAAP,GAAA;AACf,YAAA,YAAA;AAAA,QAAA,YAAA,GAAe,0BAA0B,CAAC,SAA3B,CACT;AAAA,UAAA,IAAA,EAAO,KAAP;SADS,CAAf,CAAA;eAEA,SAAS,CAAC,IAAV,CAAe,YAAY,CAAC,GAAb,CAAiB,cAAjB,CAAf,EAHe;MAAA,CAAhB,CARA,CAAA;AAAA,MAaA,SAAA,GAAY,CAAC,CAAC,IAAF,CAAO,SAAP,CAbZ,CAAA;aAcA,UAhBY;IAAA,CAAb,CAAA;;AAAA,uBAmBA,iBAAA,GAAkB,SAAC,UAAD,GAAA;AACjB,UAAA,6BAAA;AAAA,MAAA,aAAA,GAAgB,kBAAkB,CAAC,SAAnB,CAA6B;AAAA,QAAC,aAAA,EAAc,QAAA,CAAS,UAAT,CAAf;OAA7B,CAAhB,CAAA;AACA,MAAA,IAAG,UAAA,KAAc,EAAjB;AACC,eAAO,KAAP,CADD;OADA;AAAA,MAGA,cAAA,GAAiB,aAAa,CAAC,GAAd,CAAkB,aAAlB,CAAgC,CAAC,KAAK,CAAC,MAHxD,CAAA;AAIA,MAAA,IAAG,QAAA,CAAS,cAAT,CAAA,IAA4B,CAA/B;AACC,QAAA,aAAa,CAAC,GAAd,CAAkB,UAAlB,EAA+B,KAA/B,CAAA,CADD;OAAA,MAAA;AAGC,QAAA,aAAa,CAAC,GAAd,CAAkB,UAAlB,EAA+B,IAA/B,CAAA,CAHD;OAJA;aASA,aAAa,CAAC,GAAd,CAAkB,UAAlB,EAViB;IAAA,CAnBlB,CAAA;;oBAAA;;KAJsB,QAAQ,CAAC,MAAhC,CAAA;;AAAA,EAsCM;AACL,0CAAA,CAAA;;;;KAAA;;AAAA,iCAAA,KAAA,GAAQ,QAAR,CAAA;;AAAA,iCAEA,GAAA,GAAM,SAAA,GAAA;aACL,uEADK;IAAA,CAFN,CAAA;;AAAA,iCAOA,qBAAA,GAAsB,SAAC,IAAD,GAAA;AAGrB,MAAA,OAAO,CAAC,GAAR,CAAY,IAAZ,CAAA,CAAA;aACA,kBAAkB,CAAC,KAAnB,CAAyB,IAAzB,EAJqB;IAAA,CAPtB,CAAA;;8BAAA;;KADgC,QAAQ,CAAC,WAtC1C,CAAA;;AAAA,EAoDA,MAAM,CAAC,kBAAP,GAA6B,GAAA,CAAA,kBApD7B,CAAA;;AAAA,EAqDA,MAAM,CAAC,QAAP,GAAmB,GAAA,CAAA,QArDnB,CAAA;AAAA","file":"frontend/entities/building.entity.js","sourceRoot":"/source/","sourcesContent":["#Building model and Building collection Definition\nclass Building extends Backbone.Model\n\n\n\t#Count the number of units for each unit type in a building\n\tgetUnitTypes:(building_id)->\n\n\t\tunitTypes = []\n\t\tif building_id == \"\"\n\t\t\treturn unitTypes\n\t\tunits = unitCollection.where\n\t\t\t\t\t\t'building_id'  : building_id\n\n\t\tunits = new Backbone.Collection units\n\t\tvariants = units.pluck(\"unit_variant_id\") \n\t\t$.each variants,(index,value)->\n\t\t\tvarinatModel = apartmentVariantCollection.findWhere\n\t\t\t\t\t\t\t\t\t'id' : value\n\t\t\tunitTypes.push varinatModel.get 'unit_type_id'\n\n\t\tunitTypes = _.uniq unitTypes\n\t\tunitTypes\n\n\t#check 3d rotation view available or not\n\tcheckRotationView:(buildingId)->\n\t\tbuildingModel = buildingCollection.findWhere({'building_id':parseInt(buildingId)})\n\t\tif buildingId == \"\"\n\t\t\treturn false\n\t\trotationImages = buildingModel.get('threed_view').image.length\n\t\tif parseInt(rotationImages) >= 4\n\t\t\tbuildingModel.set 'rotation' , 'yes'\n\t\telse\n\t\t\tbuildingModel.set 'rotation' , 'no'\n\n\t\tbuildingModel.get('rotation')\n\n\n\n\nclass BuildingCollection extends Backbone.Collection\n\tmodel : Building\n\t#url to fetch building data\n\turl : ->\n\t\t\"http://commonfloor.local/methods/functions.php?action=load_buildings\"\n\n\t#set the attributes of a building model\n\t# if blank,fetch it from the server with the url mentioned above.\n\tsetBuildingAttributes:(data)->\n\n\t\t# @set buildingData\n\t\tconsole.log data\n\t\tbuildingCollection.reset data\n\nwindow.buildingCollection  = new BuildingCollection\nwindow.building  = new Building"]}