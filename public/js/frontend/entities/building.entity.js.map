{"version":3,"sources":["frontend/entities/building.entity.coffee"],"names":[],"mappings":"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","file":"frontend/entities/building.entity.js","sourceRoot":"/source/","sourcesContent":["#Building model and Building collection Definition\nclass Building extends Backbone.Model\n\n\n\t#Get all the unit types in a building\n\tgetUnitTypes:(building_id)->\n\n\t\tunitTypes = []\n\t\tif building_id == \"\"\n\t\t\treturn unitTypes\n\t\tunits = unitCollection.where\n\t\t\t\t\t\t'building_id'  : building_id\n\n\t\tunits = new Backbone.Collection units\n\t\tvariants = units.pluck(\"unit_variant_id\") \n\t\t$.each variants,(index,value)->\n\t\t\tvarinatModel = apartmentVariantCollection.findWhere\n\t\t\t\t\t\t\t\t\t'id' : value\n\t\t\tunitTypes.push varinatModel.get 'unit_type_id'\n\n\t\tunitTypes = _.uniq unitTypes\n\t\tunitTypes\n\n\t#Count the number of units for each unit type in a building\n\tgetUnitTypesCount:(building_id,unitTypes)->\n\n\t\ttypes = []\n\t\tif building_id == \"\"\n\t\t\treturn types\n\t\t$.each unitTypes,(ind,val)->\n\t\t\tunitTypeModel = unitTypeCollection.findWhere\n\t\t\t\t\t\t\t\t'id' : val\n\t\t\tvariants = apartmentVariantCollection.where\n\t\t\t\t\t\t\t'unit_type_id' : val\n\t\t\tunits = []\n\t\t\t$.each variants,(index,value)->\n\t\t\t\tunitsColl = unitCollection.where\n\t\t\t\t\t\t\t\t'unit_variant_id' : value.get 'id'\n\t\t\t\t\t\t\t\t'building_id' : building_id\n\n\t\t\t\t$.merge units, unitsColl\n\t\t\ttypes.push \n\t\t\t\t'name' : unitTypeModel.get 'name'\n\t\t\t\t'units' : units.length\n\n\t\ttypes\n\n\t#Get the minimum sellable area of all the apartments in a building\n\tgetMinimumArea:(building_id)->\n\t\tif building_id == \"\"\n\t\t\treturn\n\t\tunits = unitCollection.where\n\t\t\t\t\t'building_id' : building_id\n\t\ttemp = []\n\t\t$.each units,(index,value)->\n\t\t\tvariants = apartmentVariantCollection.findWhere\n\t\t\t\t\t\t\t'id' : value.get 'unit_variant_id'\n\t\t\ttemp.push variants.get 'super_built_up_area'\n\t\tmin= 0\n\t\tif temp.length != 0\t\n\t\t\tmin =  _.min temp\n\t\tmin\n\n\t#Get the minimum cost of all the apartments in a building\n\tgetMinimumCost:(building_id)->\n\t\tif building_id == \"\"\n\t\t\treturn\n\t\tunits = unitCollection.where\n\t\t\t\t\t'building_id' : building_id\n\t\ttemp = []\n\t\t$.each units,(index,value)->\n\t\t\tunits = unit.getUnitDetails(value.get('id'))\n\t\t\ttemp.push units[3]\n\n\t\tmin= 0\n\t\tif temp.length != 0\t\n\t\t\tmin =  _.min temp\n\t\tmin\n\t\t\n\n\n\t#get all the apartments in a building\n\tgetBuildingUnits:(building_id)->\n\t\tif building_id == \"\"\n\t\t\treturn\n\t\tunits = unitCollection.where\n\t\t\t\t\t'building_id' : building_id\n\n\t\tunits \n\n\t#Rotation view for a building\n\tcheckRotationView:(building)->\n\t\tif building == \"\"\n\t\t\treturn\n\t\ttransitionImages = []\n\t\tbuildingModel = buildingCollection.findWhere({'id':parseInt(building)})\n\t\tbreakpoints = buildingModel.get 'breakpoints'\n\t\t\n\t\tif parseInt(breakpoints.length) > 1\n\t\t\t@set 'rotation' , 1\n\t\telse\n\t\t\t@set 'rotation' , 0\n\n\t\t@get('rotation')\n\n\n\n\n\nclass BuildingCollection extends Backbone.Collection\n\tmodel : Building\n\t\n\t#set the attributes of a building model\n\tsetBuildingAttributes:(data)->\n\n\t\t# @set buildingData\n\t\tbuildingCollection.reset data\n\nwindow.buildingCollection  = new BuildingCollection\nwindow.building  = new Building"]}