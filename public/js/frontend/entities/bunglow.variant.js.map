{"version":3,"sources":["frontend/entities/bunglow.variant.coffee"],"names":[],"mappings":"AACA;AAAA,MAAA,wCAAA;IAAA;+BAAA;;AAAA,EAAM;AAGL,sCAAA,CAAA;;;;KAAA;;AAAA,6BAAA,aAAA,GAAc,SAAC,UAAD,GAAA;AACb,UAAA,uCAAA;AAAA,MAAA,SAAA,GAAY,EAAZ,CAAA;AACA,MAAA,IAAG,CAAA,CAAA,UAAA,YAA0B,QAAQ,CAAC,KAAnC,CAAA,IAA4C,UAAA,KAAc,EAA7D;AACC,cAAA,CADD;OADA;AAAA,MAGA,gBAAA,GAAmB,wBAAwB,CAAC,SAAzB,CAAmC;AAAA,QACrD,IAAA,EAAK,QAAA,CAAS,UAAU,CAAC,GAAX,CAAe,iBAAf,CAAT,CADgD;OAAnC,CAHnB,CAAA;AAKA,MAAA,IAAG,gBAAA,KAAoB,MAAvB;AACC,QAAA,UAAA,GAAa,CAAE,UAAA,CAAW,gBAAgB,CAAC,GAAjB,CAAqB,iBAArB,CAAX,CAAF,CAAA,GACT,UAAA,CAAW,gBAAgB,CAAC,GAAjB,CAAqB,qBAArB,CAAX,CADJ,CAAA;AAAA,QAEA,SAAA,GAAY,UAAU,CAAC,OAAX,CAAmB,CAAnB,CAFZ,CADD;OALA;aASA,UAVa;IAAA,CAAd,CAAA;;0BAAA;;KAH4B,QAAQ,CAAC,MAAtC,CAAA;;AAAA,EAoBM;AACL,gDAAA,CAAA;;;;KAAA;;AAAA,uCAAA,KAAA,GAAQ,cAAR,CAAA;;AAAA,uCAIA,2BAAA,GAA4B,SAAC,IAAD,GAAA;aAG3B,wBAAwB,CAAC,KAAzB,CAA+B,IAA/B,EAH2B;IAAA,CAJ5B,CAAA;;AAAA,uCAUA,eAAA,GAAgB,SAAA,GAAA;AACf,UAAA,eAAA;AAAA,MAAA,KAAA,GAAQ,EAAR,CAAA;AAAA,MACA,QAAA,GAAW,EADX,CAAA;AAAA,MAEA,wBAAwB,CAAC,IAAzB,CAA8B,SAAC,KAAD,GAAA;AAC7B,YAAA,YAAA;AAAA,QAAA,YAAA,GAAe,cAAc,CAAC,KAAf,CACd;AAAA,UAAA,eAAA,EAAkB,KAAK,CAAC,GAAN,CAAU,IAAV,CAAlB;SADc,CAAf,CAAA;eAEA,KAAK,CAAC,IAAN,CAAY,YAAZ,EAH6B;MAAA,CAA9B,CAFA,CAAA;AAAA,MAMA,CAAC,CAAC,IAAF,CAAO,KAAP,EAAa,SAAC,KAAD,EAAO,KAAP,GAAA;eACZ,QAAA,GAAW,CAAC,CAAC,KAAF,CAAQ,QAAR,EAAmB,KAAnB,EADC;MAAA,CAAb,CANA,CAAA;AAAA,MAQA,OAAO,CAAC,GAAR,CAAY,QAAZ,CARA,CAAA;aASA,SAVe;IAAA,CAVhB,CAAA;;oCAAA;;KADsC,QAAQ,CAAC,WApBhD,CAAA;;AAAA,EA2CA,MAAM,CAAC,wBAAP,GAAmC,GAAA,CAAA,wBA3CnC,CAAA;;AAAA,EA4CA,MAAM,CAAC,cAAP,GAAyB,GAAA,CAAA,cA5CzB,CAAA;AAAA","file":"frontend/entities/bunglow.variant.js","sourceRoot":"/source/","sourcesContent":["#Bunglow Variant model and Bunglow Variant collection Definition\nclass BunglowVariant extends Backbone.Model\n\n\t#calculate unit price of a model \n\tfindUnitPrice:(unit_model)->\n\t\tbasicCost = \"\"\n\t\tif unit_model not instanceof Backbone.Model || unit_model == \"\"\n\t\t\treturn \n\t\tunitVarinatModel = bunglowVariantCollection.findWhere({\n\t\t\t'id':parseInt(unit_model.get('unit_variant_id'))})\n\t\tif unitVarinatModel != undefined\n\t\t\tbasic_cost = ( parseFloat(unitVarinatModel.get('per_sq_ft_price'))) *\n\t\t\t\t\t\t\tparseFloat(unitVarinatModel.get('super_built_up_area'))\n\t\t\tbasicCost = basic_cost.toFixed(2)\n\t\tbasicCost\n\n\t\n\t\n\n\n\nclass BunglowVariantCollection extends Backbone.Collection\n\tmodel : BunglowVariant\n\t\n\n\t#set attributes of a Bunglow Variant model\n\tsetBunglowVariantAttributes:(data)->\n\n\t\t# @set BunglowData\n\t\tbunglowVariantCollection.reset data\n\n\t#get all the bungalow units\n\tgetBunglowUnits:()->\n\t\tunits = []\n\t\tnewUnits = []\n\t\tbunglowVariantCollection.each (model)->\n\t\t\tbunglowUnits = unitCollection.where\n\t\t\t\tunit_variant_id : model.get('id')\n\t\t\tunits.push  bunglowUnits\n\t\t$.each units,(index,value)->\n\t\t\tnewUnits = $.merge(newUnits , value)\n\t\tconsole.log newUnits\n\t\tnewUnits\n\nwindow.bunglowVariantCollection  = new BunglowVariantCollection\nwindow.bunglowVariant  = new BunglowVariant"]}