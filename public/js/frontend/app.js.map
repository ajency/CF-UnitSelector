{"version":3,"sources":["frontend/app.coffee"],"names":[],"mappings":"AAAA;AAAA,EAAA,CAAC,CAAC,MAAF,CAAS,UAAU,CAAC,WAAW,CAAA,SAA/B,EAEC;AAAA,IAAA,SAAA,EAAY,EAAZ;AAAA,IAEA,eAAA,EAAkB,SAAA,GAAA;aACjB,QAAQ,CAAC,OAAO,CAAC,WAAjB,CAAA,EADiB;IAAA,CAFlB;AAAA,IAKA,KAAA,EAAQ,SAAC,IAAD,EAAO,GAAP,GAAA;;QAAO,MAAM;OACpB;AAAA,MAAA,IAAC,CAAA,SAAU,CAAA,IAAA,CAAX,GAAmB,GAAnB,CAAA;aACA,KAFO;IAAA,CALR;AAAA,IASA,eAAA,EAAkB,SAAA,GAAA;AACjB,MAAA,UAAU,CAAC,iBAAiB,CAAC,SAAS,CAAC,WAAvC,GAAqD,IAArD,CAAA;AAAA,MACA,CAAC,CAAC,MAAF,CAAS,UAAU,CAAC,SAAS,CAAA,SAA7B,EAAiC;AAAA,QAAA,SAAA,EAAY,IAAC,CAAA,SAAb;OAAjC,CADA,CAAA;aAEA,IAAC,CAAA,MAAD,GAAc,IAAA,UAAU,CAAC,SAAX,CAAqB;AAAA,QAAA,GAAA,EAAM,IAAN;OAArB,EAHG;IAAA,CATlB;AAAA,IAcA,KAAA,EAAQ,SAAC,OAAD,GAAA;;QAAC,UAAU;OAClB;AAAA,MAAA,IAAC,CAAA,cAAD,CAAA,CAAA,CAAA;AAAA,MACA,IAAC,CAAA,aAAD,CAAe,cAAf,EAA+B,OAA/B,CADA,CAAA;AAAA,MAEA,IAAC,CAAA,eAAD,CAAA,CAFA,CAAA;AAAA,MAGA,IAAC,CAAA,cAAc,CAAC,GAAhB,CAAoB,OAApB,EAA6B,IAA7B,CAHA,CAAA;aAIA,IAAC,CAAA,aAAD,CAAe,OAAf,EAAwB,OAAxB,EALO;IAAA,CAdR;GAFD,CAAA,CAAA;;AAAA,EA2BA,UAAU,CAAC,cAAX,CAA0B,MAA1B,EAAkC,SAAC,OAAD,GAAA;AAEjC,QAAA,oCAAA;AAAA,IAAA,IAAA,GAAW,SAAS,CAAC,QAAd,GAA6B,SAAS,CAAC,QAAvC,GAAqD,SAAS,CAAC,YAAtE,CAAA;AAAA,IAGA,MAAA,GAAS,MAAM,CAAC,MAAO,CAAA,IAAA,CAAd,IAAuB,MAAM,CAAC,MAAO,CAAA,OAAA,CAArC,IAAiD,MAAM,CAAC,MAAxD,IAAkE,KAH3E,CAAA;AAMA,IAAA,IAAG,CAAA,MAAH;AAAmB,aAAO,OAAP,CAAnB;KANA;AAAA,IASA,MAAA,GAAS,MATT,CAAA;AAAA,IAUA,GAAA,GAAM,OAAO,CAAC,KAAR,CAAc,GAAd,CAVN,CAAA;AAWA,SAAA,qCAAA;iBAAA;AACC,MAAA,MAAA,GAAS,MAAO,CAAA,CAAA,CAAhB,CADD;AAAA,KAXA;AAAA,IAeA,MAAA,GAAS,MAAA,IAAU,OAfnB,CAAA;WAiBA,OAnBiC;EAAA,CAAlC,CA3BA,CAAA;AAAA","file":"frontend/app.js","sourceRoot":"/source/","sourcesContent":["_.extend Marionette.Application::,\n\n\tappStates : {}\n\n\tgetCurrentRoute : ->\n\t\tBackbone.history.getFragment()\n\n\tstate : (name, def = {})->\n\t\t@appStates[name] = def\n\t\t@\n\n\t_registerStates : ->\n\t\tMarionette.RegionControllers.prototype.controllers = @\n\t\t_.extend Marionette.AppStates::, appStates : @appStates\n\t\t@router = new Marionette.AppStates app : @\n\n\tstart : (options = {})->\n\t\t@_detectRegions()\n\t\t@triggerMethod 'before:start', options\n\t\t@_registerStates()\n\t\t@_initCallbacks.run options, @\n\t\t@triggerMethod 'start', options\n\n\n\n# Handlebars Localisation Helper\n# Source: https://gist.github.com/tracend/3261055\nHandlebars.registerHelper 'i10n', (keyword)->\n\n\tlang = if (navigator.language) then navigator.language else navigator.userLanguage \n \n\t# pick the right dictionary (if only one available assume it's the right one...)\n\tlocale = window.locale[lang] or window.locale['en-US'] or window.locale or false\n\t\n\t# exit now if there's no data\n\tif not locale then return keyword\n\t\n\t# loop through all the key hierarchy (if any)\n\ttarget = locale\n\tkey = keyword.split(\".\")\n\tfor i in key\n\t\ttarget = target[i]\n\n\t# fallback to the original string if nothing found\n\ttarget = target || keyword\t\n\t#output\n\ttarget\n"]}