{"version":3,"sources":["project.entity.js","bunglow.variant.js","settings.entity.js","unit.entity.js","unitType.entity.js","building.entity.js","apartment.variant.entity.js","floor.layout.entity.js","plot.variant.entity.js","common.js","project.controller.js","project.master.controller.js","project.master.filter.controller.js","unit.controller.js","project.list.controller.js","building.list.controller.js","villa.list.controller.js","apartments.list.controller.js","apartments.master.controller.js","apartment.filter.controller.js","master.list.bunglows.controller.js","master.list.buildings.controller.js","master.list.plots.controller.js","plot.list.controller.js","router.js","application.js"],"names":[],"mappingshIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjxrhlmjqt1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3evltcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChpwlKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"application.min.js","sourcesContent":["(function() {\n  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  CommonFloor.Project = (function(superClass) {\n    extend(Project, superClass);\n\n    function Project() {\n      return Project.__super__.constructor.apply(this, arguments);\n    }\n\n    Project.prototype.urlRoot = function() {\n      return BASERESTURL + '/project/' + this.project_id;\n    };\n\n    Project.prototype.parse = function(response) {\n      var resp;\n      resp = response.data;\n      return resp;\n    };\n\n    Project.prototype.setProjectAttributes = function(project_id) {\n      this.project_id = project_id;\n      if (jQuery.isEmptyObject(this.toJSON()) || parseInt(this.get('id')) !== parseInt(project_id)) {\n        return this.fetch({\n          async: false,\n          success: (function(_this) {\n            return function(collection, response) {\n              if (response === 0 || jQuery.isEmptyObject(response)) {\n                return _this.clear();\n              }\n            };\n          })(this)\n        });\n      }\n    };\n\n    Project.prototype.resetEntitites = function() {\n      unitCollection.reset();\n      return settings.clear();\n    };\n\n    Project.prototype.checkRotationView = function() {\n      var breakpoints, transitionImages;\n      transitionImages = [];\n      breakpoints = project.get('breakpoints');\n      if (parseInt(breakpoints.length) > 1) {\n        this.set('rotation', 1);\n      } else {\n        this.set('rotation', 0);\n      }\n      return this.get('rotation');\n    };\n\n    return Project;\n\n  })(Backbone.Model);\n\n  window.project = new CommonFloor.Project;\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/entities/project.entity.js.map","(function() {\n  var BunglowVariant, BunglowVariantCollection,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  BunglowVariant = (function(superClass) {\n    extend(BunglowVariant, superClass);\n\n    function BunglowVariant() {\n      return BunglowVariant.__super__.constructor.apply(this, arguments);\n    }\n\n    BunglowVariant.prototype.findUnitPrice = function(unit_model) {\n      var basicCost, basic_cost, unitVarinatModel;\n      basicCost = \"\";\n      if (!(unit_model instanceof Backbone.Model) || unit_model === \"\") {\n        return;\n      }\n      unitVarinatModel = bunglowVariantMasterCollection.findWhere({\n        'id': parseInt(unit_model.get('unit_variant_id'))\n      });\n      if (unitVarinatModel !== void 0) {\n        basic_cost = (parseFloat(unitVarinatModel.get('per_sq_ft_price'))) * parseFloat(unitVarinatModel.get('super_built_up_area'));\n        basicCost = basic_cost.toFixed(2);\n      }\n      return basicCost;\n    };\n\n    return BunglowVariant;\n\n  })(Backbone.Model);\n\n  BunglowVariantCollection = (function(superClass) {\n    extend(BunglowVariantCollection, superClass);\n\n    function BunglowVariantCollection() {\n      return BunglowVariantCollection.__super__.constructor.apply(this, arguments);\n    }\n\n    BunglowVariantCollection.prototype.model = BunglowVariant;\n\n    BunglowVariantCollection.prototype.setBunglowVariantAttributes = function(data) {\n      bunglowVariantCollection.reset(data);\n      return bunglowVariantMasterCollection.reset(data);\n    };\n\n    BunglowVariantCollection.prototype.getBunglowUnits = function() {\n      var newUnits, units;\n      units = [];\n      newUnits = [];\n      bunglowVariantCollection.each(function(model) {\n        var bunglowUnits;\n        bunglowUnits = unitCollection.where({\n          unit_variant_id: model.get('id')\n        });\n        return units.push(bunglowUnits);\n      });\n      $.each(units, function(index, value) {\n        return newUnits = $.merge(newUnits, value);\n      });\n      return newUnits;\n    };\n\n    BunglowVariantCollection.prototype.getBunglowMasterUnits = function() {\n      var newUnits, units;\n      units = [];\n      newUnits = [];\n      bunglowVariantMasterCollection.each(function(model) {\n        var bunglowUnits;\n        bunglowUnits = unitMasterCollection.where({\n          unit_variant_id: model.get('id')\n        });\n        return units.push(bunglowUnits);\n      });\n      $.each(units, function(index, value) {\n        return newUnits = $.merge(newUnits, value);\n      });\n      return newUnits;\n    };\n\n    BunglowVariantCollection.prototype.getVillaUnitTypes = function() {\n      var unit_types;\n      unit_types = [];\n      bunglowVariantMasterCollection.each(function(item) {\n        var unitTypeModel;\n        unitTypeModel = unitTypeMasterCollection.findWhere({\n          'id': item.get('unit_type_id')\n        });\n        if ($.inArray(item.get('unit_type_id'), unit_types) === -1) {\n          return unit_types.push(parseInt(unitTypeModel.get('id')));\n        }\n      });\n      return unit_types;\n    };\n\n    BunglowVariantCollection.prototype.getVillaAttributes = function() {\n      var attributes;\n      attributes = [];\n      bunglowVariantMasterCollection.each(function(item) {\n        return $.each(item.get('variant_attributes'), function(index, value) {\n          if (_.isArray(value)) {\n            return $.each(value, function(ind, val) {\n              if ($.inArray(val, attributes) === -1) {\n                return attributes.push(val);\n              }\n            });\n          } else {\n            if ($.inArray(value, attributes) === -1) {\n              return attributes.push(value);\n            }\n          }\n        });\n      });\n      return attributes;\n    };\n\n    return BunglowVariantCollection;\n\n  })(Backbone.Collection);\n\n  window.bunglowVariantCollection = new BunglowVariantCollection;\n\n  window.bunglowVariantMasterCollection = new BunglowVariantCollection;\n\n  window.bunglowVariant = new BunglowVariant;\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/entities/bunglow.variant.js.map","(function() {\n  var Settings,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Settings = (function(superClass) {\n    extend(Settings, superClass);\n\n    function Settings() {\n      return Settings.__super__.constructor.apply(this, arguments);\n    }\n\n    Settings.prototype.generateFloorRise = function(building) {\n      var buildingModel, cost, floorrise, floors, i, sum;\n      if (building === \"\") {\n        return;\n      }\n      buildingModel = buildingMasterCollection.findWhere({\n        'id': building\n      });\n      i = 0;\n      floors = buildingModel.get('no_of_floors');\n      floorrise = [];\n      cost = buildingModel.get('floor_rise');\n      sum = 0 + cost;\n      while (i <= 1) {\n        floorrise[i] = 0;\n        i++;\n      }\n      while (i <= floors) {\n        floorrise[i] = sum;\n        sum = sum + cost;\n        i++;\n      }\n      return floorrise;\n    };\n\n    Settings.prototype.setSettingsAttributes = function(data) {\n      return settings.set(data);\n    };\n\n    return Settings;\n\n  })(Backbone.Model);\n\n  window.settings = new Settings;\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/entities/settings.entity.js.map","(function() {\n  var Unit, UnitCollection,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Unit = (function(superClass) {\n    extend(Unit, superClass);\n\n    function Unit() {\n      return Unit.__super__.constructor.apply(this, arguments);\n    }\n\n    Unit.prototype.getUnitDetails = function(unit_id) {\n      var attributes, id, price, type, unit, unitType, unitTypeModel, unitVariant;\n      id = parseInt(unit_id);\n      unit = unitMasterCollection.findWhere({\n        id: id\n      });\n      unitVariant = 0;\n      type = '';\n      price = 0;\n      attributes = [];\n      if (bunglowVariantMasterCollection.get(unit.get('unit_variant_id')) !== void 0) {\n        unitVariant = bunglowVariantMasterCollection.findWhere({\n          'id': unit.get('unit_variant_id')\n        });\n        type = 'villa';\n        price = window.bunglowVariant.findUnitPrice(unit);\n        attributes = unitVariant.get('variant_attributes');\n      } else if (apartmentVariantMasterCollection.get(unit.get('unit_variant_id')) !== void 0) {\n        unitVariant = apartmentVariantMasterCollection.findWhere({\n          'id': unit.get('unit_variant_id')\n        });\n        unitTypeModel = unitTypeMasterCollection.findWhere({\n          'id': parseInt(unitVariant.get('unit_type_id'))\n        });\n        type = 'apartment';\n        if (window.propertyTypes[unitTypeModel.get('property_type_id')] === 'Penthouses') {\n          type = 'Penthouse';\n        }\n        price = window.apartmentVariant.findUnitPrice(unit);\n        attributes = unitVariant.get('variant_attributes');\n      } else if (plotVariantMasterCollection.get(unit.get('unit_variant_id')) !== void 0) {\n        unitVariant = plotVariantMasterCollection.findWhere({\n          'id': unit.get('unit_variant_id')\n        });\n        unitVariant.set('super_built_up_area', unitVariant.get('size'));\n        type = 'plot';\n        price = window.plotVariant.findUnitPrice(unit);\n        attributes = unitVariant.get('variant_attributes');\n      }\n      unitType = unitTypeMasterCollection.findWhere({\n        'id': unit.get('unit_type_id')\n      });\n      return [unitVariant, unitType, type, price, attributes];\n    };\n\n    Unit.prototype.getFilterUnitDetails = function(unit_id) {\n      var attributes, id, price, type, unit, unitType, unitVariant;\n      id = parseInt(unit_id);\n      unit = unitCollection.findWhere({\n        id: id\n      });\n      unitVariant = 0;\n      type = '';\n      price = 0;\n      attributes = [];\n      if (bunglowVariantCollection.get(unit.get('unit_variant_id')) !== void 0) {\n        unitVariant = bunglowVariantCollection.findWhere({\n          'id': unit.get('unit_variant_id')\n        });\n        type = 'villa';\n        price = window.bunglowVariant.findUnitPrice(unit);\n        attributes = unitVariant.get('variant_attributes');\n      } else if (apartmentVariantCollection.get(unit.get('unit_variant_id')) !== void 0) {\n        unitVariant = apartmentVariantCollection.findWhere({\n          'id': unit.get('unit_variant_id')\n        });\n        type = 'apartment';\n        price = window.apartmentVariant.findUnitPrice(unit);\n        attributes = unitVariant.get('variant_attributes');\n      } else if (plotVariantCollection.get(unit.get('unit_variant_id')) !== void 0) {\n        unitVariant = plotVariantCollection.findWhere({\n          'id': unit.get('unit_variant_id')\n        });\n        unitVariant.set('super_built_up_area', unitVariant.get('size'));\n        type = 'plot';\n        price = window.plotVariant.findUnitPrice(unit);\n        attributes = unitVariant.get('variant_attributes');\n      }\n      unitType = unitTypeMasterCollection.findWhere({\n        'id': unit.get('unit_type_id')\n      });\n      return [unitVariant, unitType, type, price, attributes];\n    };\n\n    return Unit;\n\n  })(Backbone.Model);\n\n  UnitCollection = (function(superClass) {\n    extend(UnitCollection, superClass);\n\n    function UnitCollection() {\n      return UnitCollection.__super__.constructor.apply(this, arguments);\n    }\n\n    UnitCollection.prototype.model = Unit;\n\n    UnitCollection.prototype.getRecord = function() {\n      return this.currentModel;\n    };\n\n    UnitCollection.prototype.setRecord = function(model) {\n      return this.currentModel = model;\n    };\n\n    UnitCollection.prototype.next = function() {\n      var first, next, record, units;\n      units = _.pluck(this.toArray(), 'id');\n      next = this.at(this.indexOf(this.getRecord()) + 1);\n      if (_.isUndefined(next)) {\n        first = _.first(units);\n        if (this.currentModel.get('id') === first) {\n          return next;\n        } else {\n          record = this.findWhere({\n            'id': first\n          });\n          return record;\n        }\n      } else {\n        return next;\n      }\n    };\n\n    UnitCollection.prototype.prev = function() {\n      var last, prev, record, units;\n      units = _.pluck(this.toArray(), 'id');\n      prev = this.at(this.indexOf(this.getRecord()) - 1);\n      if (_.isUndefined(prev)) {\n        last = _.last(units);\n        if (this.currentModel.get('id') === last) {\n          return prev;\n        } else {\n          record = this.findWhere({\n            'id': last\n          });\n          return record;\n        }\n      } else {\n        return prev;\n      }\n    };\n\n    UnitCollection.prototype.setUnitAttributes = function(data) {\n      var response;\n      response = this.setUnitType(data);\n      unitCollection.reset(response);\n      unitMasterCollection.reset(response);\n      return window.unitTempCollection = unitCollection.clone();\n    };\n\n    UnitCollection.prototype.setUnitType = function(data) {\n      $.each(data, function(index, value) {\n        var unitType, unitVariant;\n        unitVariant = '';\n        if (bunglowVariantCollection.get(value.unit_variant_id) !== void 0) {\n          unitVariant = bunglowVariantCollection.findWhere({\n            'id': value.unit_variant_id\n          });\n        }\n        if (apartmentVariantCollection.get(value.unit_variant_id) !== void 0) {\n          unitVariant = apartmentVariantCollection.findWhere({\n            'id': value.unit_variant_id\n          });\n        }\n        if (plotVariantCollection.get(value.unit_variant_id) !== void 0) {\n          unitVariant = plotVariantCollection.findWhere({\n            'id': value.unit_variant_id\n          });\n          unitVariant.set('super_built_up_area', unitVariant.get('size'));\n        }\n        unitType = unitTypeCollection.findWhere({\n          'id': unitVariant.get('unit_type_id')\n        });\n        value['unit_type_id'] = unitType.get('id');\n        return value['area'] = unitVariant.get('super_built_up_area');\n      });\n      return data;\n    };\n\n    return UnitCollection;\n\n  })(Backbone.Collection);\n\n  window.unitCollection = new UnitCollection;\n\n  window.unitMasterCollection = new UnitCollection;\n\n  window.unit = new Unit;\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/entities/unit.entity.js.map","(function() {\n  var UnitType, UnitTypeCollection,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  UnitType = (function(superClass) {\n    extend(UnitType, superClass);\n\n    function UnitType() {\n      return UnitType.__super__.constructor.apply(this, arguments);\n    }\n\n    return UnitType;\n\n  })(Backbone.Model);\n\n  UnitTypeCollection = (function(superClass) {\n    extend(UnitTypeCollection, superClass);\n\n    function UnitTypeCollection() {\n      return UnitTypeCollection.__super__.constructor.apply(this, arguments);\n    }\n\n    UnitTypeCollection.prototype.model = UnitType;\n\n    UnitTypeCollection.prototype.setUnitTypeAttributes = function(data) {\n      unitTypeCollection.reset(data);\n      return unitTypeMasterCollection.reset(data);\n    };\n\n    return UnitTypeCollection;\n\n  })(Backbone.Collection);\n\n  window.unitTypeCollection = new UnitTypeCollection;\n\n  window.unitTypeMasterCollection = new UnitTypeCollection;\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/entities/unitType.entity.js.map","(function() {\n  var Building, BuildingCollection,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Building = (function(superClass) {\n    extend(Building, superClass);\n\n    function Building() {\n      return Building.__super__.constructor.apply(this, arguments);\n    }\n\n    Building.prototype.getUnitTypes = function(building_id) {\n      var unitTypes, units, variants;\n      unitTypes = [];\n      if (building_id === \"\") {\n        return unitTypes;\n      }\n      units = unitCollection.where({\n        'building_id': parseInt(building_id)\n      });\n      units = new Backbone.Collection(units);\n      variants = units.pluck(\"unit_variant_id\");\n      $.each(variants, function(index, value) {\n        var varinatModel;\n        varinatModel = apartmentVariantCollection.findWhere({\n          'id': parseInt(value)\n        });\n        return unitTypes.push(varinatModel.get('unit_type_id'));\n      });\n      unitTypes = _.uniq(unitTypes);\n      return unitTypes;\n    };\n\n    Building.prototype.getUnitTypesCount = function(building_id, unitTypes) {\n      var types;\n      types = [];\n      if (building_id === \"\") {\n        return types;\n      }\n      $.each(unitTypes, function(ind, val) {\n        var unitTypeModel, units, variants;\n        unitTypeModel = unitTypeCollection.findWhere({\n          'id': val\n        });\n        variants = apartmentVariantCollection.where({\n          'unit_type_id': val\n        });\n        units = [];\n        $.each(variants, function(index, value) {\n          var unitsColl;\n          unitsColl = unitCollection.where({\n            'unit_variant_id': value.get('id'),\n            'building_id': building_id,\n            'availability': 'available'\n          });\n          return $.merge(units, unitsColl);\n        });\n        return types.push({\n          'name': unitTypeModel.get('name'),\n          'units': units.length\n        });\n      });\n      return types;\n    };\n\n    Building.prototype.getMinimumArea = function(building_id) {\n      var min, temp, units;\n      if (building_id === \"\") {\n        return;\n      }\n      units = unitCollection.where({\n        'building_id': building_id\n      });\n      temp = [];\n      $.each(units, function(index, value) {\n        var variants;\n        variants = apartmentVariantCollection.findWhere({\n          'id': value.get('unit_variant_id')\n        });\n        return temp.push(parseFloat(variants.get('super_built_up_area')));\n      });\n      min = 0;\n      if (temp.length !== 0) {\n        min = _.min(temp);\n      }\n      return min;\n    };\n\n    Building.prototype.getMinimumCost = function(building_id) {\n      var min, temp, units;\n      if (building_id === \"\") {\n        return;\n      }\n      units = unitCollection.where({\n        'building_id': building_id\n      });\n      temp = [];\n      $.each(units, function(index, value) {\n        units = unit.getUnitDetails(value.get('id'));\n        return temp.push(parseFloat(units[3]));\n      });\n      min = 0;\n      if (temp.length !== 0) {\n        min = _.min(temp);\n      }\n      return min;\n    };\n\n    Building.prototype.getBuildingUnits = function(building_id) {\n      var units, unitsFloor, unitsPosition;\n      if (building_id === \"\") {\n        return;\n      }\n      units = unitCollection.where({\n        'building_id': building_id\n      });\n      unitsFloor = _.sortBy(units, function(num) {\n        return num.get('floor');\n      });\n      unitsPosition = _.sortBy(unitsFloor, function(num) {\n        return num.get('position');\n      });\n      return units;\n    };\n\n    Building.prototype.checkRotationView = function(building) {\n      var breakpoints, buildingModel, transitionImages;\n      if (building === \"\") {\n        return;\n      }\n      transitionImages = [];\n      buildingModel = buildingCollection.findWhere({\n        'id': parseInt(building)\n      });\n      breakpoints = buildingModel.get('breakpoints');\n      if (parseInt(breakpoints.length) > 1) {\n        this.set('rotation', 1);\n      } else {\n        this.set('rotation', 0);\n      }\n      return this.get('rotation');\n    };\n\n    return Building;\n\n  })(Backbone.Model);\n\n  BuildingCollection = (function(superClass) {\n    extend(BuildingCollection, superClass);\n\n    function BuildingCollection() {\n      return BuildingCollection.__super__.constructor.apply(this, arguments);\n    }\n\n    BuildingCollection.prototype.model = Building;\n\n    BuildingCollection.prototype.getRecord = function() {\n      return this.currentModel;\n    };\n\n    BuildingCollection.prototype.setRecord = function(model) {\n      return this.currentModel = model;\n    };\n\n    BuildingCollection.prototype.next = function() {\n      var first, next, record, units;\n      units = _.pluck(this.toArray(), 'id');\n      next = this.at(this.indexOf(this.getRecord()) + 1);\n      if (_.isUndefined(next)) {\n        first = _.first(units);\n        if (this.currentModel.get('id') === first) {\n          return next;\n        } else {\n          record = this.findWhere({\n            'id': first\n          });\n          return record;\n        }\n      } else {\n        return next;\n      }\n    };\n\n    BuildingCollection.prototype.prev = function() {\n      var last, prev, record, units;\n      units = _.pluck(this.toArray(), 'id');\n      prev = this.at(this.indexOf(this.getRecord()) - 1);\n      if (_.isUndefined(prev)) {\n        last = _.last(units);\n        if (this.currentModel.get('id') === last) {\n          return prev;\n        } else {\n          record = this.findWhere({\n            'id': last\n          });\n          return record;\n        }\n      } else {\n        return prev;\n      }\n    };\n\n    BuildingCollection.prototype.setBuildingAttributes = function(data) {\n      buildingCollection.reset(data);\n      return buildingMasterCollection.reset(data);\n    };\n\n    return BuildingCollection;\n\n  })(Backbone.Collection);\n\n  window.buildingCollection = new BuildingCollection;\n\n  window.buildingMasterCollection = new BuildingCollection;\n\n  window.building = new Building;\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/entities/building.entity.js.map","(function() {\n  var ApartmentVariant, ApartmentVariantCollection,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ApartmentVariant = (function(superClass) {\n    extend(ApartmentVariant, superClass);\n\n    function ApartmentVariant() {\n      return ApartmentVariant.__super__.constructor.apply(this, arguments);\n    }\n\n    ApartmentVariant.prototype.findUnitPrice = function(unitModel) {\n      var basicCost, basic_cost, building, floorRise, floorRiseArray, unitVarinatModel;\n      basicCost = 0.00;\n      if (!(unitModel instanceof Backbone.Model) || unitModel === \"\") {\n        return;\n      }\n      building = buildingMasterCollection.findWhere({\n        'id': unitModel.get('building_id')\n      });\n      unitVarinatModel = apartmentVariantMasterCollection.findWhere({\n        'id': parseInt(unitModel.get('unit_variant_id'))\n      });\n      if (!_.isUndefined(unitVarinatModel)) {\n        floorRiseArray = settings.generateFloorRise(unitModel.get('building_id'));\n        floorRise = floorRiseArray[unitModel.get('floor')];\n        basic_cost = (parseFloat(unitVarinatModel.get('per_sq_ft_price')) + parseFloat(floorRise)) * parseFloat(unitVarinatModel.get('super_built_up_area'));\n        basicCost = basic_cost.toFixed(2);\n      }\n      return basicCost;\n    };\n\n    return ApartmentVariant;\n\n  })(Backbone.Model);\n\n  ApartmentVariantCollection = (function(superClass) {\n    extend(ApartmentVariantCollection, superClass);\n\n    function ApartmentVariantCollection() {\n      return ApartmentVariantCollection.__super__.constructor.apply(this, arguments);\n    }\n\n    ApartmentVariantCollection.prototype.model = ApartmentVariant;\n\n    ApartmentVariantCollection.prototype.setApartmentVariantAttributes = function(data) {\n      apartmentVariantCollection.reset(data);\n      return apartmentVariantMasterCollection.reset(data);\n    };\n\n    ApartmentVariantCollection.prototype.getApartmentUnits = function() {\n      var newUnits, units;\n      units = [];\n      newUnits = [];\n      apartmentVariantCollection.each(function(model) {\n        var apartmentUnits;\n        apartmentUnits = unitCollection.where({\n          'unit_variant_id': model.get('id')\n        });\n        return $.merge(units, apartmentUnits);\n      });\n      if (units.length !== 0) {\n        $.each(units, function(index, value) {\n          var property, unitType;\n          unitType = unitTypeMasterCollection.findWhere({\n            'id': value.get('unit_type_id')\n          });\n          property = window.propertyTypes[unitType.get('property_type_id')];\n          if (s.decapitalize(property) === 'apartments') {\n            return newUnits.push(value);\n          }\n        });\n      }\n      return newUnits;\n    };\n\n    ApartmentVariantCollection.prototype.getPenthouseUnits = function() {\n      var units;\n      units = [];\n      unitCollection.each(function(model) {\n        var property, unitType;\n        unitType = unitTypeMasterCollection.findWhere({\n          'id': model.get('unit_type_id')\n        });\n        property = window.propertyTypes[unitType.get('property_type_id')];\n        if (s.decapitalize(property) === 'penthouses') {\n          return units.push(model);\n        }\n      });\n      return units;\n    };\n\n    ApartmentVariantCollection.prototype.getApartmentMasterUnits = function() {\n      var newUnits, units;\n      units = [];\n      newUnits = [];\n      apartmentVariantMasterCollection.each(function(model) {\n        var apartmentUnits;\n        apartmentUnits = unitMasterCollection.where({\n          'unit_variant_id': model.get('id')\n        });\n        return units.push(apartmentUnits);\n      });\n      $.each(units, function(index, value) {\n        return newUnits = $.merge(newUnits, value);\n      });\n      return newUnits;\n    };\n\n    ApartmentVariantCollection.prototype.getApartmentUnitTypes = function() {\n      var unit_types;\n      unit_types = [];\n      apartmentVariantMasterCollection.each(function(item) {\n        var unitTypeModel;\n        unitTypeModel = unitTypeMasterCollection.findWhere({\n          'id': item.get('unit_type_id')\n        });\n        if ($.inArray(item.get('unit_type_id'), unit_types) === -1) {\n          return unit_types.push(parseInt(unitTypeModel.get('id')));\n        }\n      });\n      return unit_types;\n    };\n\n    ApartmentVariantCollection.prototype.getApartmentAttributes = function() {\n      var attributes, types;\n      attributes = [];\n      types = [];\n      apartmentVariantMasterCollection.each(function(item) {\n        return $.each(item.get('variant_attributes'), function(index, value) {\n          if (_.isArray(value)) {\n            return $.each(value, function(ind, val) {\n              if ($.inArray(val, attributes) === -1) {\n                return attributes.push(val);\n              }\n            });\n          } else {\n            if ($.inArray(value, attributes) === -1) {\n              return attributes.push(value);\n            }\n          }\n        });\n      });\n      return [attributes];\n    };\n\n    return ApartmentVariantCollection;\n\n  })(Backbone.Collection);\n\n  window.apartmentVariantCollection = new ApartmentVariantCollection;\n\n  window.apartmentVariantMasterCollection = new ApartmentVariantCollection;\n\n  window.apartmentVariant = new ApartmentVariant;\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/entities/apartment.variant.entity.js.map","(function() {\n  var FloorLayout, FloorLayoutCollection,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  FloorLayout = (function(superClass) {\n    extend(FloorLayout, superClass);\n\n    function FloorLayout() {\n      return FloorLayout.__super__.constructor.apply(this, arguments);\n    }\n\n    return FloorLayout;\n\n  })(Backbone.Model);\n\n  FloorLayoutCollection = (function(superClass) {\n    extend(FloorLayoutCollection, superClass);\n\n    function FloorLayoutCollection() {\n      return FloorLayoutCollection.__super__.constructor.apply(this, arguments);\n    }\n\n    FloorLayoutCollection.prototype.model = FloorLayout;\n\n    FloorLayoutCollection.prototype.setFloorLayoutAttributes = function(data) {\n      return floorLayoutCollection.reset(data);\n    };\n\n    return FloorLayoutCollection;\n\n  })(Backbone.Collection);\n\n  window.floorLayoutCollection = new FloorLayoutCollection;\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/entities/floor.layout.entity.js.map","(function() {\n  var PlotVariant, PlotVariantCollection,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  PlotVariant = (function(superClass) {\n    extend(PlotVariant, superClass);\n\n    function PlotVariant() {\n      return PlotVariant.__super__.constructor.apply(this, arguments);\n    }\n\n    PlotVariant.prototype.findUnitPrice = function(unit_model) {\n      var basicCost, basic_cost, unitVarinatModel;\n      basicCost = \"\";\n      if (!(unit_model instanceof Backbone.Model) || unit_model === \"\") {\n        return;\n      }\n      unitVarinatModel = plotVariantMasterCollection.findWhere({\n        'id': parseInt(unit_model.get('unit_variant_id'))\n      });\n      if (unitVarinatModel !== void 0) {\n        basic_cost = (parseFloat(unitVarinatModel.get('per_sq_ft_price'))) * parseFloat(unitVarinatModel.get('size'));\n        basicCost = basic_cost.toFixed(2);\n      }\n      return basicCost;\n    };\n\n    return PlotVariant;\n\n  })(Backbone.Model);\n\n  PlotVariantCollection = (function(superClass) {\n    extend(PlotVariantCollection, superClass);\n\n    function PlotVariantCollection() {\n      return PlotVariantCollection.__super__.constructor.apply(this, arguments);\n    }\n\n    PlotVariantCollection.prototype.model = PlotVariant;\n\n    PlotVariantCollection.prototype.setPlotVariantAttributes = function(data) {\n      plotVariantCollection.reset(data);\n      return plotVariantMasterCollection.reset(data);\n    };\n\n    PlotVariantCollection.prototype.getPlotUnits = function() {\n      var newUnits, units;\n      units = [];\n      newUnits = [];\n      plotVariantCollection.each(function(model) {\n        var plotUnits;\n        plotUnits = unitCollection.where({\n          unit_variant_id: model.get('id')\n        });\n        return units.push(plotUnits);\n      });\n      $.each(units, function(index, value) {\n        return newUnits = $.merge(newUnits, value);\n      });\n      return newUnits;\n    };\n\n    PlotVariantCollection.prototype.getPlotMasterUnits = function() {\n      var newUnits, units;\n      units = [];\n      newUnits = [];\n      plotVariantMasterCollection.each(function(model) {\n        var plotUnits;\n        plotUnits = unitMasterCollection.where({\n          unit_variant_id: model.get('id')\n        });\n        return units.push(plotUnits);\n      });\n      $.each(units, function(index, value) {\n        return newUnits = $.merge(newUnits, value);\n      });\n      return newUnits;\n    };\n\n    PlotVariantCollection.prototype.getPlotUnitTypes = function() {\n      var unit_types;\n      unit_types = [];\n      plotVariantMasterCollection.each(function(item) {\n        var unitTypeModel;\n        unitTypeModel = unitTypeMasterCollection.findWhere({\n          'id': item.get('unit_type_id')\n        });\n        if ($.inArray(item.get('unit_type_id'), unit_types) === -1) {\n          return unit_types.push(parseInt(unitTypeModel.get('id')));\n        }\n      });\n      return unit_types;\n    };\n\n    PlotVariantCollection.prototype.getPlotAttributes = function() {\n      var attributes;\n      attributes = [];\n      plotVariantMasterCollection.each(function(item) {\n        return $.each(item.get('variant_attributes'), function(index, value) {\n          if (_.isArray(value)) {\n            return $.each(value, function(ind, val) {\n              if ($.inArray(val, attributes) === -1) {\n                return attributes.push(val);\n              }\n            });\n          } else {\n            if ($.inArray(value, attributes) === -1) {\n              return attributes.push(value);\n            }\n          }\n        });\n      });\n      return attributes;\n    };\n\n    return PlotVariantCollection;\n\n  })(Backbone.Collection);\n\n  window.plotVariantCollection = new PlotVariantCollection;\n\n  window.plotVariantMasterCollection = new PlotVariantCollection;\n\n  window.plotVariant = new PlotVariant;\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/entities/plot.variant.entity.js.map","(function() {\n  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  CommonFloor.NothingFoundView = (function(superClass) {\n    extend(NothingFoundView, superClass);\n\n    function NothingFoundView() {\n      return NothingFoundView.__super__.constructor.apply(this, arguments);\n    }\n\n    NothingFoundView.prototype.template = '#noFound-template';\n\n    return NothingFoundView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.NothingFoundCtrl = (function(superClass) {\n    extend(NothingFoundCtrl, superClass);\n\n    function NothingFoundCtrl() {\n      return NothingFoundCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    NothingFoundCtrl.prototype.initialize = function() {\n      return this.show(new CommonFloor.NothingFoundView);\n    };\n\n    return NothingFoundCtrl;\n\n  })(Marionette.RegionController);\n\n  CommonFloor.NoUnitsView = (function(superClass) {\n    extend(NoUnitsView, superClass);\n\n    function NoUnitsView() {\n      return NoUnitsView.__super__.constructor.apply(this, arguments);\n    }\n\n    NoUnitsView.prototype.template = '<div> <div id=\"trig\" class=\"toggle-button\"></div> <div id=\"view_toggle\" class=\"toggle-view-button map\"></div> <div class=\"list-view-container w-map animated fadeIn\"> <div class=\"text-center\" id=\"searchSorryPageWidget\"> <div class=\"m-t-10 bldg-list\"> <span class=\"icon-wondering\"></span> <div class=\"m-t-10\">Sorry! We havent found any properties matching your search.</div> <div>Please retry with different search options.</div> </div> </div> </div> </div>';\n\n    NoUnitsView.prototype.ui = {\n      viewtog: '#view_toggle',\n      trig: '#trig'\n    };\n\n    NoUnitsView.prototype.events = {\n      'click @ui.trig': function(e) {\n        return $('.list-container').toggleClass('closed');\n      },\n      'click @ui.viewtog': function(e) {\n        $('.us-left-content').toggleClass('not-visible visible');\n        return $('.us-right-content').toggleClass('not-visible visible');\n      }\n    };\n\n    return NoUnitsView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.NoUnitsCtrl = (function(superClass) {\n    extend(NoUnitsCtrl, superClass);\n\n    function NoUnitsCtrl() {\n      return NoUnitsCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    NoUnitsCtrl.prototype.initialize = function() {\n      return this.show(new CommonFloor.NoUnitsView);\n    };\n\n    return NoUnitsCtrl;\n\n  })(Marionette.RegionController);\n\n  CommonFloor.loadJSONData = function() {\n    return $.ajax({\n      type: 'GET',\n      url: BASERESTURL + '/project/' + PROJECTID + '/step-two',\n      async: false,\n      success: function(response) {\n        response = window.convertToInt(response);\n        response = response.data;\n        bunglowVariantCollection.setBunglowVariantAttributes(response.bunglow_variants);\n        settings.setSettingsAttributes(response.settings);\n        unitTypeCollection.setUnitTypeAttributes(response.unit_types);\n        buildingCollection.setBuildingAttributes(response.buildings);\n        apartmentVariantCollection.setApartmentVariantAttributes(response.apartment_variants);\n        floorLayoutCollection.setFloorLayoutAttributes(response.floor_layout);\n        window.propertyTypes = response.property_types;\n        plotVariantCollection.setPlotVariantAttributes(response.plot_variants);\n        return unitCollection.setUnitAttributes(response.units);\n      },\n      error: function(response) {\n        this.region = new Marionette.Region({\n          el: '#noFound-template'\n        });\n        return new CommonFloor.ProjectCtrl({\n          region: this.region\n        });\n      }\n    });\n  };\n\n  CommonFloor.propertyMaxUnits = function() {\n    var Router, controller, temp;\n    Router = [];\n    Router.push({\n      'type': 'bunglows',\n      'count': bunglowVariantCollection.getBunglowUnits()\n    });\n    temp = [];\n    $.merge(temp, apartmentVariantCollection.getApartmentUnits());\n    $.merge(temp, apartmentVariantCollection.getPenthouseUnits());\n    Router.push({\n      'type': 'building',\n      'count': temp\n    });\n    Router.push({\n      'type': 'plot',\n      'count': plotVariantCollection.getPlotUnits()\n    });\n    controller = _.max(Router, function(item) {\n      return parseInt(item.count.length);\n    });\n    return controller;\n  };\n\n  CommonFloor.checkPropertyType = function() {\n    CommonFloor.loadJSONData();\n    if (Object.keys(project.get('project_master')).length === 0) {\n      CommonFloor.navigate('#/list-view', true);\n      return CommonFloor.router.storeRoute();\n    } else {\n      CommonFloor.navigate('#/master-view', true);\n      return CommonFloor.router.storeRoute();\n    }\n  };\n\n  CommonFloor.checkListView = function() {\n    var controller;\n    return controller = CommonFloor.propertyMaxUnits();\n  };\n\n  window.convertToInt = function(response) {\n    return $.each(response, function(index, value) {\n      return $.map(value, function(item) {\n        return $.each(item, function(ind, val) {\n          return parseInt(val);\n        });\n      });\n    });\n  };\n\n  window.numDifferentiation = function(val) {\n    var decimal, valBudget;\n    if (val >= 10000000) {\n      val = (val / 10000000).toFixed(2);\n      decimal = val.split('.')[1];\n      valBudget = decimal % 5;\n      valBudget = valBudget / 100;\n      val = val - valBudget;\n      val = val.toFixed(2);\n      val = val + ' Cr';\n    } else if (val >= 100000) {\n      val = (val / 100000).toFixed(2);\n      decimal = val.split('.')[1];\n      valBudget = decimal % 5;\n      valBudget = valBudget / 100;\n      val = val - valBudget;\n      val = val.toFixed(2);\n      val = val + ' Lac';\n    } else if (val >= 1000) {\n      val = (val / 1000).toFixed(2);\n      decimal = val.split('.')[1];\n      valBudget = decimal % 5;\n      valBudget = valBudget / 100;\n      val = val - valBudget;\n      val = val.toFixed(2);\n      val = val + ' K';\n    }\n    return val;\n  };\n\n  window.calculatePerc = function(value, total) {\n    var perc;\n    value = parseInt(value);\n    total = parseInt(total);\n    perc = value / total;\n    perc = perc * 100;\n    perc = perc.toFixed(2);\n    return perc;\n  };\n\n  window.convertRupees = function(val) {\n    $('#price').autoNumeric('init');\n    return $('#price').autoNumeric('set', val);\n  };\n\n  CommonFloor.propertyTypes = function() {\n    var Router, controller, temp;\n    Router = [];\n    if (bunglowVariantCollection.getBunglowUnits().length !== 0) {\n      Router.push({\n        'type': s.capitalize('villa(s)'),\n        'count': bunglowVariantCollection.getBunglowUnits(),\n        'type_name': '(V)'\n      });\n    }\n    if (apartmentVariantCollection.getApartmentUnits().length !== 0 || apartmentVariantCollection.getPenthouseUnits().length !== 0) {\n      temp = [];\n      $.merge(temp, apartmentVariantCollection.getApartmentUnits());\n      $.merge(temp, apartmentVariantCollection.getPenthouseUnits());\n      Router.push({\n        'type': s.capitalize('apartment(s)/Penthouse(s)'),\n        'count': temp,\n        'type_name': '(A)/(PH)'\n      });\n    }\n    if (plotVariantCollection.getPlotUnits().length !== 0) {\n      Router.push({\n        'type': s.capitalize('plot(s)'),\n        'count': plotVariantCollection.getPlotUnits(),\n        'type_name': '(P)'\n      });\n    }\n    controller = _.max(Router, function(item) {\n      return parseInt(item.count.length);\n    });\n    return Router;\n  };\n\n  CommonFloor.masterPropertyTypes = function() {\n    var Router, controller;\n    Router = [];\n    if (bunglowVariantCollection.getBunglowMasterUnits().length !== 0) {\n      Router.push({\n        'type': s.capitalize('villas'),\n        'count': bunglowVariantCollection.getBunglowMasterUnits(),\n        'type_name': '(V)',\n        'name': 'villa'\n      });\n    }\n    if (apartmentVariantCollection.getApartmentMasterUnits().length !== 0) {\n      Router.push({\n        'type': s.capitalize('apartments'),\n        'count': apartmentVariantCollection.getApartmentMasterUnits(),\n        'type_name': '(A)',\n        'name': 'apartment'\n      });\n    }\n    if (plotVariantCollection.getPlotMasterUnits().length !== 0) {\n      Router.push({\n        'type': s.capitalize('plots'),\n        'count': plotVariantCollection.getPlotMasterUnits(),\n        'type_name': '(P)',\n        'name': 'plot'\n      });\n    }\n    controller = _.max(Router, function(item) {\n      return parseInt(item.count.length);\n    });\n    return Router;\n  };\n\n  CommonFloor.applyAvailabilClasses = function(classname) {\n    $('.layer').each(function(ind, item) {\n      var availability, class_name, id, unit;\n      id = parseInt(item.id);\n      class_name = $('#' + id).attr('class');\n      unit = unitCollection.findWhere({\n        id: id\n      });\n      if (!_.isUndefined(unit)) {\n        availability = unit.get('availability');\n        availability = s.decapitalize(availability);\n        return $('#' + id).attr('class', class_name + ' ' + availability);\n      }\n    });\n    return $('.building').each(function(ind, item) {\n      var class_name, id, unit;\n      id = parseInt(item.id);\n      class_name = $('#' + id).attr('class');\n      unit = unitCollection.where({\n        'building_id': id,\n        'availability': 'available'\n      });\n      if (unit.length > 0) {\n        return $('#' + id).attr('class', class_name + ' available');\n      } else {\n        return $('#' + id).attr('class', class_name + ' sold');\n      }\n    });\n  };\n\n  CommonFloor.randomClass = function() {\n    return $('.layer').each(function(ind, item) {\n      var id;\n      id = parseInt(item.id);\n      return $('#' + id).attr('style', 'transform: rotateY(0deg) scale(1); -webkit-transform: rotateY(0deg) scale(1);');\n    });\n  };\n\n  CommonFloor.filter = function() {\n    var element, i, index, len, param_arr, param_key, params, paramsArray;\n    if (window.location.href.indexOf('=') > -1) {\n      params = params;\n      paramsArray = params.split('&');\n      for (index = i = 0, len = paramsArray.length; i < len; index = ++i) {\n        element = paramsArray[index];\n        param_key = element.split('=');\n        CommonFloor.defaults[param_key[0]] = param_key[1];\n      }\n      params = 'type:' + CommonFloor.defaults['type'] + '&unit_variant_id:' + CommonFloor.defaults['unitVariants'] + '&unit_type_id:' + CommonFloor.defaults['unitTypes'] + '&price_min:' + CommonFloor.defaults['price_min'] + '&price_max:' + CommonFloor.defaults['price_max'] + '&availability:' + CommonFloor.defaults['availability'] + '&area_min:' + CommonFloor.defaults['area_min'] + '&area_max:' + CommonFloor.defaults['area_max'] + '&building_id:' + CommonFloor.defaults['building'] + '&floor_min:' + CommonFloor.defaults['floor_min'] + '&floor_max:' + CommonFloor.defaults['floor_max'] + '&flooring:' + CommonFloor.defaults['flooring'];\n    } else {\n      params = 'type:' + CommonFloor.defaults['type'] + '&unit_variant_id:' + CommonFloor.defaults['unitVariants'] + '&unit_type_id:' + CommonFloor.defaults['unitTypes'] + '&price_min:' + CommonFloor.defaults['price_min'] + '&price_max:' + CommonFloor.defaults['price_max'] + '&availability:' + CommonFloor.defaults['availability'] + '&area_min:' + CommonFloor.defaults['area_min'] + '&area_max:' + CommonFloor.defaults['area_max'] + '&building_id:' + CommonFloor.defaults['building'] + '&floor_min:' + CommonFloor.defaults['floor_min'] + '&floor_max:' + CommonFloor.defaults['floor_max'] + '&flooring:' + CommonFloor.defaults['flooring'];\n    }\n    param_arr = params.split('&');\n    $.each(param_arr, function(index, value) {\n      var collection, param_val, param_val_arr, value_arr;\n      value_arr = value.split(':');\n      param_key = value_arr[0];\n      if (param_key === 'type' && value_arr[1] !== \"\") {\n        CommonFloor.resetCollections();\n        collection = CommonFloor.resetProperyType(value_arr[1]);\n      }\n      if (param_key !== 'price_min' && param_key !== 'price_max' && value_arr[1] !== \"\" && param_key !== 'area_min' && param_key !== 'area_max' && param_key !== 'type' && param_key !== 'floor_min' && param_key !== 'floor_max' && param_key !== 'flooring') {\n        param_val = value_arr[1];\n        param_val_arr = param_val.split(',');\n        collection = [];\n        $.each(param_val_arr, function(index, value) {\n          var paramkey;\n          paramkey = {};\n          paramkey[param_key] = parseInt(value);\n          if (param_key === 'availability') {\n            paramkey[param_key] = value;\n          }\n          return $.merge(collection, unitCollection.where(paramkey));\n        });\n        return unitCollection.reset(collection);\n      }\n    });\n    if (CommonFloor.defaults['price_max'] !== \"\") {\n      CommonFloor.filterBudget();\n    }\n    if (CommonFloor.defaults['area_max'] !== \"\") {\n      CommonFloor.filterArea();\n    }\n    if (CommonFloor.defaults['floor_max'] !== \"\") {\n      CommonFloor.filterFloor();\n    }\n    if (CommonFloor.defaults['flooring'] !== \"\") {\n      CommonFloor.filterFlooringAttributes();\n    }\n    CommonFloor.resetCollections();\n    return CommonFloor.applyFliterClass();\n  };\n\n  CommonFloor.resetProperyType = function(param) {\n    var collection;\n    collection = [];\n    if (param === 'villa') {\n      $.merge(collection, bunglowVariantCollection.getBunglowUnits());\n    }\n    if (param === 'apartment') {\n      $.merge(collection, apartmentVariantCollection.getApartmentUnits());\n      $.merge(collection, apartmentVariantCollection.getPenthouseUnits());\n    }\n    if (param === 'plot') {\n      $.merge(collection, plotVariantCollection.getPlotUnits());\n    }\n    return collection;\n  };\n\n  CommonFloor.applyFliterClass = function() {\n    var actualbuildings, actualunits, filterbuildings, filterunits, flag, notSelecteUnits, notSelectebuildings;\n    actualunits = _.pluck(unitMasterCollection.toArray(), 'id');\n    filterunits = _.pluck(unitCollection.toArray(), 'id');\n    notSelecteUnits = _.difference(actualunits, filterunits);\n    actualbuildings = _.pluck(buildingMasterCollection.toArray(), 'id');\n    filterbuildings = _.pluck(buildingCollection.toArray(), 'id');\n    notSelectebuildings = _.difference(actualbuildings, filterbuildings);\n    flag = CommonFloor.applyNonFilterClass();\n    if (flag === 0) {\n      return false;\n    }\n    $('.villa,.plot,.apartment').each(function(ind, item) {\n      var id;\n      id = parseInt(item.id);\n      if ($.inArray(id, filterunits) > -1) {\n        return setTimeout(function() {\n          return $('#' + id).attr('style', ' stroke-width: 3px; stroke-dasharray: 320 0;stroke-dashoffset: 0;stroke:#F68121; transform: rotateY(0deg) scale(1); -webkit-transform: rotateY(0deg) scale(1);');\n        }, Math.random() * 1000);\n      } else {\n        return setTimeout(function() {\n          return $('#' + id).attr('style', ' stroke-width: 0px; stroke-dasharray: 320 0;stroke-dashoffset: 0;transform: rotateY(0deg) scale(1); -webkit-transform: rotateY(0deg) scale(1);');\n        }, Math.random() * 1000);\n      }\n    });\n    return $('.building').each(function(ind, item) {\n      var id, types;\n      types = [];\n      if (CommonFloor.defaults['type'] !== \"\") {\n        types = CommonFloor.defaults['type'].split(',');\n      }\n      id = parseInt(item.id);\n      if ($.inArray('villa', types) === -1 && $.inArray('plot', types) === -1) {\n        if ($.inArray(id, filterbuildings) > -1 && filterbuildings.length !== 0 && buildingCollection.length !== 0) {\n          return setTimeout(function() {\n            return $('#' + id).attr('style', ' stroke-width: 3px; stroke-dasharray: 320 0;stroke-dashoffset: 0; stroke:#F68121; transform: rotateY(0deg) scale(1);-webkit-transform: rotateY(0deg) scale(1);');\n          }, Math.random() * 1000);\n        } else {\n          return setTimeout(function() {\n            return $('#' + id).attr('style', ' stroke-width: 0px; stroke-dasharray: 320 0;stroke-dashoffset: 0; transform: rotateY(0deg) scale(1);-webkit-transform: rotateY(0deg) scale(1);');\n          }, Math.random() * 1000);\n        }\n      } else {\n        return setTimeout(function() {\n          return $('#' + id).attr('style', ' stroke-width: 0px; stroke-dasharray: 320 0;stroke-dashoffset: 0; transform: rotateY(0deg) scale(1);-webkit-transform: rotateY(0deg) scale(1);');\n        }, Math.random() * 1000);\n      }\n    });\n  };\n\n  CommonFloor.applyNonFilterClass = function() {\n    var flag;\n    flag = 0;\n    if (CommonFloor.defaults['type'] !== \"\") {\n      flag = 1;\n    }\n    $.each(CommonFloor.defaults['apartment'], function(index, value) {\n      if (value !== \"\" && !(_.isEmpty(value))) {\n        return flag = 1;\n      }\n    });\n    $.each(CommonFloor.defaults['plot'], function(index, value) {\n      if (value !== \"\" && !(_.isEmpty(value))) {\n        return flag = 1;\n      }\n    });\n    $.each(CommonFloor.defaults['villa'], function(index, value) {\n      if (value !== \"\" && !(_.isEmpty(value))) {\n        return flag = 1;\n      }\n    });\n    $.each(CommonFloor.defaults['common'], function(index, value) {\n      if (value !== \"\") {\n        return flag = 1;\n      }\n    });\n    if (flag === 0) {\n      $('.villa,.plot,.apartment').each(function(ind, item) {\n        var id;\n        id = parseInt(item.id);\n        return $('#' + id).attr('style', ' stroke-width: 0px; stroke-dasharray: 320 0;stroke-dashoffset: 0;transform: rotateY(0deg) scale(1);-webkit-transform: rotateY(0deg) scale(1);');\n      });\n      $('.building').each(function(ind, item) {\n        var id;\n        id = parseInt(item.id);\n        return $('#' + id).attr('style', ' stroke-width: 0px; stroke-dasharray: 320 0;stroke-dashoffset: 0;transform: rotateY(0deg) scale(1);-webkit-transform: rotateY(0deg) scale(1);');\n      });\n    }\n    return flag;\n  };\n\n  CommonFloor.resetCollections = function() {\n    var apartments, buildings, bunglows, plots, unitTypes;\n    apartments = [];\n    bunglows = [];\n    unitTypes = [];\n    plots = [];\n    buildings = [];\n    unitCollection.each(function(item) {\n      var building, property, unitType;\n      unitType = unitTypeMasterCollection.findWhere({\n        'id': item.get('unit_type_id')\n      });\n      if (item.get('building_id') !== 0) {\n        building = buildingMasterCollection.findWhere({\n          'id': item.get('building_id')\n        });\n        buildings.push(building);\n      }\n      property = window.propertyTypes[unitType.get('property_type_id')];\n      if (s.decapitalize(property) === 'apartments' || s.decapitalize(property) === 'penthouses') {\n        apartments.push(apartmentVariantMasterCollection.get(item.get('unit_variant_id')));\n      }\n      if (s.decapitalize(property) === 'villas/Bungalows') {\n        bunglows.push(bunglowVariantMasterCollection.get(item.get('unit_variant_id')));\n      }\n      if (s.decapitalize(property) === 'plots') {\n        plots.push(plotVariantMasterCollection.get(item.get('unit_variant_id')));\n      }\n      return unitTypes.push(unitType);\n    });\n    apartmentVariantCollection.reset(apartments);\n    bunglowVariantCollection.reset(bunglows);\n    plotVariantCollection.reset(plots);\n    unitTypeCollection.reset(unitTypes);\n    buildingCollection.reset(buildings);\n    return unitCollection.reset(unitCollection.toArray());\n  };\n\n  CommonFloor.filterBudget = function() {\n    var budget;\n    CommonFloor.resetCollections();\n    budget = [];\n    unitCollection.each(function(item) {\n      var unitPrice;\n      unitPrice = parseFloat(window.unit.getFilterUnitDetails(item.get('id'))[3]);\n      if (unitPrice >= parseFloat(CommonFloor.defaults['common']['price_min']) && unitPrice <= parseFloat(CommonFloor.defaults['common']['price_max'])) {\n        return budget.push(item);\n      }\n    });\n    return unitCollection.reset(budget);\n  };\n\n  CommonFloor.filterFloor = function() {\n    var floorArr;\n    CommonFloor.resetCollections();\n    floorArr = [];\n    unitCollection.each(function(item) {\n      var floor;\n      floor = item.get('floor');\n      if (floor >= parseInt(CommonFloor.defaults['common']['floor_min']) && floor <= parseInt(CommonFloor.defaults['common']['floor_max'])) {\n        return floorArr.push(item);\n      }\n    });\n    return unitCollection.reset(floorArr);\n  };\n\n  CommonFloor.filterArea = function() {\n    var areaArr;\n    CommonFloor.resetCollections();\n    areaArr = [];\n    unitCollection.each(function(item) {\n      var area;\n      area = item.get('area');\n      if (area >= parseFloat(CommonFloor.defaults['common']['area_min']) && area <= parseFloat(CommonFloor.defaults['common']['area_max'])) {\n        return areaArr.push(item);\n      }\n    });\n    return unitCollection.reset(areaArr);\n  };\n\n  CommonFloor.getFilters = function() {\n    var area, area_max, area_min, facings, filters, floor, floor_max, floor_min, flooring, main, max_price, min_price, price, results, status, type, typeArr, unitTypes, unitVariants, views;\n    unitTypes = [];\n    unitVariants = [];\n    results = [];\n    flooring = [];\n    type = [];\n    filters = [];\n    price = [];\n    area = [];\n    type = [];\n    status = [];\n    floor = [];\n    main = [];\n    views = [];\n    facings = [];\n    if (CommonFloor.defaults['common']['price_max'] !== \"\") {\n      min_price = window.numDifferentiation(CommonFloor.defaults['common']['price_min']);\n      max_price = window.numDifferentiation(CommonFloor.defaults['common']['price_max']);\n      price.push({\n        'name': min_price + '-' + max_price,\n        'type': '',\n        'id': 'budget',\n        'id_name': 'filter_budget',\n        'classname': 'budget'\n      });\n    }\n    if (CommonFloor.defaults['common']['area_max'] !== \"\") {\n      area_min = CommonFloor.defaults['common']['area_min'];\n      area_max = CommonFloor.defaults['common']['area_max'];\n      area.push({\n        'name': area_min + '-' + area_max,\n        'type': project.get('measurement_units'),\n        'id': 'area',\n        'id_name': 'filter_area',\n        'classname': 'area'\n      });\n    }\n    if (CommonFloor.defaults['common']['floor_max'] !== \"\") {\n      floor_min = CommonFloor.defaults['common']['floor_min'];\n      floor_max = CommonFloor.defaults['common']['floor_max'];\n      floor.push({\n        'name': 'Floor ' + floor_min + '-' + floor_max,\n        'type': '',\n        'id': 'floor',\n        'id_name': 'filter_floor',\n        'classname': 'floor'\n      });\n    }\n    if (CommonFloor.defaults['common']['availability'] !== \"\") {\n      status.push({\n        'name': 'Available',\n        'classname': 'types',\n        'id': 'available',\n        'id_name': 'filter_available'\n      });\n    }\n    if (CommonFloor.defaults['common']['views'] !== \"\") {\n      $.each(CommonFloor.defaults['common']['views'].split(','), function(index, value) {\n        return views.push({\n          'name': value,\n          'classname': 'views',\n          'id': value,\n          'id_name': 'filter_' + value\n        });\n      });\n    }\n    if (CommonFloor.defaults['common']['facings'] !== \"\") {\n      $.each(CommonFloor.defaults['common']['facings'].split(','), function(index, value) {\n        return facings.push({\n          'name': value,\n          'classname': 'facings',\n          'id': value,\n          'id_name': 'filter_' + value\n        });\n      });\n    }\n    if (CommonFloor.defaults['type'] !== \"\") {\n      typeArr = CommonFloor.defaults['type'].split(',');\n      $.each(typeArr, function(index, value) {\n        var name;\n        name = s.capitalize(value);\n        name = name + '(s)';\n        if (value === 'apartment') {\n          name = 'Apartment(s)/Penthouse(s)';\n          filters = CommonFloor.getApartmentFilters();\n        }\n        if (value === 'villa') {\n          filters = CommonFloor.getVillaFilters();\n        }\n        if (value === 'plot') {\n          filters = CommonFloor.getPlotFilters();\n        }\n        $.each(filters, function(index, value) {\n          if (value.length === 0) {\n            return filters = _.omit(filters, index);\n          }\n        });\n        if (Object.keys(filters).length === 0) {\n          filters = [];\n        }\n        return type.push({\n          'name': name,\n          'classname': 'types',\n          'id': value,\n          'id_name': 'filter_' + value,\n          'filters': filters\n        });\n      });\n    }\n    main.push({\n      'filters': type,\n      'area': area,\n      'price': price,\n      'floor': floor,\n      'status': status,\n      'views': views,\n      'facings': facings\n    });\n    return main;\n  };\n\n  CommonFloor.getStepFilters = function() {\n    var area, area_max, area_min, facings, filters, floor, floor_max, floor_min, flooring, main, max_price, min_price, price, results, status, type, unitTypes, unitVariants, views;\n    unitTypes = [];\n    unitVariants = [];\n    results = [];\n    flooring = [];\n    type = [];\n    filters = [];\n    price = [];\n    area = [];\n    type = [];\n    status = [];\n    floor = [];\n    main = [];\n    views = [];\n    facings = [];\n    if (CommonFloor.defaults['common']['price_max'] !== \"\") {\n      min_price = window.numDifferentiation(CommonFloor.defaults['common']['price_min']);\n      max_price = window.numDifferentiation(CommonFloor.defaults['common']['price_max']);\n      price.push({\n        'name': min_price + '-' + max_price,\n        'type': '',\n        'id': 'budget',\n        'id_name': 'filter_budget',\n        'classname': 'budget'\n      });\n    }\n    if (CommonFloor.defaults['common']['area_max'] !== \"\") {\n      area_min = CommonFloor.defaults['common']['area_min'];\n      area_max = CommonFloor.defaults['common']['area_max'];\n      area.push({\n        'name': area_min + '-' + area_max,\n        'type': project.get('measurement_units'),\n        'id': 'area',\n        'id_name': 'filter_area',\n        'classname': 'area'\n      });\n    }\n    if (CommonFloor.defaults['common']['floor_max'] !== \"\") {\n      floor_min = CommonFloor.defaults['common']['floor_min'];\n      floor_max = CommonFloor.defaults['common']['floor_max'];\n      floor.push({\n        'name': 'Floor ' + floor_min + '-' + floor_max,\n        'type': '',\n        'id': 'floor',\n        'id_name': 'filter_floor',\n        'classname': 'floor'\n      });\n    }\n    if (CommonFloor.defaults['common']['availability'] !== \"\") {\n      status.push({\n        'name': 'Available',\n        'classname': 'types',\n        'id': 'available',\n        'id_name': 'filter_available'\n      });\n    }\n    if (CommonFloor.defaults['common']['views'] !== \"\") {\n      $.each(CommonFloor.defaults['common']['views'].split(','), function(index, value) {\n        return views.push({\n          'name': value,\n          'classname': 'views',\n          'id': value,\n          'id_name': 'filter_' + value\n        });\n      });\n    }\n    if (CommonFloor.defaults['common']['facings'] !== \"\") {\n      $.each(CommonFloor.defaults['common']['facings'].split(','), function(index, value) {\n        return facings.push({\n          'name': value,\n          'classname': 'facings',\n          'id': value,\n          'id_name': 'filter_' + value\n        });\n      });\n    }\n    filters = CommonFloor.getApartmentFilters();\n    if (Object.keys(filters).length === 0) {\n      filters = [];\n    }\n    type.push({\n      'filters': filters\n    });\n    main.push({\n      'area': area,\n      'price': price,\n      'floor': floor,\n      'status': status,\n      'views': views,\n      'facings': facings,\n      'filters': type\n    });\n    return main;\n  };\n\n  CommonFloor.getFilters111 = function() {\n    var area, filters, floor, flooring, price, results, status, type, typeArr, unitTypes, unitVariants, villaFilters;\n    unitTypes = [];\n    unitVariants = [];\n    results = [];\n    flooring = [];\n    villaFilters = CommonFloor.getVillaFilters();\n    $.merge(unitTypes, villaFilters.unitTypes);\n    $.merge(unitVariants, villaFilters.unitVariants);\n    $.merge(flooring, villaFilters.flooring);\n    price = [];\n    area = [];\n    type = [];\n    status = [];\n    floor = [];\n    if (CommonFloor.defaults['type'] !== \"\") {\n      typeArr = CommonFloor.defaults['type'].split(',');\n      $.each(typeArr, function(index, value) {\n        var name;\n        name = s.capitalize(value);\n        name = name + '(s)';\n        if (value === 'apartement') {\n          name = 'Apartment(s)/Penthouse(s)';\n        }\n        return type.push({\n          'name': name,\n          'classname': 'types',\n          'id': value,\n          'id_name': 'filter_' + value\n        });\n      });\n    }\n    filters = {\n      'type': type,\n      'unitTypes': unitTypes,\n      'unitVariants': unitVariants,\n      'price': price,\n      'area': area,\n      'status': status,\n      'floor': floor,\n      'flooring': flooring\n    };\n    $.each(filters, function(index, value) {\n      if (value.length === 0) {\n        return filters = _.omit(filters, index);\n      }\n    });\n    $.each(results, function(index, value) {\n      if (value.count === 0) {\n        return results = _.omit(results, index);\n      }\n    });\n    return [filters, results];\n  };\n\n  CommonFloor.getVillaFilters = function() {\n    var filters, flooring, status, unitTypes, unitVariants, unit_type, unit_variant;\n    unitVariants = [];\n    unit_variant = '';\n    unitTypes = [];\n    unit_type = '';\n    status = [];\n    flooring = [];\n    $.each(CommonFloor.defaults['villa'], function(ind, val) {\n      var param_val_arr;\n      if (val !== \"\" && ind !== 'attributes') {\n        param_val_arr = val.split(',');\n        return $.each(param_val_arr, function(index, value) {\n          if (value !== \"\" && ind === 'unit_variant_id') {\n            if (!_.isUndefined(bunglowVariantMasterCollection.get(parseInt(value)))) {\n              unit_variant = bunglowVariantMasterCollection.findWhere({\n                'id': parseInt(value)\n              });\n              unitVariants.push({\n                'typename': 'villa',\n                'name': unit_variant.get('unit_variant_name'),\n                'type': '(V)',\n                'classname': 'variant_names',\n                'id': unit_variant.get('id'),\n                'id_name': 'filter_varinat_name' + unit_variant.get('id'),\n                'index': ''\n              });\n            }\n          }\n          if (value !== \"\" && ind === 'unit_type_id' && $.inArray(parseInt(value), bunglowVariantMasterCollection.getVillaUnitTypes()) > -1) {\n            unit_type = unitTypeMasterCollection.findWhere({\n              'id': parseInt(value)\n            });\n            return unitTypes.push({\n              'typename': 'villa',\n              'name': unit_type.get('name'),\n              'type': '(V)',\n              'classname': 'unit_types',\n              'id': unit_type.get('id'),\n              'id_name': 'filter_unit_type' + unit_type.get('id'),\n              'index': ''\n            });\n          }\n        });\n      } else if (val !== \"\" && ind === 'attributes') {\n        return $.each(val, function(ind1, val1) {\n          var temp_var;\n          temp_var = val1.split(',');\n          return $.each(temp_var, function(indexkey, valkey) {\n            var temp;\n            if ($.isNumeric(valkey)) {\n              temp = parseInt(valkey);\n            } else {\n              temp = valkey;\n            }\n            if (valkey !== \"\" && $.inArray(temp, bunglowVariantMasterCollection.getVillaAttributes()) > -1) {\n              return flooring.push({\n                'typename': 'villa',\n                'name': valkey,\n                'type': '(V)',\n                'classname': 'filter_flooring',\n                'id': valkey,\n                'id_name': 'filter_' + valkey,\n                'index': ind1\n              });\n            }\n          });\n        });\n      }\n    });\n    filters = {\n      'unitVariants': unitVariants,\n      'unitTypes': unitTypes,\n      'flooring': flooring\n    };\n    return filters;\n  };\n\n  CommonFloor.getApartmentFilters = function() {\n    var filters, flooring, status, unitTypes, unitVariants, unit_type, unit_variant;\n    unitVariants = [];\n    unit_variant = '';\n    unitTypes = [];\n    unit_type = '';\n    status = [];\n    flooring = [];\n    $.each(CommonFloor.defaults['apartment'], function(ind, val) {\n      var param_val_arr;\n      if (val !== \"\" && ind !== 'attributes') {\n        param_val_arr = val.split(',');\n        return $.each(param_val_arr, function(index, value) {\n          var type, unitTypeModel;\n          if (value !== \"\" && ind === 'unit_variant_id') {\n            if (!_.isUndefined(apartmentVariantMasterCollection.get(parseInt(value)))) {\n              unit_variant = apartmentVariantMasterCollection.findWhere({\n                'id': parseInt(value)\n              });\n              unitTypeModel = unitTypeMasterCollection.findWhere({\n                'id': parseInt(unit_variant.get('unit_type_id'))\n              });\n              type = 'A';\n              if (window.propertyTypes[unitTypeModel.get('property_type_id')] === 'Penthouses') {\n                type = 'PH';\n              }\n              unitVariants.push({\n                'typename': 'apartment',\n                'name': unit_variant.get('unit_variant_name'),\n                'type': '(' + type + ')',\n                'classname': 'variant_names',\n                'id': unit_variant.get('id'),\n                'id_name': 'filter_varinat_name' + unit_variant.get('id'),\n                'index': ''\n              });\n            }\n          }\n          if (value !== \"\" && ind === 'unit_type_id' && $.inArray(parseInt(value), apartmentVariantMasterCollection.getApartmentUnitTypes()) > -1) {\n            unit_type = unitTypeMasterCollection.findWhere({\n              'id': parseInt(value)\n            });\n            type = 'A';\n            if (window.propertyTypes[unit_type.get('property_type_id')] === 'Penthouses') {\n              type = 'PH';\n            }\n            return unitTypes.push({\n              'typename': 'apartment',\n              'name': unit_type.get('name'),\n              'type': '(' + type + ')',\n              'classname': 'unit_types',\n              'id': unit_type.get('id'),\n              'id_name': 'filter_unit_type' + unit_type.get('id'),\n              'index': ''\n            });\n          }\n        });\n      } else if (val !== \"\" && ind === 'attributes') {\n        return $.each(val, function(ind1, val1) {\n          var temp_var;\n          temp_var = val1.split(',');\n          return $.each(temp_var, function(indexkey, valkey) {\n            var attributes, temp;\n            if ($.isNumeric(valkey)) {\n              temp = parseInt(valkey);\n            } else {\n              temp = valkey;\n            }\n            attributes = apartmentVariantMasterCollection.getApartmentAttributes();\n            if (valkey !== \"\" && $.inArray(temp, attributes[0]) > -1) {\n              return flooring.push({\n                'typename': 'apartment',\n                'name': valkey,\n                'type': '(A)',\n                'classname': 'filter_flooring',\n                'id': valkey,\n                'id_name': 'filter_' + valkey,\n                'index': ind1\n              });\n            }\n          });\n        });\n      }\n    });\n    filters = {\n      'unitVariants': unitVariants,\n      'unitTypes': unitTypes,\n      'flooring': flooring\n    };\n    return filters;\n  };\n\n  CommonFloor.getPlotFilters = function() {\n    var filters, flooring, status, unitTypes, unitVariants, unit_type, unit_variant;\n    unitVariants = [];\n    unit_variant = '';\n    unitTypes = [];\n    unit_type = '';\n    status = [];\n    flooring = [];\n    $.each(CommonFloor.defaults['plot'], function(ind, val) {\n      var param_val_arr;\n      if (val !== \"\" && ind !== 'attributes') {\n        param_val_arr = val.split(',');\n        return $.each(param_val_arr, function(index, value) {\n          if (value !== \"\" && ind === 'unit_variant_id') {\n            if (!_.isUndefined(plotVariantMasterCollection.get(parseInt(value)))) {\n              unit_variant = plotVariantMasterCollection.findWhere({\n                'id': parseInt(value)\n              });\n              unitVariants.push({\n                'typename': 'plot',\n                'name': unit_variant.get('unit_variant_name'),\n                'type': '(P)',\n                'classname': 'variant_names',\n                'id': unit_variant.get('id'),\n                'id_name': 'filter_varinat_name' + unit_variant.get('id'),\n                'index': ''\n              });\n            }\n          }\n          if (value !== \"\" && ind === 'unit_type_id' && $.inArray(parseInt(value), plotVariantMasterCollection.getPlotUnitTypes()) > -1) {\n            unit_type = unitTypeMasterCollection.findWhere({\n              'id': parseInt(value)\n            });\n            return unitTypes.push({\n              'typename': 'plot',\n              'name': unit_type.get('name'),\n              'type': '(P)',\n              'classname': 'unit_types',\n              'id': unit_type.get('id'),\n              'id_name': 'filter_unit_type' + unit_type.get('id'),\n              'index': ''\n            });\n          }\n        });\n      } else if (val !== \"\" && ind === 'attributes') {\n        return $.each(val, function(ind1, val1) {\n          var temp_var;\n          temp_var = val1.split(',');\n          return $.each(temp_var, function(indexkey, valkey) {\n            var temp;\n            if ($.isNumeric(valkey)) {\n              temp = parseInt(valkey);\n            } else {\n              temp = valkey;\n            }\n            if (valkey !== \"\" && $.inArray(temp, plotVariantMasterCollection.getPlotAttributes()) > -1) {\n              return flooring.push({\n                'typename': 'plot',\n                'name': valkey,\n                'type': '(P)',\n                'classname': 'filter_flooring',\n                'id': valkey,\n                'id_name': 'filter_' + valkey,\n                'index': ind1\n              });\n            }\n          });\n        });\n      }\n    });\n    filters = {\n      'unitVariants': unitVariants,\n      'unitTypes': unitTypes,\n      'flooring': flooring\n    };\n    return filters;\n  };\n\n  CommonFloor.getStatus = function() {\n    var status, status_arr;\n    status = [];\n    status_arr = [];\n    unitMasterCollection.each(function(item) {\n      if (($.inArray(item.get('availability'), status_arr)) === -1) {\n        status_arr.push(item.get('availability'));\n        return status.push({\n          'id': item.get('availability'),\n          'name': s.humanize(item.get('availability'))\n        });\n      }\n    });\n    return status;\n  };\n\n  CommonFloor.getStatusFilters = function() {\n    var response, status, statusColl, statusIds;\n    status = [];\n    response = CommonFloor.getStatus();\n    statusColl = new Backbone.Collection(response);\n    statusIds = statusColl.pluck('id');\n    $.each(CommonFloor.defaults, function(ind, val) {\n      var param_val_arr;\n      if (ind === 'availability' && val !== \"\") {\n        param_val_arr = val.split(',');\n        return $.each(param_val_arr, function(index, value) {\n          if (value !== \"\" && ind === 'availability' && $.inArray(value, statusIds) > -1) {\n            return status.push(s.humanize(value));\n          }\n        });\n      }\n    });\n    return {\n      'status': status\n    };\n  };\n\n  CommonFloor.filterBuilding = function(id) {\n    var collection;\n    collection = unitCollection.where({\n      'building_id': id\n    });\n    unitCollection.reset(collection);\n    CommonFloor.resetCollections();\n    unitTempCollection.reset(unitCollection.toArray());\n    return window.building_id = id;\n  };\n\n  CommonFloor.getUnitsProperty = function(unitModel) {\n    var property, temp, text, type, unitType;\n    unitType = unitTypeMasterCollection.findWhere({\n      'id': unitModel.get('unit_type_id')\n    });\n    property = window.propertyTypes[unitType.get('property_type_id')];\n    text = '';\n    type = '';\n    window.tempColl = unitCollection.clone();\n    if (s.decapitalize(property) === 'apartments') {\n      temp = [];\n      $.each(apartmentVariantCollection.getApartmentUnits(), function(index, value) {\n        if (value.get('availability') === 'available') {\n          return temp.push(value);\n        }\n      });\n      window.tempColl.reset(temp);\n      text = 'Similar ' + s.decapitalize(property) + ' based on your filters';\n      type = 'apartment';\n    }\n    if (s.decapitalize(property) === 'penthouses') {\n      temp = [];\n      $.each(apartmentVariantCollection.getPenthouseUnits(), function(index, value) {\n        if (value.get('availability') === 'available') {\n          return temp.push(value);\n        }\n      });\n      window.tempColl.reset(temp);\n      text = 'Similar ' + s.decapitalize(property) + ' based on your filters';\n      type = s.decapitalize(property);\n    }\n    if (s.decapitalize(property) === 'villas/Bungalows') {\n      temp = [];\n      $.each(bunglowVariantCollection.getBunglowUnits(), function(index, value) {\n        if (value.get('availability') === 'available') {\n          return temp.push(value);\n        }\n      });\n      window.tempColl.reset(temp);\n      text = 'Similar ' + s.decapitalize(property) + ' based on your filters';\n      type = 'villa';\n    }\n    if (s.decapitalize(property) === 'plots') {\n      temp = [];\n      $.each(plotVariantCollection.getPlotUnits(), function(index, value) {\n        if (value.get('availability') === 'available') {\n          return temp.push(value);\n        }\n      });\n      window.tempColl.reset(temp);\n      text = 'Similar ' + s.decapitalize(property) + ' based on your filters';\n      type = s.decapitalize(property);\n    }\n    return [window.tempColl, text, type];\n  };\n\n  CommonFloor.getApartmentsInView = function() {\n    var newUnits, units;\n    units = [];\n    newUnits = [];\n    $('.apartment').each(function(index, value) {\n      var id;\n      id = parseInt(value.id);\n      return units.push(value.id);\n    });\n    newUnits = $.map(units, function(item) {\n      return parseInt(item);\n    });\n    return newUnits;\n  };\n\n  CommonFloor.applyOnViewClass = function() {\n    var classview, units, viewUnits;\n    viewUnits = CommonFloor.getApartmentsInView();\n    classview = '';\n    units = unitCollection.toArray();\n    $.each(units, function(index, value) {\n      var id;\n      id = parseInt(value.id);\n      if ($.inArray(id, viewUnits) === -1) {\n        $('#apartment' + id).addClass('onview');\n        return $('#apartment' + id).hide();\n      } else {\n        $('#apartment' + id).removeClass('onview');\n        return $('#apartment' + id).show();\n      }\n    });\n    return $('#inview').bootstrapToggle('on');\n  };\n\n  CommonFloor.filterFlooringAttributes = function() {\n    var flooring;\n    flooring = [];\n    unitCollection.each(function(item) {\n      var arr, attributes, unitDetails, unitVarinat;\n      unitDetails = window.unit.getUnitDetails(item.get('id'));\n      unitVarinat = unitDetails[0];\n      attributes = unitVarinat.get('variant_attributes').flooring;\n      arr = CommonFloor.defaults['flooring'].split(',');\n      if ($.inArray(attributes, arr) > -1) {\n        return flooring.push(item);\n      }\n    });\n    return unitCollection.reset(flooring);\n  };\n\n  CommonFloor.filterNew = function() {\n    var collection, paramkey, params, temp;\n    collection = [];\n    temp = [];\n    params = CommonFloor.defaults['type'].split(',');\n    if (CommonFloor.defaults['type'] === \"\") {\n      $.merge(collection, unitCollection.toArray());\n    }\n    $.each(params, function(ind, val) {\n      if (val === 'villa') {\n        unitCollection.reset(unitMasterCollection.toArray());\n        temp = CommonFloor.filterVillas();\n      }\n      if (val === 'apartment') {\n        unitCollection.reset(unitMasterCollection.toArray());\n        temp = CommonFloor.filterApartments();\n      }\n      if (val === 'plot') {\n        unitCollection.reset(unitMasterCollection.toArray());\n        temp = CommonFloor.filterPlots();\n      }\n      return $.merge(collection, temp);\n    });\n    unitCollection.reset(collection);\n    if (CommonFloor.defaults['common']['price_max'] !== \"\") {\n      CommonFloor.filterBudget();\n    }\n    if (CommonFloor.defaults['common']['area_max'] !== \"\") {\n      CommonFloor.filterArea();\n    }\n    if (CommonFloor.defaults['common']['floor_max'] !== \"\") {\n      CommonFloor.filterFloor();\n    }\n    if (CommonFloor.defaults['common']['views'] !== \"\") {\n      CommonFloor.filterViews();\n    }\n    if (CommonFloor.defaults['common']['facings'] !== \"\") {\n      CommonFloor.filterFacings();\n    }\n    if (CommonFloor.defaults['common']['availability'] !== \"\") {\n      paramkey = {};\n      paramkey['availability'] = 'available';\n      temp = unitCollection.where(paramkey);\n      unitCollection.reset(temp);\n    }\n    CommonFloor.applyFliterClass();\n    return CommonFloor.resetCollections();\n  };\n\n  CommonFloor.filterStepNew = function() {\n    var collection, paramkey, temp;\n    collection = [];\n    temp = [];\n    temp = CommonFloor.filterApartments();\n    $.merge(collection, temp);\n    unitCollection.reset(collection);\n    if (CommonFloor.defaults['common']['price_max'] !== \"\") {\n      CommonFloor.filterBudget();\n    }\n    if (CommonFloor.defaults['common']['area_max'] !== \"\") {\n      CommonFloor.filterArea();\n    }\n    if (CommonFloor.defaults['common']['floor_max'] !== \"\") {\n      CommonFloor.filterFloor();\n    }\n    if (CommonFloor.defaults['common']['views'] !== \"\") {\n      CommonFloor.filterViews();\n    }\n    if (CommonFloor.defaults['common']['facings'] !== \"\") {\n      CommonFloor.filterFacings();\n    }\n    if (CommonFloor.defaults['common']['availability'] !== \"\") {\n      paramkey = {};\n      paramkey['availability'] = 'available';\n      temp = unitCollection.where(paramkey);\n      unitCollection.reset(temp);\n    }\n    CommonFloor.applyFliterClass();\n    return CommonFloor.resetCollections();\n  };\n\n  CommonFloor.filterVillas = function() {\n    var collection, newColl, tempColl;\n    collection = [];\n    collection = CommonFloor.resetProperyType('villa');\n    newColl = new Backbone.Collection(collection);\n    tempColl = [];\n    $.each(CommonFloor.defaults['villa'], function(index, value) {\n      var attributes, param_val, temp;\n      temp = [];\n      if (value !== \"\" && index === 'attributes' && !_.isEmpty(value)) {\n        attributes = bunglowVariantCollection.getBunglowUnits();\n        if (temp.length === 0) {\n          temp = bunglowVariantCollection.getBunglowUnits();\n        }\n        $.each(CommonFloor.defaults['villa']['attributes'], function(ind1, val1) {\n          if (val1 !== \"\") {\n            return attributes = CommonFloor.filterVillaAttributes(ind1, val1);\n          }\n        });\n        newColl.reset(attributes);\n      }\n      if (value !== \"\" && index !== 'attributes') {\n        param_val = value.split(',');\n        $.each(param_val, function(key, key_val) {\n          var paramkey;\n          paramkey = {};\n          paramkey[index] = parseInt(key_val);\n          tempColl = unitCollection.where(paramkey);\n          if (tempColl.length === 0) {\n            return temp = [];\n          } else {\n            return $.merge(temp, unitCollection.where(paramkey));\n          }\n        });\n        unitCollection.reset(temp);\n        return newColl.reset(temp);\n      }\n    });\n    return newColl.toArray();\n  };\n\n  CommonFloor.filterVillaAttributes = function(ind1, val1) {\n    var flooring, newtempColl, tem, tempColl;\n    flooring = [];\n    tempColl = bunglowVariantCollection.getBunglowUnits();\n    newtempColl = _.intersection(tempColl, unitCollection.toArray());\n    $.each(newtempColl, function(item, value) {\n      var arr, temp, unitDetails, unitVarinat, val, valkey;\n      unitDetails = window.unit.getUnitDetails(value.get('id'));\n      unitVarinat = unitDetails[0];\n      valkey = unitVarinat.get('variant_attributes');\n      val = _.propertyOf(valkey)(ind1);\n      arr = val1.split(',');\n      if (_.isUndefined(val)) {\n        return;\n      }\n      if (_.isArray(val)) {\n        $.each(val, function(ind1, val1) {\n          var temp;\n          if (_.isString(val1)) {\n            temp = val1;\n          } else {\n            temp = val1.toString();\n          }\n          if ($.inArray(temp, arr) > -1) {\n            return flooring.push(value);\n          }\n        });\n      } else {\n        if (_.isString(val)) {\n          temp = val;\n        } else {\n          temp = val.toString();\n        }\n        if ($.inArray(temp, arr) > -1) {\n          flooring.push(value);\n        }\n      }\n      return unitCollection.reset(flooring);\n    });\n    tem = unitCollection.toArray();\n    return tem;\n  };\n\n  CommonFloor.filterApartments = function() {\n    var collection, newColl, tempColl;\n    collection = [];\n    collection = CommonFloor.resetProperyType('apartment');\n    newColl = new Backbone.Collection(collection);\n    tempColl = [];\n    $.each(CommonFloor.defaults['apartment'], function(index, value) {\n      var attributes, param_val, temp;\n      temp = [];\n      if (value !== \"\" && index === 'attributes' && !_.isEmpty(value)) {\n        attributes = [];\n        $.merge(attributes, apartmentVariantCollection.getApartmentUnits());\n        $.merge(attributes, apartmentVariantCollection.getPenthouseUnits());\n        if (temp.length === 0) {\n          temp = apartmentVariantCollection.getApartmentUnits();\n        }\n        $.each(CommonFloor.defaults['apartment']['attributes'], function(ind1, val1) {\n          if (val1 !== \"\") {\n            return attributes = CommonFloor.filterApartmentAttributes(ind1, val1);\n          }\n        });\n        newColl.reset(attributes);\n      }\n      if (value !== \"\" && index !== 'attributes') {\n        param_val = value.split(',');\n        $.each(param_val, function(key, key_val) {\n          var paramkey;\n          paramkey = {};\n          paramkey[index] = parseInt(key_val);\n          tempColl = unitCollection.where(paramkey);\n          if (tempColl.length === 0) {\n            return temp = [];\n          } else {\n            return $.merge(temp, unitCollection.where(paramkey));\n          }\n        });\n        unitCollection.reset(temp);\n        return newColl.reset(temp);\n      }\n    });\n    return newColl.toArray();\n  };\n\n  CommonFloor.filterApartmentAttributes = function(ind1, val1) {\n    var flooring, newtempColl, tem, tempColl;\n    flooring = [];\n    tempColl = [];\n    $.merge(tempColl, apartmentVariantCollection.getApartmentUnits());\n    $.merge(tempColl, apartmentVariantCollection.getPenthouseUnits());\n    newtempColl = _.intersection(tempColl, unitCollection.toArray());\n    $.each(newtempColl, function(item, value) {\n      var arr, temp, unitDetails, unitVarinat, val, valkey;\n      unitDetails = window.unit.getUnitDetails(value.get('id'));\n      unitVarinat = unitDetails[0];\n      valkey = unitVarinat.get('variant_attributes');\n      val = _.propertyOf(valkey)(ind1);\n      arr = val1.split(',');\n      if (_.isUndefined(val)) {\n        return;\n      }\n      if (_.isArray(val)) {\n        $.each(val, function(ind1, val1) {\n          var temp;\n          if (_.isString(val1)) {\n            temp = val1;\n          } else {\n            temp = val1.toString();\n          }\n          if ($.inArray(temp, arr) > -1) {\n            return flooring.push(value);\n          }\n        });\n      } else {\n        if (_.isString(val)) {\n          temp = val;\n        } else {\n          temp = val.toString();\n        }\n        if ($.inArray(temp, arr) > -1) {\n          flooring.push(value);\n        }\n      }\n      return unitCollection.reset(flooring);\n    });\n    tem = unitCollection.toArray();\n    return tem;\n  };\n\n  CommonFloor.filterPlots = function() {\n    var collection, newColl, tempColl;\n    collection = [];\n    collection = CommonFloor.resetProperyType('plot');\n    newColl = new Backbone.Collection(collection);\n    tempColl = [];\n    $.each(CommonFloor.defaults['plot'], function(index, value) {\n      var attributes, param_val, temp;\n      temp = [];\n      if (value !== \"\" && index === 'attributes' && !_.isEmpty(value)) {\n        attributes = plotVariantCollection.getPlotUnits();\n        if (temp.length === 0) {\n          temp = plotVariantCollection.getPlotUnits();\n        }\n        $.each(CommonFloor.defaults['plot']['attributes'], function(ind1, val1) {\n          if (val1 !== \"\") {\n            return attributes = CommonFloor.filterPlotAttributes(ind1, val1);\n          }\n        });\n        newColl.reset(attributes);\n      }\n      if (value !== \"\" && index !== 'attributes') {\n        param_val = value.split(',');\n        $.each(param_val, function(key, key_val) {\n          var paramkey;\n          paramkey = {};\n          paramkey[index] = parseInt(key_val);\n          tempColl = unitCollection.where(paramkey);\n          if (tempColl.length === 0) {\n            return temp = [];\n          } else {\n            return $.merge(temp, unitCollection.where(paramkey));\n          }\n        });\n        unitCollection.reset(temp);\n        return newColl.reset(temp);\n      }\n    });\n    return newColl.toArray();\n  };\n\n  CommonFloor.filterPlotAttributes = function(ind1, val1) {\n    var flooring, newtempColl, tem, tempColl;\n    flooring = [];\n    tempColl = plotVariantCollection.getPlotUnits();\n    newtempColl = _.intersection(tempColl, unitCollection.toArray());\n    $.each(newtempColl, function(item, value) {\n      var arr, temp, unitDetails, unitVarinat, val, valkey;\n      unitDetails = window.unit.getUnitDetails(value.get('id'));\n      unitVarinat = unitDetails[0];\n      valkey = unitVarinat.get('variant_attributes');\n      val = _.propertyOf(valkey)(ind1);\n      arr = val1.split(',');\n      if (_.isUndefined(val)) {\n        return;\n      }\n      if (_.isArray(val)) {\n        $.each(val, function(ind1, val1) {\n          var temp;\n          if (_.isString(val1)) {\n            temp = val1;\n          } else {\n            temp = val1.toString();\n          }\n          if ($.inArray(temp, arr) > -1) {\n            return flooring.push(value);\n          }\n        });\n      } else {\n        if (_.isString(val)) {\n          temp = val;\n        } else {\n          temp = val.toString();\n        }\n        if ($.inArray(temp, arr) > -1) {\n          flooring.push(value);\n        }\n      }\n      return unitCollection.reset(flooring);\n    });\n    tem = unitCollection.toArray();\n    return tem;\n  };\n\n  CommonFloor.removeStepFilters = function() {\n    $.each(CommonFloor.defaults['apartment'], function(index, value) {\n      var actualTypes, new_types, step_types, types, value_Arr;\n      if (value !== \"\") {\n        step_types = CommonFloor.defaults['step_three'][index].split(',');\n        types = step_types.map(function(item) {\n          return parseInt(item);\n        });\n        value_Arr = value.split(',');\n        new_types = value_Arr.map(function(item) {\n          return parseInt(item);\n        });\n        actualTypes = _.difference(new_types, types);\n        CommonFloor.defaults['apartment'][index] = actualTypes.join(',');\n        return CommonFloor.defaults['step_three'][index] = \"\";\n      }\n    });\n    $.each(CommonFloor.defaults['common'], function(index, value) {\n      return CommonFloor.defaults['common'][index] = \"\";\n    });\n    unitCollection.reset(unitMasterCollection.toArray());\n    CommonFloor.resetCollections();\n    return CommonFloor.filterNew();\n  };\n\n  $(window).bind('hashchange', function() {\n    CommonFloor.defaults['type'] = \"\";\n    $.each(CommonFloor.defaults['villa'], function(index, value) {\n      return CommonFloor.defaults['villa'][index] = \"\";\n    });\n    $.each(CommonFloor.defaults['plot'], function(index, value) {\n      return CommonFloor.defaults['plot'][index] = \"\";\n    });\n    $.each(CommonFloor.defaults['apartment'], function(index, value) {\n      return CommonFloor.defaults['apartment'][index] = \"\";\n    });\n    $.each(CommonFloor.defaults['common'], function(index, value) {\n      return CommonFloor.defaults['common'][index] = \"\";\n    });\n    unitCollection.reset(unitMasterCollection.toArray());\n    CommonFloor.resetCollections();\n    CommonFloor.filterNew();\n    return clearTimeout(window.renderLoopInterval);\n  });\n\n  CommonFloor.filterViews = function() {\n    var temp;\n    CommonFloor.resetCollections();\n    temp = [];\n    unitCollection.each(function(item) {\n      var views;\n      views = item.get('views');\n      return $.each(views, function(ind, val) {\n        if ($.inArray(val, CommonFloor.defaults['common']['views'].split(',')) > -1 && val !== \"\") {\n          return temp.push(item);\n        }\n      });\n    });\n    return unitCollection.reset(temp);\n  };\n\n  CommonFloor.filterFacings = function() {\n    var temp;\n    CommonFloor.resetCollections();\n    temp = [];\n    unitCollection.each(function(item) {\n      var facings;\n      facings = item.get('direction');\n      if ($.inArray(facings, CommonFloor.defaults['common']['facings'].split(',')) > -1 && facings !== \"\") {\n        return temp.push(item);\n      }\n    });\n    return unitCollection.reset(temp);\n  };\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/common/common.js.map","(function() {\n  var CenterView, LeftView, TopView,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  CommonFloor.ProjectLayoutView = (function(superClass) {\n    extend(ProjectLayoutView, superClass);\n\n    function ProjectLayoutView() {\n      return ProjectLayoutView.__super__.constructor.apply(this, arguments);\n    }\n\n    ProjectLayoutView.prototype.template = '#project-template';\n\n    return ProjectLayoutView;\n\n  })(Marionette.LayoutView);\n\n  CommonFloor.ProjectCtrl = (function(superClass) {\n    extend(ProjectCtrl, superClass);\n\n    function ProjectCtrl() {\n      return ProjectCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    ProjectCtrl.prototype.initialize = function() {\n      var id, region;\n      id = PROJECTID;\n      project.setProjectAttributes(id);\n      if (jQuery.isEmptyObject(project.toJSON())) {\n        region = new Marionette.Region({\n          el: '#noFound-template'\n        });\n        return this.show(new CommonFloor.NothingFoundView);\n      } else {\n        return this.show(new CommonFloor.ProjectLayoutView);\n      }\n    };\n\n    return ProjectCtrl;\n\n  })(Marionette.RegionController);\n\n  TopView = (function(superClass) {\n    extend(TopView, superClass);\n\n    function TopView() {\n      return TopView.__super__.constructor.apply(this, arguments);\n    }\n\n    TopView.prototype.template = Handlebars.compile('<div class=\"row\"> <div class=\"col-md-12 col-xs-12 col-sm-12 animated fadeIn\"> <h2 class=\"proj-name\"><small>{{i10n \"explore\"}}</small> {{project_title}}</h2> <!--<div class=\"pull-right\"> <div class=\"toggle_radio\"> <input type=\"radio\" checked class=\"toggle_option\" id=\"first_toggle\" name=\"toggle_option\"> <input type=\"radio\" class=\"toggle_option\" id=\"second_toggle\" name=\"toggle_option\"> <input type=\"radio\" class=\"toggle_option\" id=\"third_toggle\" name=\"toggle_option\"> <label for=\"first_toggle\"><p>Morning</p></label> <label for=\"second_toggle\"><p>Afternoon</p></label> <label for=\"third_toggle\"><p>Evening</p></label> <div class=\"toggle_option_slider\"> </div> </div> </div>--> <!--<span class=\"header-cta\"> Call us on 89555444 </span>--> <div class=\"clearfix\"></div> </div> </div>');\n\n    TopView.prototype.className = 'container-fluid';\n\n    return TopView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.TopCtrl = (function(superClass) {\n    extend(TopCtrl, superClass);\n\n    function TopCtrl() {\n      return TopCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    TopCtrl.prototype.initialize = function() {\n      return this.show(new TopView({\n        model: project\n      }));\n    };\n\n    return TopCtrl;\n\n  })(Marionette.RegionController);\n\n  LeftView = (function(superClass) {\n    extend(LeftView, superClass);\n\n    function LeftView() {\n      return LeftView.__super__.constructor.apply(this, arguments);\n    }\n\n    LeftView.prototype.template = Handlebars.compile('<div class=\"hidden\"> <div id=\"proj_info\"> <div class=\"big-tooltip\"> <div class=\"svg-info not-available\"> <div class=\"action-bar\"> <h5>{{i10n \"project_by\"}}</h5> <img src=\"{{logo}}\" class=\"img-responsive builder-logo\"> </div> <h5 class=\"pull-left m-t-0\">{{address}}</h5> <div class=\"details\"> {{#propertyTypes}} <div> {{prop_type}} <span class=\"text-muted\">({{unit_types}})</span> </div> {{/propertyTypes}} <div class=\"text-muted text-default\"> Click arrow to move forward</div> </div> <div class=\"circle action_button\"> <span class=\"arrow-up icon-chevron-right\"></span> </div> </div> </div> </div> <div class=\"proj-info\" style=\"width:140px;height:170px;\"> <div class=\"proj-logo section\"> <h3 class=\"m-t-10\"><strong>{{i10n \"project_by\"}}</strong></h3> <img src=\"{{logo}}\" class=\"img-responsive builder-logo\"> </div> <hr class=\"embossed\" /> <div class=\"proj-details\"> <h3 class=\"m-t-0\"><strong>{{i10n \"project_details\"}}</strong></h3> <!--<span class=\"icon-map-marker\"></span> <strong>Address: </strong><br>--> {{address}} </div> <hr class=\"embossed m-b-0\" /> {{#propertyTypes}} <div class=\"prop-types {{prop_type}}\"> <!--<h4 class=\"m-b-5 m-t-0 text-primary\">{{prop_type}}</h4> <span>{{i10n \"project_type\"}}:</span> {{prop_type}} <p> <span>{{i10n \"starting_area\"}}:</span> {{starting_area}}' + project.get('measurement_units') + '</p>--> <span class=\"prop-icon\"></span> <div class=\"unit-types\"> {{i10n \"unit_types\"}}:<br> <span>{{unit_types}}</span> </div> <!--<p> <span>Available:</span> {{#availability}} {{count}}\t{{status}} {{/availability}} </p> <p> <span>{{i10n \"starting_price\"}}:</span>  {{starting_price}} </p>--> </div> {{/propertyTypes}} </div> <!--<div class=\"info-slider\"> <div class=\"text-center\"> <img src=\"../images/marker-img.png\" class=\"img-responsive marker-img\"> {{i10n \"know_your_neighbour\"}} </div> </div>--> </div>');\n\n    LeftView.prototype.serializeData = function() {\n      var availability, data, properties, propertyTypes, propertyTypesData;\n      data = LeftView.__super__.serializeData.call(this);\n      propertyTypesData = this.model.get('project_property_types');\n      properties = this.model.get('property_types');\n      propertyTypes = [];\n      availability = [];\n      $.each(propertyTypesData, function(index, value) {\n        $.each(value.availability, function(ind, val) {\n          return availability.push({\n            'status': s.capitalize(ind),\n            'count': val\n          });\n        });\n        return propertyTypes.push({\n          'prop_type': s.capitalize(properties[index]),\n          'unit_types': value.unit_types.join(', '),\n          'starting_area': value.starting_area,\n          'starting_price': window.numDifferentiation(value.starting_price),\n          'availability': availability\n        });\n      });\n      data.propertyTypes = propertyTypes;\n      return data;\n    };\n\n    return LeftView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.LeftCtrl = (function(superClass) {\n    extend(LeftCtrl, superClass);\n\n    function LeftCtrl() {\n      return LeftCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    LeftCtrl.prototype.initialize = function() {\n      return this.show(new LeftView({\n        model: project\n      }));\n    };\n\n    return LeftCtrl;\n\n  })(Marionette.RegionController);\n\n  CenterView = (function(superClass) {\n    extend(CenterView, superClass);\n\n    function CenterView() {\n      return CenterView.__super__.constructor.apply(this, arguments);\n    }\n\n    CenterView.prototype.template = Handlebars.compile('<div class=\"col-md-12 col-sm-12 col-xs-12 us-right-content animated fadeIn\"> <div class=\"step1-container\"> <div class=\"img-loader \"> <div class=\"square\" ></div> <div class=\"square\"></div> <div class=\"square last\"></div> <div class=\"square clear\"></div> <div class=\"square\"></div> <div class=\"square last\"></div> <div class=\"square clear\"></div> <div class=\"square \"></div> <div class=\"square last\"></div> </div> <div class=\"step1-wrapper animated fadeIn hidden\"> <img src=\"../../projects/3/google_earth/step1.jpg\" class=\"firstimage img-responsive earth-img\" /> <div class=\"svg-area\"></div> </div> </div> </div>');\n\n    CenterView.prototype.ui = {\n      svgContainer: '.step1-container'\n    };\n\n    CenterView.prototype.events = {\n      'click .step1-marker': function(e) {\n        $('.step1-wrapper').attr('class', 'zoom');\n        $('.step1').addClass('animated fadeOut');\n        $('.step1-marker').tooltipster('hide');\n        return setTimeout(function(x) {\n          return CommonFloor.checkPropertyType();\n        }, 100);\n      },\n      'mouseover .amenity': function(e) {\n        var html;\n        html = '<div class=\"row\"> <div class=\"col-sm-12 b-r\"> <h4 class=\"text-warning margin-none\">' + $(e.currentTarget).attr('data-amenity-title') + '</h4> <h6 class=\"text-muted\">' + $(e.currentTarget).attr('data-amenity-desc') + '</h6> </div> </div>';\n        return $('.amenity').tooltipster('content', html);\n      }\n    };\n\n    CenterView.prototype.onShow = function() {\n      var PATH, img, windowHeight, windowWidth;\n      PATH = BASEURL + '/projects/' + PROJECTID + '/google_earth/map.svg';\n      windowHeight = $(window).innerHeight() - 56;\n      $('.step1-container').css('height', windowHeight);\n      $('.step1-container').css('min-width', windowHeight * 2);\n      windowWidth = $(window).innerWidth();\n      $('.earth-img').css('width', this.ui.svgContainer.width());\n      img = this.model.get('step_one').svg;\n      $('.firstimage').attr('src', img);\n      return $('.firstimage').load(function() {\n        $('.img-loader').addClass('hidden');\n        return $('.svg-area').load(PATH, function() {\n          $('.step1-wrapper').removeClass('hidden');\n          $('.step1-marker').tooltipster({\n            theme: 'tooltipster-shadow',\n            contentAsHTML: true,\n            onlyOne: true,\n            arrow: false,\n            offsetX: 180,\n            interactive: true,\n            animation: 'fade',\n            content: $('#proj_info').html(),\n            functionReady: function(e) {\n              var svgHeight, svgWidth, tooltipHeight;\n              $('.action_button').on('click', function(e) {\n                $('.img-loader').removeClass('hidden');\n                $('.step1-wrapper').attr('class', 'zoom');\n                $('.step1').addClass('animated fadeOut');\n                $('.step1-marker').tooltipster('hide');\n                return setTimeout(function(x) {\n                  return CommonFloor.checkPropertyType();\n                }, 100);\n              });\n              tooltipHeight = $('.tooltipster-content').height() + 10;\n              $('.action-bar').css('min-height', tooltipHeight);\n              svgHeight = $(window).innerHeight() - 56;\n              svgWidth = svgHeight * 2;\n              if ($(window).width() < 1025) {\n                $('.step1-container').css('min-height', svgHeight);\n                $('.step1-container').css('min-width', svgWidth);\n                return $('.svg-area').css('min-width', svgWidth);\n              }\n            }\n          });\n          $('.step1-marker').tooltipster('show');\n          $('.amenity').tooltipster({\n            theme: 'tooltipster-shadow marker-tooltip',\n            contentAsHTML: true,\n            onlyOne: true,\n            arrow: false,\n            trigger: 'hover'\n          });\n          return $('.unassign').attr('style', \"opacity: 0;fill-opacity: 0;\");\n        });\n      });\n    };\n\n    return CenterView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.CenterCtrl = (function(superClass) {\n    extend(CenterCtrl, superClass);\n\n    function CenterCtrl() {\n      return CenterCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    CenterCtrl.prototype.initialize = function() {\n      return this.show(new CenterView({\n        model: project\n      }));\n    };\n\n    return CenterCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/project/project.controller.js.map","(function() {\n  var TopMasterView, api,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  api = \"\";\n\n  CommonFloor.ProjectMasterView = (function(superClass) {\n    extend(ProjectMasterView, superClass);\n\n    function ProjectMasterView() {\n      return ProjectMasterView.__super__.constructor.apply(this, arguments);\n    }\n\n    ProjectMasterView.prototype.template = '#project-view-template';\n\n    return ProjectMasterView;\n\n  })(Marionette.LayoutView);\n\n  CommonFloor.ProjectMasterCtrl = (function(superClass) {\n    extend(ProjectMasterCtrl, superClass);\n\n    function ProjectMasterCtrl() {\n      return ProjectMasterCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    ProjectMasterCtrl.prototype.initialize = function() {\n      if (jQuery.isEmptyObject(project.toJSON())) {\n        project.setProjectAttributes(PROJECTID);\n        CommonFloor.checkPropertyType();\n      }\n      if (bunglowVariantMasterCollection.length === 0 && apartmentVariantMasterCollection.length === 0 && plotVariantMasterCollection.length === 0) {\n        return this.show(new CommonFloor.NothingFoundView);\n      } else {\n        return this.show(new CommonFloor.ProjectMasterView);\n      }\n    };\n\n    return ProjectMasterCtrl;\n\n  })(Marionette.RegionController);\n\n  TopMasterView = (function(superClass) {\n    extend(TopMasterView, superClass);\n\n    function TopMasterView() {\n      return TopMasterView.__super__.constructor.apply(this, arguments);\n    }\n\n    TopMasterView.prototype.template = Handlebars.compile('<div class=\"container-fluid animated fadeIn\"> <div class=\"row\"> <div class=\"col-md-12 col-xs-12 col-sm-12\"> <div class=\"breadcrumb-bar\"> <a class=\"unit_back\" href=\"#\"></a> </div> <div class=\"header-info\"> <h2 class=\"pull-left proj-name\">{{project_title}}</h2> <div class=\"proj-type-count\"> {{#types}} <h2 class=\"pull-left\">{{count.length}}</h2><p class=\"pull-left\">{{type}}</p> {{/types}} </div> <div class=\"pull-left filter-result full\"> <ul  id=\"flexiselDemo1\"> {{#area}} <li> <div class=\"filter-pill\"> {{name}} {{type}} <span class=\"icon-cross \" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> </li> {{/area}} {{#budget}} <li> <div class=\"filter-pill\"> <span class=\"icon-rupee-icn\"></span>{{name}} {{type}}</span> <span class=\"icon-cross \" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> </li> {{/budget}} {{#views}} <li> <div class=\"filter-pill\"> {{name}}  <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" ></span> </div> </li> {{/views}} {{#facings}} <li> <div class=\"filter-pill\"> {{name}} <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" ></span> </div> </li> {{/facings}} {{#status}} <li> <div class=\"filter-pill\"> {{name}} {{type}} <span class=\"icon-cross \" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> </li> {{/status}} {{#each  filters}} <li> <div class=\"filter-title\"> {{name}}  <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" data-index=\"{{index}}\"></span> </div> </li> {{#filters}} {{#each this}} {{#each this}} <li> <div class=\"filter-pill\"> {{name}} <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\"  data-index=\"{{index}}\"  data-type=\"{{typename}}\"></span> </div> </li>{{/each}} {{/each}} {{/filters}} {{/each}} </ul> <!--{{#each  filters}} {{#each this}} <div class=\"filter-pill\"  > {{this.name}}{{this.type}} <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\"  ></span> </div> {{/each}}{{/each }}--> </div> <div class=\"clearfix\"></div> </div> </div> </div> </div>');\n\n    TopMasterView.prototype.ui = {\n      unitBack: '.unit_back',\n      unitTypes: '.unit_types',\n      priceMin: '.price_min',\n      priceMax: '.price_max',\n      apply: '.apply',\n      variantNames: '.variant_names',\n      area: '#filter_area',\n      budget: '#filter_budget',\n      types: '.types',\n      status: '#filter_available',\n      filter_flooring: '.filter_flooring',\n      views: '.views',\n      facings: '.facings'\n    };\n\n    TopMasterView.prototype.serializeData = function() {\n      var data, main, response, status;\n      data = TopMasterView.__super__.serializeData.call(this);\n      status = CommonFloor.getStatusFilters();\n      if (status.length !== 0) {\n        data.status = status;\n      }\n      main = CommonFloor.getFilters();\n      data.filters = main[0].filters;\n      data.area = main[0].area;\n      data.budget = main[0].price;\n      data.status = main[0].status;\n      data.views = main[0].views;\n      data.facings = main[0].facings;\n      response = CommonFloor.propertyTypes();\n      data.types = response;\n      return data;\n    };\n\n    TopMasterView.prototype.events = function() {\n      return {\n        'click @ui.unitBack': function(e) {\n          e.preventDefault();\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return CommonFloor.navigate('/', true);\n        },\n        'click @ui.types': function(e) {\n          var arr, index;\n          arr = CommonFloor.defaults['type'].split(',');\n          index = arr.indexOf($(e.currentTarget).attr('data-id'));\n          arr.splice(index, 1);\n          CommonFloor.defaults['type'] = arr.join(',');\n          if ($(e.currentTarget).attr('data-id') === 'villa') {\n            this.removeVillaFilters();\n          }\n          if ($(e.currentTarget).attr('data-id') === 'apartment') {\n            this.removeAptFilters();\n          }\n          if ($(e.currentTarget).attr('data-id') === 'plot') {\n            this.removePlotFilters();\n          }\n          this.trigger('render:view');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          return unitCollection.trigger('available');\n        },\n        'click @ui.unitTypes': function(e) {\n          var type, types;\n          types = [];\n          type = $(e.currentTarget).attr('data-type');\n          if (CommonFloor.defaults[type]['unit_type_id'] !== \"\") {\n            types = CommonFloor.defaults[type]['unit_type_id'].split(',');\n            types = types.map(function(item) {\n              return parseInt(item);\n            });\n          }\n          types = _.without(types, parseInt($(e.currentTarget).attr('data-id')));\n          CommonFloor.defaults[type]['unit_type_id'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.variantNames': function(e) {\n          var type, types;\n          types = [];\n          type = $(e.currentTarget).attr('data-type');\n          if (CommonFloor.defaults[type]['unit_variant_id'] !== \"\") {\n            types = CommonFloor.defaults[type]['unit_variant_id'].split(',');\n            types = types.map(function(item) {\n              return parseInt(item);\n            });\n          }\n          types = _.without(types, parseInt($(e.currentTarget).attr('data-id')));\n          CommonFloor.defaults[type]['unit_variant_id'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.status': function(e) {\n          CommonFloor.defaults['common']['availability'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.area': function(e) {\n          CommonFloor.defaults['common']['area_max'] = \"\";\n          CommonFloor.defaults['common']['area_min'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.budget': function(e) {\n          CommonFloor.defaults['common']['price_max'] = \"\";\n          CommonFloor.defaults['common']['price_min'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.filter_flooring': function(e) {\n          var index, type, types;\n          types = [];\n          type = $(e.currentTarget).attr('data-type');\n          index = $(e.currentTarget).attr('data-index');\n          if (CommonFloor.defaults[type]['attributes'][index] !== \"\") {\n            types = CommonFloor.defaults[type]['attributes'][index].split(',');\n          }\n          types = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults[type]['attributes'][index] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.facings': function(e) {\n          var types;\n          types = CommonFloor.defaults['common']['facings'].split(',');\n          types = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['common']['facings'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.views': function(e) {\n          var types;\n          types = CommonFloor.defaults['common']['views'].split(',');\n          types = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['common']['views'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        }\n      };\n    };\n\n    TopMasterView.prototype.onShow = function() {\n      var response;\n      $(\"#flexiselDemo1\").flexisel({\n        visibleItems: 11,\n        animationSpeed: 200,\n        autoPlay: false,\n        autoPlaySpeed: 1000,\n        clone: false,\n        enableResponsiveBreakpoints: true,\n        responsiveBreakpoints: {\n          portrait: {\n            changePoint: 480,\n            visibleItems: 5\n          },\n          landscape: {\n            changePoint: 640,\n            visibleItems: 6\n          },\n          tablet: {\n            changePoint: 768,\n            visibleItems: 3\n          }\n        }\n      });\n      response = CommonFloor.propertyTypes();\n      if (response.length === 0) {\n        return $('.proj-type-count').html('<p class=\"p-l-15\">No results found</p>');\n      }\n    };\n\n    TopMasterView.prototype.removeVillaFilters = function() {\n      var unitTypes, unitTypesArr, unitVariants, unitVariantsArr, unitsArr, unittypes, variants;\n      variants = [];\n      unittypes = [];\n      unitsArr = bunglowVariantCollection.getBunglowMasterUnits();\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        variants.push(parseInt(unitDetails[0].get('id')));\n        return unittypes.push(parseInt(unitDetails[1].get('id')));\n      });\n      unitTypes = CommonFloor.defaults['villa']['unit_type_id'].split(',');\n      unitTypesArr = unitTypes.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(unittypes, function(index, value) {\n        if ($.inArray(parseInt(value), unitTypesArr) > -1) {\n          return unitTypes = _.without(unitTypesArr, parseInt(value));\n        }\n      });\n      CommonFloor.defaults['villa']['unit_type_id'] = unitTypes.join(',');\n      unitVariants = CommonFloor.defaults['villa']['unit_variant_id'].split(',');\n      unitVariantsArr = unitVariants.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(variants, function(index, value) {\n        if ($.inArray(parseInt(value), unitVariantsArr) > -1) {\n          return unitVariants = _.without(unitVariantsArr, parseInt(value));\n        }\n      });\n      return CommonFloor.defaults['villa']['unit_variant_id'] = unitVariants.join(',');\n    };\n\n    TopMasterView.prototype.removeAptFilters = function() {\n      var unitTypes, unitTypesArr, unitVariants, unitVariantsArr, unitsArr, unittypes, variants;\n      variants = [];\n      unittypes = [];\n      unitsArr = apartmentVariantCollection.getApartmentMasterUnits();\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        variants.push(parseInt(unitDetails[0].get('id')));\n        return unittypes.push(parseInt(unitDetails[1].get('id')));\n      });\n      unitTypes = CommonFloor.defaults['villa']['unit_type_id'].split(',');\n      unitTypesArr = unitTypes.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(unittypes, function(index, value) {\n        if ($.inArray(parseInt(value), unitTypesArr) > -1) {\n          return unitTypes = _.without(unitTypesArr, parseInt(value));\n        }\n      });\n      CommonFloor.defaults['villa']['unit_type_id'] = unitTypes.join(',');\n      unitVariants = CommonFloor.defaults['villa']['unit_variant_id'].split(',');\n      unitVariantsArr = unitVariants.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(variants, function(index, value) {\n        if ($.inArray(parseInt(value), unitVariantsArr) > -1) {\n          return unitVariants = _.without(unitVariantsArr, parseInt(value));\n        }\n      });\n      return CommonFloor.defaults['villa']['unit_variant_id'] = unitVariants.join(',');\n    };\n\n    TopMasterView.prototype.removePlotFilters = function() {\n      var unitTypes, unitTypesArr, unitVariants, unitVariantsArr, unitsArr, unittypes, variants;\n      variants = [];\n      unittypes = [];\n      unitsArr = plotVariantCollection.getPlotMasterUnits();\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        variants.push(parseInt(unitDetails[0].get('id')));\n        return unittypes.push(parseInt(unitDetails[1].get('id')));\n      });\n      unitTypes = CommonFloor.defaults['villa']['unit_type_id'].split(',');\n      unitTypesArr = unitTypes.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(unittypes, function(index, value) {\n        if ($.inArray(parseInt(value), unitTypesArr) > -1) {\n          return unitTypes = _.without(unitTypesArr, parseInt(value));\n        }\n      });\n      CommonFloor.defaults['villa']['unit_type_id'] = unitTypes.join(',');\n      unitVariants = CommonFloor.defaults['villa']['unit_variant_id'].split(',');\n      unitVariantsArr = unitVariants.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(variants, function(index, value) {\n        if ($.inArray(parseInt(value), unitVariantsArr) > -1) {\n          return unitVariants = _.without(unitVariantsArr, parseInt(value));\n        }\n      });\n      return CommonFloor.defaults['villa']['unit_variant_id'] = unitVariants.join(',');\n    };\n\n    return TopMasterView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.TopMasterCtrl = (function(superClass) {\n    extend(TopMasterCtrl, superClass);\n\n    function TopMasterCtrl() {\n      return TopMasterCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    TopMasterCtrl.prototype.initialize = function() {\n      this.renderToppView();\n      return unitCollection.bind(\"available\", this.renderToppView, this);\n    };\n\n    TopMasterCtrl.prototype.renderToppView = function() {\n      this.view = new TopMasterView({\n        model: project\n      });\n      this.listenTo(this.view, \"render:view\", this.loadController);\n      return this.show(this.view);\n    };\n\n    TopMasterCtrl.prototype.loadController = function() {\n      window.unitTypes = [];\n      window.unitVariants = [];\n      window.variantNames = [];\n      window.price = '';\n      window.area = '';\n      window.type = [];\n      this.region = new Marionette.Region({\n        el: '#filterregion'\n      });\n      return new CommonFloor.FilterMasterCtrl({\n        region: this.region\n      });\n    };\n\n    return TopMasterCtrl;\n\n  })(Marionette.RegionController);\n\n  CommonFloor.LeftMasterCtrl = (function(superClass) {\n    extend(LeftMasterCtrl, superClass);\n\n    function LeftMasterCtrl() {\n      return LeftMasterCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    LeftMasterCtrl.prototype.initialize = function() {\n      this.renderLeftMasterView();\n      return unitCollection.bind(\"available\", this.renderLeftMasterView, this);\n    };\n\n    LeftMasterCtrl.prototype.renderLeftMasterView = function() {\n      var data, region, response, units;\n      response = CommonFloor.checkListView();\n      if (response.count.length === 0) {\n        region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        new CommonFloor.NoUnitsCtrl({\n          region: region\n        });\n        return;\n      }\n      if (response.type === 'bunglows') {\n        units = bunglowVariantCollection.getBunglowUnits();\n        data = {};\n        data.units = units;\n        data.type = 'villa';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        new CommonFloor.MasterBunglowListCtrl({\n          region: this.region\n        });\n      }\n      if (response.type === 'building') {\n        units = buildingCollection;\n        data = {};\n        data.units = units;\n        data.type = 'building';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        new CommonFloor.MasterBuildingListCtrl({\n          region: this.region\n        });\n      }\n      if (response.type === 'plot') {\n        units = plotVariantCollection.getPlotUnits();\n        data = {};\n        data.units = units;\n        data.type = 'plot';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        return new CommonFloor.MasterPlotListCtrl({\n          region: this.region\n        });\n      }\n    };\n\n    return LeftMasterCtrl;\n\n  })(Marionette.RegionController);\n\n  CommonFloor.CenterMasterView = (function(superClass) {\n    extend(CenterMasterView, superClass);\n\n    function CenterMasterView() {\n      return CenterMasterView.__super__.constructor.apply(this, arguments);\n    }\n\n    CenterMasterView.prototype.template = Handlebars.compile('<div class=\"col-md-12 col-sm-12 col-xs-12 us-right-content mobile visible animated fadeIn\"> <div class=\"legend c clearfix\"> <ul> <!--<li class=\"available\">AVAILABLE</li>--> <li class=\"sold\">N/A</li> <!--<li class=\"blocked\">BLOCKED</li> <li class=\"na\">Available</li>--> </ul> </div> <div class=\"zoom-controls master-zoom\"> <div class=\"zoom-in\"></div> <div class=\"zoom-out\"></div> </div> <div id=\"view_toggle\" class=\"toggle-view-button list\"></div> <div id=\"trig\" class=\"toggle-button hidden\">List View</div> <div class=\" master b animated fadeIn\"> <!--<div class=\"controls mapView\"> <div class=\"toggle\"> <a href=\"#/master-view\" class=\"map active\">Map</a><a href=\"#/list-view\" class=\"list\">List</a> </div> </div>--> <div id=\"svg_loader\" class=\"img-loader\"> <div class=\"square\" ></div> <div class=\"square\"></div> <div class=\"square last\"></div> <div class=\"square clear\"></div> <div class=\"square\"></div> <div class=\"square last\"></div> <div class=\"square clear\"></div> <div class=\"square \"></div> <div class=\"square last\"></div> </div> <div id=\"spritespin\"></div> <div class=\"svg-maps animated fadeIn hidden\"> <img class=\"first_image\" /> <div class=\"region inactive\"></div> <div class=\"tooltip-overlay hidden\"></div> </div> <div id=\"rotate_loader\" class=\"cf-loader hidden\"></div> </div> <div class=\"alert alert-warning alert-dismissible fade in help-box\" role=\"alert\"> Hover on units to view details <span class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">×</span> </div> <div class=\"rotate rotate-controls hidden\"> <div id=\"prev\" class=\"rotate-left\">Left</div> <span class=\"rotate-text\">Rotate</span> <div id=\"next\" class=\"rotate-right\">Right</div> </div> </div>');\n\n    CenterMasterView.prototype.ui = {\n      svgContainer: '.master',\n      trig: '#trig',\n      viewtog: '#view_toggle',\n      plotunit: '.plot'\n    };\n\n    CenterMasterView.prototype.serializeData = function() {\n      var data;\n      data = CenterMasterView.__super__.serializeData.call(this);\n      _.values(project.get('property_types'));\n      data.properties = _.values(project.get('property_types')).join('/');\n      return data;\n    };\n\n    CenterMasterView.prototype.initialize = function() {\n      this.currentBreakPoint = 0;\n      this.breakPoints = [];\n      return this[\"class\"] = '';\n    };\n\n    CenterMasterView.prototype.events = {\n      'click @ui.viewtog': function(e) {\n        $('.us-left-content').toggleClass('not-visible visible');\n        return $('.us-right-content').toggleClass('not-visible visible');\n      },\n      'click #prev': function() {\n        return this.setDetailIndex(this.currentBreakPoint - 1);\n      },\n      'click #next': function() {\n        return this.setDetailIndex(this.currentBreakPoint + 1);\n      },\n      'click .villa': function(e) {\n        var id, unit;\n        e.preventDefault();\n        id = parseInt(e.currentTarget.id);\n        unit = unitCollection.findWhere({\n          id: id\n        });\n        if (!(_.isUndefined(unit)) && unit.get('availability') === 'available') {\n          return CommonFloor.navigate('/unit-view/' + id, true);\n        }\n      },\n      'click @ui.plotunit': function(e) {\n        var id, unit;\n        e.preventDefault();\n        id = parseInt(e.currentTarget.id);\n        unit = unitCollection.findWhere({\n          id: id\n        });\n        if (!(_.isUndefined(unit)) && unit.get('availability') === 'available') {\n          return CommonFloor.navigate('/unit-view/' + id, true);\n        }\n      },\n      'click .building': function(e) {\n        var building, id, units;\n        e.preventDefault();\n        id = parseInt(e.currentTarget.id);\n        building = buildingCollection.findWhere({\n          id: id\n        });\n        units = unitCollection.where({\n          'building_id': id,\n          'availability': 'available'\n        });\n        if (units.length === 0) {\n          return;\n        }\n        $('#spritespin').addClass('zoom');\n        $('.us-right-content').addClass('fadeOut');\n        $('.cf-loader').removeClass('hidden');\n        if (building !== void 0 && units.length !== 0) {\n          if (Object.keys(building.get('building_master')).length === 0) {\n            return CommonFloor.navigate('/building/' + id + '/apartments', true);\n          } else {\n            return CommonFloor.navigate('/building/' + id + '/master-view', true);\n          }\n        }\n      },\n      'mouseout .villa': function(e) {\n        var availability, id, unit;\n        id = parseInt(e.currentTarget.id);\n        unit = unitCollection.findWhere({\n          id: id\n        });\n        if (unit !== void 0) {\n          availability = unit.get('availability');\n          availability = s.decapitalize(availability);\n          return $('#unit' + id).attr('class', 'unit blocks ' + availability);\n        }\n      },\n      'mouseout .plot': function(e) {\n        var availability, id, unit;\n        id = parseInt(e.currentTarget.id);\n        unit = unitCollection.findWhere({\n          id: id\n        });\n        if (unit !== void 0) {\n          availability = unit.get('availability');\n          availability = s.decapitalize(availability);\n          return $('#unit' + id).attr('class', 'bldg blocks ' + availability);\n        }\n      },\n      'mouseout .building': function(e) {\n        var building, id;\n        id = parseInt(e.currentTarget.id);\n        building = buildingCollection.findWhere({\n          id: id\n        });\n        if (building !== void 0) {\n          $('.building').attr('class', 'layer building');\n          return $('#bldg' + id).attr('class', 'bldg blocks');\n        }\n      },\n      'mouseover .villa': function(e) {\n        var availability, html, id, price, response, status, unit, unitMaster;\n        id = parseInt(e.currentTarget.id);\n        html = \"\";\n        unit = unitCollection.findWhere({\n          id: id\n        });\n        unitMaster = unitMasterCollection.findWhere({\n          id: id\n        });\n        if (unit === void 0 && unitMaster !== void 0) {\n          html = '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\"> Not in selection </h5> </div>';\n          $('.layer').tooltipster('content', html);\n          return;\n        }\n        availability = unit.get('availability');\n        availability = s.decapitalize(availability);\n        if (unit === void 0 || availability === 'archived') {\n          html += '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\">Villa details not entered </h5> </div>';\n          $('.layer').tooltipster('content', html);\n          return;\n        }\n        response = window.unit.getUnitDetails(id);\n        price = window.numDifferentiation(response[3]);\n        status = s.replaceAll(s.capitalize(availability), \"_\", \" \");\n        html = \"\";\n        html += '<div class=\"svg-info ' + availability + ' \"> <div class=\"action-bar\"> <div class=\"villa\"></div> </div> <div class=\"pull-left\"> <h4 class=\"m-t-0\">' + unit.get('unit_name') + '</h4> <div class=\"details\"> <ul> <li> <h5 class=\"inline-block\">' + response[1].get('name') + '</h5> <span> - ' + response[0].get('super_built_up_area') + ' ' + project.get('measurement_units') + '</span> <!--<label>Variant</label> - ' + response[0].get('unit_variant_name') + '--> </li> </ul> <h5 class=\"m-t-0 m-b-0 price text-primary\"> <span class=\"text-primary icon-rupee-icn\"></span>' + price + '</h5> <span>' + status + '</span> </div> </div>';\n        if (availability === 'available') {\n          html += '<a href=\"#unit-view/' + id + '\" class=\"view-unit\"> <div class=\"circle\"> <span class=\"arrow-up icon-chevron-right\"></span> </div> </a> </div>';\n        } else {\n          html += '</div>';\n        }\n        $('#' + id).attr('class', 'layer villa  ' + availability);\n        $('#unit' + id).attr('class', 'unit blocks ' + availability + '  active');\n        $('.units').mCustomScrollbar(\"scrollTo\", '#unit' + id);\n        return $('#' + id).tooltipster('content', html);\n      },\n      'mouseover .plot': function(e) {\n        var availability, html, id, price, response, status, unit, unitMaster;\n        id = parseInt(e.currentTarget.id);\n        html = \"\";\n        unit = unitCollection.findWhere({\n          id: id\n        });\n        unitMaster = unitMasterCollection.findWhere({\n          id: id\n        });\n        if (unit === void 0 && unitMaster !== void 0) {\n          html = '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\"> Not in selection </h5> </div>';\n          $('.layer').tooltipster('content', html);\n          return;\n        }\n        availability = unit.get('availability');\n        availability = s.decapitalize(availability);\n        if (unit === void 0 || availability === 'archived') {\n          html += '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\"> Plot details not entered </h5> </div>';\n          $('.layer').tooltipster('content', html);\n          return;\n        }\n        response = window.unit.getUnitDetails(id);\n        price = window.numDifferentiation(response[3]);\n        status = s.replaceAll(s.capitalize(availability), \"_\", \" \");\n        html = \"\";\n        html += '<div class=\"svg-info ' + availability + ' \"> <div class=\"action-bar\"> <div class=\"plot\"></div> </div> <div class=\"pull-left\"> <h4 class=\"m-t-0\">' + unit.get('unit_name') + '</h4> <div class=\"details\"> <ul> <li> <h5 class=\"inline-block\">' + response[1].get('name') + '</h5> <span> - ' + response[0].get('super_built_up_area') + ' ' + project.get('measurement_units') + '</span> <!--<label>Variant</label> - ' + response[0].get('unit_variant_name') + '--> </li> </ul> <h5 class=\"m-t-0 m-b-0 price text-primary\"> <span class=\"text-primary icon-rupee-icn\"></span>' + price + '</h5> <span>' + status + '</span> </div> </div>';\n        if (availability === 'available') {\n          html += '<a href=\"#unit-view/' + id + '\" class=\"view-unit\"> <div class=\"circle\"> <span class=\"arrow-up icon-chevron-right\"></span> </div> </a> </div>';\n        } else {\n          html += '</div>';\n        }\n        $('#' + id).attr('class', 'layer plot ' + availability);\n        $('#unit' + id).attr('class', 'bldg blocks active');\n        $('.units').mCustomScrollbar(\"scrollTo\", '#unit' + id);\n        return $('#' + id).tooltipster('content', html);\n      },\n      'mouseover .unassign': function(e) {\n        return $('.layer').tooltipster('hide');\n      },\n      'mouseover .amenity': function(e) {\n        var html;\n        html = '<div class=\"row\"> <div class=\"col-sm-12 b-r\"> <h4 class=\"text-warning margin-none\">' + $(e.currentTarget).attr('data-amenity-title') + '</h4> <h6 class=\"text-muted\">' + $(e.currentTarget).attr('data-amenity-desc') + '</h6> </div> </div>';\n        return $('.amenity').tooltipster('content', html);\n      },\n      'mouseover .building': function(e) {\n        var availability, buildingMaster, buildingModel, floors, html, id, minprice, price, response, unit, unitTypes, url;\n        html = \"\";\n        id = parseInt(e.currentTarget.id);\n        buildingModel = buildingCollection.findWhere({\n          'id': id\n        });\n        buildingMaster = buildingMasterCollection.findWhere({\n          'id': id\n        });\n        if (buildingModel === void 0 && buildingMaster !== void 0) {\n          html = '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\"> Not in selection </h5> </div>';\n          $('.layer').tooltipster('content', html);\n          return;\n        }\n        if (buildingModel === void 0) {\n          html = '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\"> Building details not entered </h5> </div>';\n          $('.layer').tooltipster('content', html);\n          return;\n        }\n        floors = buildingModel.get('no_of_floors');\n        unitTypes = building.getUnitTypes(id);\n        response = building.getUnitTypesCount(id, unitTypes);\n        minprice = building.getMinimumCost(id);\n        price = window.numDifferentiation(minprice);\n        unit = unitCollection.where({\n          'building_id': id,\n          'availability': 'available'\n        });\n        if (unit.length > 0) {\n          availability = ' available';\n        } else {\n          availability = ' sold';\n        }\n        html = '<div class=\"svg-info ' + availability + ' \"> <div class=\"action-bar\"> <div class=\"building\"></div> </div> <div class=\"pull-left\"> <h4 class=\"m-t-0 m-b-5\">' + buildingModel.get('building_name') + '\t<label class=\"text-muted\">(' + floors + ' floors)</label></h4> <div class=\"details\"> <div class=\"price\"> Starting from <span class=\"text-primary\"><span class=\"icon-rupee-icn\"></span> ' + price + '</span> </div> <ul class=\"bldg\">';\n        $.each(response, function(index, value) {\n          return html += '<li> <h5 class=\"m-t-0 m-b-0\">' + value.name + '</h5> <span>' + value.units + ' Available</span> </li>';\n        });\n        if (unit.length > 0) {\n          if (Object.keys(buildingModel.get('building_master')).length === 0) {\n            url = '/building/' + id + '/apartments';\n          } else {\n            url = '/building/' + id + '/master-view';\n          }\n          html += '</ul> </div> <a href=\"#' + url + '\" class=\"view-unit\"> <div class=\"circle\"> <span class=\"arrow-up icon-chevron-right\"></span> </div> </a>';\n        }\n        html += '</div></div>';\n        $('.layer').tooltipster('content', html);\n        $('#bldg' + id).attr('class', 'bldg blocks active');\n        $('.units').mCustomScrollbar(\"scrollTo\", '#bldg' + id);\n        return $('#' + id).attr('class', 'layer building active_bldg');\n      }\n    };\n\n    CenterMasterView.prototype.onShow = function() {\n      var breakpoints, first, svgs, that, transitionImages, windowHeight;\n      windowHeight = $(window).innerHeight() - 56;\n      $('.master').css('height', windowHeight);\n      $('.master').css('min-width', windowHeight * 2);\n      $('#spritespin').hide();\n      that = this;\n      transitionImages = [];\n      svgs = {};\n      breakpoints = project.get('breakpoints');\n      $.each(breakpoints, function(index, value) {\n        return svgs[value] = BASEURL + '/projects/' + PROJECTID + '/master/master-' + value + '.svg';\n      });\n      first = _.values(svgs);\n      $.merge(transitionImages, project.get('project_master'));\n      $('.first_image').attr('src', transitionImages[breakpoints[0]]);\n      return $('.first_image').load(function() {\n        return $('.region').load(first[0], function() {\n          var response;\n          $('#svg_loader').addClass('hidden');\n          that.iniTooltip();\n          CommonFloor.applyAvailabilClasses();\n          CommonFloor.randomClass();\n          CommonFloor.applyFliterClass();\n          that.loadZoom();\n          $('#trig').removeClass('hidden');\n          $('.svg-maps').removeClass('hidden');\n          response = project.checkRotationView();\n          $('.first_image').first().css('width', that.ui.svgContainer.width());\n          $('.unassign').attr('style', \"opacity: 0;fill-opacity: 0;\");\n          if (response === 1) {\n            $('#rotate_loader').removeClass('hidden');\n            return that.initializeRotate(transitionImages, svgs);\n          }\n        }).addClass('active').removeClass('inactive');\n      });\n    };\n\n    CenterMasterView.prototype.setDetailIndex = function(index) {\n      $('.region').empty();\n      $('.region').addClass('inactive').removeClass('active');\n      this.currentBreakPoint = index;\n      if (this.currentBreakPoint < 0) {\n        this.currentBreakPoint = this.breakPoints.length - 1;\n      }\n      if (this.currentBreakPoint >= this.breakPoints.length) {\n        this.currentBreakPoint = 0;\n      }\n      return api.playTo(this.breakPoints[this.currentBreakPoint], {\n        nearest: true\n      });\n    };\n\n    CenterMasterView.prototype.initializeRotate = function(transitionImages, svgs) {\n      var frames, spin, that, width;\n      frames = transitionImages;\n      this.breakPoints = project.get('breakpoints');\n      this.currentBreakPoint = 0;\n      width = this.ui.svgContainer.width();\n      $('.svg-maps > div').first().removeClass('inactive').addClass('active').css('width', width);\n      spin = $('#spritespin');\n      spin.spritespin({\n        source: frames,\n        width: this.ui.svgContainer.width(),\n        sense: -1,\n        height: this.ui.svgContainer.width() / 2,\n        animate: false\n      });\n      that = this;\n      api = spin.spritespin(\"api\");\n      spin.bind(\"onFrame\", function() {\n        var data, url;\n        data = api.data;\n        data.frame;\n        if (data.frame === data.stopFrame) {\n          url = svgs[data.frame];\n          return $('.region').load(url, function() {\n            that.iniTooltip();\n            CommonFloor.applyAvailabilClasses();\n            CommonFloor.randomClass();\n            CommonFloor.applyFliterClass();\n            that.loadZoom();\n            return $('.unassign').attr('style', \"opacity: 0;fill-opacity: 0;\");\n          }).addClass('active').removeClass('inactive');\n        }\n      });\n      return spin.bind(\"onLoad\", function() {\n        var first, response, url;\n        first = _.values(svgs);\n        url = first[0];\n        $('#trig').removeClass('hidden');\n        response = project.checkRotationView();\n        if (response === 1) {\n          $('.first_image').remove();\n          $('.rotate').removeClass('hidden');\n          $('#spritespin').show();\n          $('#rotate_loader').addClass('hidden');\n        }\n        return $('.region').load(url, function() {\n          that.iniTooltip();\n          CommonFloor.applyAvailabilClasses();\n          that.loadZoom();\n          CommonFloor.randomClass();\n          CommonFloor.applyFliterClass();\n          $('.unassign').attr('style', \"opacity: 0;fill-opacity: 0;\");\n          return $('.svg-maps svg').css('height', width / 2);\n        }).addClass('active').removeClass('inactive');\n      });\n    };\n\n    CenterMasterView.prototype.iniTooltip = function() {\n      $('.layer').tooltipster({\n        theme: 'tooltipster-shadow',\n        contentAsHTML: true,\n        onlyOne: true,\n        arrow: false,\n        offsetX: 50,\n        offsetY: -10,\n        interactive: true,\n        trigger: 'hover',\n        functionReady: function(e) {\n          return $('.view-unit').on('click', function(e) {\n            $('.layer').tooltipster('hide');\n            $('svg').attr('class', 'zoom');\n            $('#spritespin').addClass('zoom');\n            $('.us-right-content').addClass('fadeOut');\n            return $('.cf-loader').removeClass('hidden');\n          });\n        }\n      });\n      return $('.amenity').tooltipster({\n        theme: 'tooltipster-shadow marker-tooltip',\n        contentAsHTML: true,\n        onlyOne: true,\n        arrow: false,\n        trigger: 'hover'\n      });\n    };\n\n    CenterMasterView.prototype.loadZoom = function() {\n      $('.master').panzoom({\n        contain: 'invert',\n        minScale: 1,\n        maxScale: 2.4,\n        increment: 0.4,\n        $zoomIn: $('.zoom-in'),\n        $zoomOut: $('.zoom-out')\n      });\n      return $('.master polygon').on('mousedown touchstart', function(e) {\n        return e.stopImmediatePropagation();\n      });\n    };\n\n    return CenterMasterView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.CenterMasterCtrl = (function(superClass) {\n    extend(CenterMasterCtrl, superClass);\n\n    function CenterMasterCtrl() {\n      return CenterMasterCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    CenterMasterCtrl.prototype.initialize = function() {\n      return this.show(new CommonFloor.CenterMasterView({\n        model: project\n      }));\n    };\n\n    return CenterMasterCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/project-master-view/project.master.controller.js.map","(function() {\n  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  CommonFloor.FilterMsterView = (function(superClass) {\n    extend(FilterMsterView, superClass);\n\n    function FilterMsterView() {\n      return FilterMsterView.__super__.constructor.apply(this, arguments);\n    }\n\n    FilterMsterView.prototype.template = Handlebars.compile('<a href=\"javascript:void(0)\" class=\"text-primary filters-clear clear\">Clear Filters </a> <button class=\"btn btn-primary filter-button filter-toggle\" type=\"button\"> <span class=\"icon\"></span> </button> <div class=\"filters-wrapper\"> <div class=\"filters-content\"> <div class=\"property_type clearfix\"> <h6 class=\"\">PROPERTY TYPE</h6> <div class=\"filter-chkbox-block\"> {{#types}} <div class=\"-lbl \"> <input type=\"checkbox\" class=\"custom-chckbx addCft types {{name}}\" id=\"{{id}}\" value=\"{{type}}\" data-value=\"{{name}}\"\" > <label for=\"{{id}}\" class=\"-lbl  \"> {{type}} <span class=\"arrow-right desktop\"></span> </label> <span class=\"arrow-right mobile\"></span> </div> {{/types}} </div> </div> <div class=\"viewLabel\"> <h6 class=\"\">VIEWS</h6> <div class=\"filter-chkbox-block\"> {{#views}} <input type=\"checkbox\" class=\"custom-chckbx addCft views \" id=\"{{id}}\" value=\"{{id}}\"  > <label for=\"{{id}}\" class=\"-lbl  \">{{name}}</label> {{/views}} </div> </div> <div class=\"facingLabel\"> <h6 class=\"\">FACINGS</h6> <div class=\"filter-chkbox-block\"> {{#facings}} <input type=\"checkbox\" class=\"custom-chckbx addCft facings \" id=\"{{id}}\" value=\"{{id}}\"  > <label for=\"{{id}}\" class=\"-lbl  \">{{name}}</label> {{/facings}} </div> </div> <div class=\"areaLabel\"> <h6 class=\"\">AREA ({{measurement_units}})</h6> <div class=\"range-container\"> <input type=\"text\" id=\"area\" name=\"area\" value=\"\" /> </div>                     </div> <div class=\"budgetLabel\"> <h6 class=\"\">BUDGET ( <span class=\"icon-rupee-icn\"></span> )</h6> <div class=\"range-container\"> <input type=\"text\" id=\"budget\" name=\"budget\" value=\"\" /> </div>                     </div> <div class=\"\"> <h6 class=\"availability\">AVAILABILITY</h6> <div class=\"filter-chkbox-block\"> <input type=\"checkbox\" name=\"available\"  class=\"custom-chckbx addCft status\" id=\"available\" value=\"available\"> <label for=\"available\" class=\"-lbl\">Show Available Units Only</label> </div>                     </div> </div> </div> <!--<div class=\"filters-bottom\"> <a href=\"#\">+ More Filters</a> </div>--> </div> <div class=\"filters-wrapper-hover  filters-wrapper villa-wrapper\"> <div class=\"arrow-left\"> </div> <button class=\"btn btn-primary filter-button back_btn\" type=\"button\"> <span class=\"icon\"></span> Back </button> {{#villas}} <div class=\"villa_unitTypes\"> <h6 class=\"unit_type_filter\">UNIT TYPE</h6> <div class=\"filter-chkbox-block\"> {{#unitTypes}} <input type=\"checkbox\" class=\"custom-chckbx addCft unit_types\" id=\"unit_type{{id}}\" value=\"unit_type{{id}}\" value=\"1\" data-value={{id}} data-type=\"villa\"> <label for=\"unit_type{{id}}\" class=\"-lbl\">{{name}}</label> {{/unitTypes}} </div> </div> <div class=\"villa_unitVariantNames\"> <h6 class=\"unit_type_filter\">UNIT VARIANTS</h6> <div class=\"filter-chkbox-block\"> {{#unitVariantNames}} <input type=\"checkbox\" class=\"custom-chckbx addCft variant_names\" id=\"varinat_name{{id}}\" value=\"varinat_name{{id}}\" value=\"1\" data-value={{id}} data-type=\"villa\" > <label for=\"varinat_name{{id}}\" class=\"-lbl\">{{name}}</label> {{/unitVariantNames}} </div> </div> {{#flooring}} <div class=\"\"> <h6 class=\"unit_type_filter\">{{label}}</h6> <div class=\"filter-chkbox-block\"> {{#value}} <input type=\"checkbox\" class=\"custom-chckbx addCft {{classname}}\" id=\"{{id}}\" value=\"{{id}}\" value=\"1\" data-value=\"{{name}}\" data-index=\"{{index}}\" data-type=\"villa\" > <label for=\"{{id}}\" class=\"-lbl\">{{name}}</label> {{/value}} </div> </div> {{/flooring}} {{/villas}}</div> <div class=\"filters-wrapper-hover  filters-wrapper apartment-wrapper\"> <div class=\"arrow-left\"> </div> <button class=\"btn btn-primary filter-button back_btn\" type=\"button\"> <span class=\"icon\"></span> Back </button> {{#apartments}} <div class=\"apartment_unitTypes\"> <h6 class=\"unit_type_filter\">UNIT TYPE</h6> <div class=\"filter-chkbox-block\"> {{#unitTypes}} <input type=\"checkbox\" class=\"custom-chckbx addCft unit_types\" id=\"unit_type{{id}}\" value=\"unit_type{{id}}\" value=\"1\" data-value={{id}}  data-type=\"apartment\"> <label for=\"unit_type{{id}}\" class=\"-lbl\">{{name}}</label> {{/unitTypes}} </div> </div> <div class=\"apartment_unitVariantNames\"> <h6 class=\"unit_type_filter\">UNIT VARIANTS</h6> <div class=\"filter-chkbox-block\"> {{#unitVariantNames}} <input type=\"checkbox\" class=\"custom-chckbx addCft variant_names\" id=\"varinat_name{{id}}\" value=\"varinat_name{{id}}\" value=\"1\" data-value={{id}} data-type=\"apartment\"> <label for=\"varinat_name{{id}}\" class=\"-lbl\">{{name}}</label> {{/unitVariantNames}} </div> </div> {{#flooring}} <div class=\"\"> <h6 class=\"unit_type_filter\">{{label}}</h6> <div class=\"filter-chkbox-block\"> {{#value}} <input type=\"checkbox\" class=\"custom-chckbx addCft {{classname}}\" id=\"{{id}}\" value=\"{{id}}\" value=\"1\" data-value=\"{{name}}\" data-index=\"{{index}}\" data-type=\"apartment\" > <label for=\"{{id}}\" class=\"-lbl\">{{name}}</label> {{/value}} </div> </div> {{/flooring}} {{/apartments}}</div> <div class=\"filters-wrapper-hover  filters-wrapper plot-wrapper\"> <div class=\"arrow-left\"> </div> <button class=\"btn btn-primary filter-button back_btn\" type=\"button\"> <span class=\"icon\"></span> Back </button> {{#plots}} <div class=\"plot_unitTypes\"> <h6 class=\"unit_type_filter\">UNIT TYPE</h6> <div class=\"filter-chkbox-block\"> {{#unitTypes}} <input type=\"checkbox\" class=\"custom-chckbx addCft unit_types\" id=\"unit_type{{id}}\" value=\"unit_type{{id}}\" value=\"1\" data-value={{id}} data-type=\"plot\"> <label for=\"unit_type{{id}}\" class=\"-lbl\">{{name}}</label> {{/unitTypes}} </div> </div> <div class=\"plot_unitVariantNames\"> <h6 class=\"unit_type_filter\">UNIT VARIANTS</h6> <div class=\"filter-chkbox-block\"> {{#unitVariantNames}} <input type=\"checkbox\" class=\"custom-chckbx addCft variant_names\" id=\"varinat_name{{id}}\" value=\"varinat_name{{id}}\" value=\"1\" data-value={{id}} data-type=\"plot\"> <label for=\"varinat_name{{id}}\" class=\"-lbl\">{{name}}</label> {{/unitVariantNames}} </div> </div> {{#flooring}} <div class=\"\"> <h6 class=\"unit_type_filter\">{{label}}</h6> <div class=\"filter-chkbox-block\"> {{#value}} <input type=\"checkbox\" class=\"custom-chckbx addCft {{classname}}\" id=\"{{id}}\" value=\"{{id}}\" value=\"1\" data-value=\"{{name}}\" data-index=\"{{index}}\" data-type=\"plot\" > <label for=\"{{id}}\" class=\"-lbl\">{{name}}</label> {{/value}} </div> </div> {{/flooring}} {{/plots}}</div></div>');\n\n    FilterMsterView.prototype.ui = {\n      unitTypes: '.unit_types',\n      priceMin: '.price_min',\n      priceMax: '.price_max',\n      status: '.status',\n      apply: '.apply',\n      variantNames: '.variant_names',\n      area: '#area',\n      budget: '#budget',\n      types: '.types',\n      clear: '.clear',\n      flooring: '.attributes',\n      villa: '.villa',\n      apt: '.apartment',\n      plot: '.plot',\n      villaWrapper: '.villa-wrapper',\n      aptWrapper: '.apartment-wrapper',\n      plotWrapper: '.plot-wrapper',\n      villaCheck: '.villa-check',\n      aptCheck: '.apartment-check',\n      plotCheck: '.plot-check',\n      back_btn: '.back_btn',\n      back_btn: '.back_btn',\n      facings: '.facings',\n      views: '.views'\n    };\n\n    FilterMsterView.prototype.initialize = function() {\n      this.price = '';\n      return this.area = '';\n    };\n\n    FilterMsterView.prototype.events = {\n      'click @ui.clear': function(e) {\n        CommonFloor.defaults['type'] = \"\";\n        $.each(CommonFloor.defaults['villa'], function(index, value) {\n          CommonFloor.defaults['villa'][index] = \"\";\n          if (index === 'attributes') {\n            return CommonFloor.defaults['villa'][index] = {};\n          }\n        });\n        $.each(CommonFloor.defaults['apartment'], function(index, value) {\n          CommonFloor.defaults['apartment'][index] = \"\";\n          if (index === 'attributes') {\n            return CommonFloor.defaults['apartment'][index] = {};\n          }\n        });\n        $.each(CommonFloor.defaults['plot'], function(index, value) {\n          CommonFloor.defaults['plot'][index] = \"\";\n          if (index === 'attributes') {\n            return CommonFloor.defaults['plot'][index] = {};\n          }\n        });\n        $.each(CommonFloor.defaults['common'], function(index, value) {\n          return CommonFloor.defaults['common'][index] = \"\";\n        });\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterNew();\n        unitCollection.trigger('available');\n        this.loadSelectedFilters();\n        this.price = $(\"#budget\").data(\"ionRangeSlider\");\n        this.area = $(\"#area\").data(\"ionRangeSlider\");\n        this.price.destroy();\n        this.area.destroy();\n        return this.loadClearFilter();\n      },\n      'mouseover @ui.villaCheck,@ui.villaWrapper': function(e) {\n        return $(\".villa-wrapper\").addClass(\"visible\");\n      },\n      'mouseout @ui.villaCheck,@ui.villaWrapper': function(e) {\n        return $(\".villa-wrapper\").removeClass(\"visible\");\n      },\n      'mouseover @ui.aptCheck,@ui.aptWrapper': function(e) {\n        return $(\".apartment-wrapper\").addClass(\"visible\");\n      },\n      'mouseout @ui.aptCheck,@ui.aptWrapper': function(e) {\n        return $(\".apartment-wrapper\").removeClass(\"visible\");\n      },\n      'mouseover @ui.plotCheck,@ui.plotWrapper': function(e) {\n        return $(\".plot-wrapper\").addClass(\"visible\");\n      },\n      'mouseout @ui.plotCheck,@ui.plotWrapper': function(e) {\n        return $(\".plot-wrapper\").removeClass(\"visible\");\n      },\n      'click @ui.villa': function(e) {\n        var types;\n        types = [];\n        if (CommonFloor.defaults['type'] !== \"\") {\n          types = CommonFloor.defaults['type'].split(',');\n        }\n        if ($(e.currentTarget).is(':checked')) {\n          $(e.currentTarget).parent().addClass('villa-check');\n          $(e.currentTarget).parent().addClass(\"villa-btn\");\n          $('.villa-wrapper').addClass(\"visible\");\n          types.push($(e.currentTarget).attr('data-value'));\n        } else {\n          $(e.currentTarget).parent().removeClass('villa-check');\n          $(e.currentTarget).parent().removeClass('villa-btn');\n          $('.villa-wrapper').removeClass('visible');\n          types = _.without(types, $(e.currentTarget).attr('data-value'));\n        }\n        types = _.uniq(types);\n        CommonFloor.defaults['type'] = types.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        this.loadSelectedFilters();\n        CommonFloor.filterNew();\n        return unitCollection.trigger('available');\n      },\n      'click @ui.apt': function(e) {\n        var types;\n        types = [];\n        if (CommonFloor.defaults['type'] !== \"\") {\n          types = CommonFloor.defaults['type'].split(',');\n        }\n        if ($(e.currentTarget).is(':checked')) {\n          $(e.currentTarget).parent().addClass('apartment-check');\n          $(e.currentTarget).parent().addClass(\"apartment-btn\");\n          $('.apartment-wrapper').addClass(\"visible\");\n          types.push($(e.currentTarget).attr('data-value'));\n        } else {\n          $(e.currentTarget).parent().removeClass('apartment-check');\n          $(e.currentTarget).parent().removeClass('apartment-btn');\n          $('.apartment-wrapper').removeClass('visible');\n          types = _.without(types, $(e.currentTarget).attr('data-value'));\n        }\n        types = _.uniq(types);\n        CommonFloor.defaults['type'] = types.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        this.loadSelectedFilters();\n        CommonFloor.filterNew();\n        return unitCollection.trigger('available');\n      },\n      'click @ui.plot': function(e) {\n        var types;\n        types = [];\n        if (CommonFloor.defaults['type'] !== \"\") {\n          types = CommonFloor.defaults['type'].split(',');\n        }\n        if ($(e.currentTarget).is(':checked')) {\n          $(e.currentTarget).parent().addClass('plot-check');\n          $(e.currentTarget).parent().addClass(\"plot-btn\");\n          $('.plot-wrapper').addClass(\"visible\");\n          types.push($(e.currentTarget).attr('data-value'));\n        } else {\n          $(e.currentTarget).parent().removeClass('plot-check');\n          $(e.currentTarget).parent().removeClass('plot-btn');\n          $('.plot-wrapper').removeClass('visible');\n          types = _.without(types, $(e.currentTarget).attr('data-value'));\n        }\n        types = _.uniq(types);\n        CommonFloor.defaults['type'] = types.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        this.loadSelectedFilters();\n        CommonFloor.filterNew();\n        return unitCollection.trigger('available');\n      },\n      'click @ui.unitTypes': function(e) {\n        var type, types;\n        types = [];\n        type = $(e.currentTarget).attr('data-type');\n        if (CommonFloor.defaults[type]['unit_type_id'] !== \"\") {\n          types = CommonFloor.defaults[type]['unit_type_id'].split(',');\n          types = types.map(function(item) {\n            return parseInt(item);\n          });\n        }\n        if ($(e.currentTarget).is(':checked')) {\n          types.push(parseInt($(e.currentTarget).attr('data-value')));\n        } else {\n          types = _.without(types, parseInt($(e.currentTarget).attr('data-value')));\n        }\n        types = _.uniq(types);\n        CommonFloor.defaults[type]['unit_type_id'] = types.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterNew();\n        return unitCollection.trigger('available');\n      },\n      'click @ui.variantNames': function(e) {\n        var type, types;\n        types = [];\n        type = $(e.currentTarget).attr('data-type');\n        if (CommonFloor.defaults[type]['unit_variant_id'] !== \"\") {\n          types = CommonFloor.defaults[type]['unit_variant_id'].split(',');\n          types = types.map(function(item) {\n            return parseInt(item);\n          });\n        }\n        if ($(e.currentTarget).is(':checked')) {\n          types.push(parseInt($(e.currentTarget).attr('data-value')));\n        } else {\n          types = _.without(types, parseInt($(e.currentTarget).attr('data-value')));\n        }\n        types = _.uniq(types);\n        CommonFloor.defaults[type]['unit_variant_id'] = types.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterNew();\n        return unitCollection.trigger('available');\n      },\n      'click @ui.status': function(e) {\n        if ($(e.currentTarget).is(':checked')) {\n          CommonFloor.defaults['common']['availability'] = e.currentTarget.id;\n        } else {\n          CommonFloor.defaults['common']['availability'] = \"\";\n        }\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterNew();\n        return unitCollection.trigger('available');\n      },\n      'change @ui.area': function(e) {\n        CommonFloor.defaults['common']['area_max'] = parseFloat($(e.target).val().split(';')[1]);\n        CommonFloor.defaults['common']['area_min'] = parseFloat($(e.target).val().split(';')[0]);\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterNew();\n        return unitCollection.trigger('available');\n      },\n      'change @ui.budget': function(e) {\n        CommonFloor.defaults['common']['price_max'] = parseFloat($(e.target).val().split(';')[1]);\n        CommonFloor.defaults['common']['price_min'] = parseFloat($(e.target).val().split(';')[0]);\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterNew();\n        return unitCollection.trigger('available');\n      },\n      'click @ui.views': function(e) {\n        var types;\n        types = [];\n        if (CommonFloor.defaults['common']['views'] !== \"\") {\n          types = CommonFloor.defaults['common']['views'].split(',');\n        }\n        if ($(e.currentTarget).is(':checked')) {\n          types.push($(e.currentTarget).val());\n        } else {\n          types = _.without(types, $(e.currentTarget).val());\n        }\n        types = _.uniq(types);\n        CommonFloor.defaults['common']['views'] = types.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterNew();\n        return unitCollection.trigger('available');\n      },\n      'click @ui.facings': function(e) {\n        var types;\n        types = [];\n        if (CommonFloor.defaults['common']['facings'] !== \"\") {\n          types = CommonFloor.defaults['common']['facings'].split(',');\n        }\n        if ($(e.currentTarget).is(':checked')) {\n          types.push($(e.currentTarget).val());\n        } else {\n          types = _.without(types, $(e.currentTarget).val());\n        }\n        types = _.uniq(types);\n        CommonFloor.defaults['common']['facings'] = types.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterNew();\n        return unitCollection.trigger('available');\n      },\n      'click @ui.flooring': function(e) {\n        var index, type, types;\n        types = [];\n        type = $(e.currentTarget).attr('data-type');\n        index = $(e.currentTarget).attr('data-index');\n        if (!_.has(CommonFloor.defaults[type]['attributes'], index)) {\n          CommonFloor.defaults[type]['attributes'][index] = '';\n        }\n        if (CommonFloor.defaults[type]['attributes'][index] !== \"\") {\n          types = CommonFloor.defaults[type]['attributes'][index].split(',');\n        }\n        if ($(e.currentTarget).is(':checked')) {\n          types.push($(e.currentTarget).attr('data-value'));\n        } else {\n          types = _.without(types, $(e.currentTarget).attr('data-value'));\n        }\n        types = _.uniq(types);\n        CommonFloor.defaults[type]['attributes'][index] = types.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterNew();\n        return unitCollection.trigger('available');\n      },\n      'click .filter-toggle': function(e) {\n        return $('.fliters-container').toggleClass('closed');\n      },\n      'click .back_btn': function(e) {\n        return $('.filters-wrapper-hover').removeClass('visible');\n      }\n    };\n\n    FilterMsterView.prototype.villaFilters = function() {\n      var area, budget, id, unitsArr, unittypesArray, unittypesColl;\n      budget = [];\n      area = [];\n      id = [];\n      unitsArr = [];\n      unittypesColl = _.pluck(unitTypeCollection.toArray(), 'id');\n      unittypesArray = unittypesColl.map(function(item) {\n        return parseInt(item);\n      });\n      $.merge(unitsArr, plotVariantCollection.getPlotUnits());\n      $.merge(unitsArr, apartmentVariantCollection.getApartmentUnits());\n      $.merge(unitsArr, bunglowVariantCollection.getBunglowUnits());\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        budget.push(parseFloat(unitDetails[3]));\n        area.push(parseFloat(unitDetails[0].get('super_built_up_area')));\n        return id.push(parseInt(unitDetails[0].get('id')));\n      });\n      $(this.ui.unitTypes).each(function(ind, item) {\n        $('#' + item.id).attr('disabled', false);\n        $('#' + item.id).attr('checked', false);\n        if ($.inArray(parseInt($(item).attr('data-value')), unittypesArray) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', true);\n        }\n      });\n      return $(this.ui.variantNames).each(function(ind, item) {\n        $('#' + item.id).attr('checked', false);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray(parseInt($(item).attr('data-value')), id) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', true);\n        }\n      });\n    };\n\n    FilterMsterView.prototype.apartmentFilters = function() {\n      var area, budget, id, unitsArr, unittypesArray, unittypesColl;\n      budget = [];\n      area = [];\n      id = [];\n      unitsArr = [];\n      unittypesColl = _.pluck(unitTypeCollection.toArray(), 'id');\n      unittypesArray = unittypesColl.map(function(item) {\n        return parseInt(item);\n      });\n      $.merge(unitsArr, plotVariantCollection.getPlotUnits());\n      $.merge(unitsArr, apartmentVariantCollection.getApartmentUnits());\n      $.merge(unitsArr, bunglowVariantCollection.getBunglowUnits());\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        budget.push(parseFloat(unitDetails[3]));\n        area.push(parseFloat(unitDetails[0].get('super_built_up_area')));\n        return id.push(parseInt(unitDetails[0].get('id')));\n      });\n      $(this.ui.unitTypes).each(function(ind, item) {\n        $('#' + item.id).attr('checked', false);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray(parseInt($(item).attr('data-value')), unittypesArray) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', true);\n        }\n      });\n      return $(this.ui.variantNames).each(function(ind, item) {\n        $('#' + item.id).attr('checked', false);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray(parseInt($(item).attr('data-value')), id) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', true);\n        }\n      });\n    };\n\n    FilterMsterView.prototype.plotFilters = function() {\n      var area, budget, id, unitsArr, unittypesArray, unittypesColl;\n      budget = [];\n      area = [];\n      id = [];\n      unitsArr = [];\n      unittypesColl = _.pluck(unitTypeCollection.toArray(), 'id');\n      unittypesArray = unittypesColl.map(function(item) {\n        return parseInt(item);\n      });\n      $.merge(unitsArr, plotVariantCollection.getPlotUnits());\n      $.merge(unitsArr, apartmentVariantCollection.getApartmentUnits());\n      $.merge(unitsArr, bunglowVariantCollection.getBunglowUnits());\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        budget.push(parseFloat(unitDetails[3]));\n        area.push(parseFloat(unitDetails[0].get('super_built_up_area')));\n        return id.push(parseInt(unitDetails[0].get('id')));\n      });\n      $(this.ui.unitTypes).each(function(ind, item) {\n        $('#' + item.id).attr('checked', false);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray(parseInt($(item).attr('data-value')), unittypesArray) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', true);\n        }\n      });\n      return $(this.ui.variantNames).each(function(ind, item) {\n        $('#' + item.id).attr('checked', false);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray(parseInt($(item).attr('data-value')), id) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', true);\n        }\n      });\n    };\n\n    FilterMsterView.prototype.serializeData = function() {\n      var data;\n      data = FilterMsterView.__super__.serializeData.call(this);\n      data.villas = Marionette.getOption(this, 'villas');\n      data.unitVariants = Marionette.getOption(this, 'unitVariants');\n      data.apartments = Marionette.getOption(this, 'apartments');\n      data.plots = Marionette.getOption(this, 'plots');\n      data.types = Marionette.getOption(this, 'types');\n      data.views = Marionette.getOption(this, 'views');\n      data.facings = Marionette.getOption(this, 'facings');\n      return data;\n    };\n\n    FilterMsterView.prototype.onShow = function() {\n      var area, budget, max, min, priceMax, priceMin, sub, subArea, subBudget, types;\n      this.hideLabels();\n      $('.filters-content').mCustomScrollbar({\n        theme: 'cf-scroll'\n      });\n      $('.filters-wrapper-hover').mCustomScrollbar({\n        theme: 'cf-scroll'\n      });\n      budget = [];\n      area = [];\n      $.each(unitMasterCollection.toArray(), function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        budget.push(parseFloat(unitDetails[3]));\n        return area.push(parseFloat(unitDetails[0].get('super_built_up_area')));\n      });\n      min = _.min(area);\n      max = _.max(area);\n      subArea = (max - min) / 20;\n      subArea = subArea.toFixed(0);\n      sub = subArea % 5;\n      subArea = subArea - sub;\n      if (CommonFloor.defaults['common']['area_min'] !== \"\") {\n        $(\"#area\").ionRangeSlider({\n          type: \"double\",\n          min: min,\n          max: max,\n          from: CommonFloor.defaults['common']['area_min']\n        }, {\n          to: CommonFloor.defaults['common']['area_max']\n        }, {\n          step: subArea,\n          grid: false\n        });\n      } else {\n        $(\"#area\").ionRangeSlider({\n          type: \"double\",\n          min: min,\n          max: max,\n          step: subArea,\n          grid: false\n        });\n      }\n      priceMin = _.min(budget);\n      priceMax = _.max(budget);\n      subBudget = (priceMax - priceMin) / 20;\n      subBudget = subBudget.toFixed(0);\n      if (CommonFloor.defaults['common']['price_min'] !== \"\") {\n        $(\"#budget\").ionRangeSlider({\n          type: \"double\",\n          min: priceMin,\n          max: priceMax,\n          from: CommonFloor.defaults['common']['price_min'],\n          to: CommonFloor.defaults['common']['price_max'],\n          grid: false,\n          step: subBudget,\n          prettify: function(num) {\n            return window.numDifferentiation(num);\n          }\n        });\n      } else {\n        $(\"#budget\").ionRangeSlider({\n          type: \"double\",\n          min: priceMin,\n          max: priceMax,\n          grid: false,\n          step: subBudget,\n          prettify: function(num) {\n            return window.numDifferentiation(num);\n          }\n        });\n      }\n      types = Marionette.getOption(this, 'types');\n      return this.loadSelectedFilters();\n    };\n\n    FilterMsterView.prototype.hideLabels = function() {\n      var apartments, budget, facings, plots, types, unitVariants, views, villas;\n      villas = Marionette.getOption(this, 'villas');\n      apartments = Marionette.getOption(this, 'apartments');\n      plots = Marionette.getOption(this, 'plots');\n      views = Marionette.getOption(this, 'views');\n      facings = Marionette.getOption(this, 'facings');\n      budget = Marionette.getOption(this, 'budget');\n      unitVariants = Marionette.getOption(this, 'unitVariants');\n      types = Marionette.getOption(this, 'types');\n      $.each(villas[0], function(index, value) {\n        if (value.length === 0) {\n          return $('.villa_' + index).hide();\n        }\n      });\n      $.each(apartments[0], function(index, value) {\n        if (value.length === 0) {\n          return $('.apartment_' + index).hide();\n        }\n      });\n      $.each(plots[0], function(index, value) {\n        if (value.length === 0) {\n          return $('.plot_' + index).hide();\n        }\n      });\n      if (views.length === 0) {\n        $('.viewLabel').hide();\n      }\n      if (facings.length === 0) {\n        $('.facingLabel').hide();\n      }\n      if (budget.length === 0) {\n        $('.budgetLabel').hide();\n      }\n      if (unitVariants.length === 0) {\n        $('.areaLabel').hide();\n      }\n      if (types.length === 0) {\n        return $('.property_type').hide();\n      }\n    };\n\n    FilterMsterView.prototype.loadClearFilter = function() {\n      var area, budget, max, min, priceMax, priceMin, sub, subArea, subBudget, submax, submin;\n      budget = [];\n      area = [];\n      $.each(unitMasterCollection.toArray(), function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        budget.push(parseFloat(unitDetails[3]));\n        return area.push(parseFloat(unitDetails[0].get('super_built_up_area')));\n      });\n      min = _.min(area);\n      submin = min % 5;\n      min = min - submin;\n      max = _.max(area);\n      submax = max % 5;\n      max = max - submax;\n      subArea = (max - min) / 20;\n      subArea = subArea.toFixed(0);\n      sub = subArea % 5;\n      subArea = subArea - sub;\n      priceMin = _.min(budget);\n      priceMax = _.max(budget);\n      subBudget = (priceMax - priceMin) / 20;\n      subBudget = subBudget.toFixed(0);\n      $('#area').val(min + \";\" + max);\n      $('#budget').val(priceMin + \";\" + priceMax);\n      $(\"#area\").ionRangeSlider({\n        type: \"double\",\n        min: min,\n        max: max,\n        step: subArea,\n        grid: false\n      });\n      $(\"#budget\").ionRangeSlider({\n        type: \"double\",\n        min: priceMin,\n        max: priceMax,\n        grid: false,\n        step: subBudget,\n        prettify: function(num) {\n          return window.numDifferentiation(num);\n        }\n      });\n      $(this.ui.villa).parent().removeClass('villa-check');\n      $(this.ui.villa).parent().removeClass('villa-wrapper');\n      $(this.ui.villa).parent().removeClass('villa-btn');\n      $(this.ui.apt).parent().removeClass('apartment-check');\n      $(this.ui.apt).parent().removeClass('apartment-wrapper');\n      $(this.ui.apt).parent().removeClass('apartment-btn');\n      $(this.ui.plot).parent().removeClass('plot-check');\n      $(this.ui.plot).parent().removeClass('plot-wrapper');\n      return $(this.ui.plotplot).parent().removeClass('plot-btn');\n    };\n\n    FilterMsterView.prototype.loadSelectedFilters = function() {\n      var aptValues, attributes, facings, id, plotValues, pt_types, types, typesArray, unitTypes, unitVariants, unitVariantsArray, unitsArr, unittypesArray, unittypesColl, views, villValues;\n      types = [];\n      pt_types = Marionette.getOption(this, 'types');\n      types = CommonFloor.defaults['type'].split(',');\n      if (pt_types.length === 1) {\n        types.push(pt_types[0].type);\n      }\n      unittypesArray = [];\n      unitTypes = [];\n      $.merge(unitTypes, CommonFloor.defaults['villa']['unit_type_id'].split(','));\n      $.merge(unitTypes, CommonFloor.defaults['apartment']['unit_type_id'].split(','));\n      $.merge(unitTypes, CommonFloor.defaults['plot']['unit_type_id'].split(','));\n      unitVariantsArray = [];\n      unitVariants = [];\n      $.merge(unitVariants, CommonFloor.defaults['villa']['unit_variant_id'].split(','));\n      $.merge(unitVariants, CommonFloor.defaults['apartment']['unit_variant_id'].split(','));\n      $.merge(unitVariants, CommonFloor.defaults['plot']['unit_variant_id'].split(','));\n      attributes = [];\n      villValues = _.values(CommonFloor.defaults['villa']['attributes']);\n      aptValues = _.values(CommonFloor.defaults['apartment']['attributes']);\n      plotValues = _.values(CommonFloor.defaults['plot']['attributes']);\n      $.merge(attributes, villValues);\n      $.merge(attributes, aptValues);\n      $.merge(attributes, plotValues);\n      views = [];\n      $.merge(views, CommonFloor.defaults['common']['views'].split(','));\n      facings = [];\n      $.merge(facings, CommonFloor.defaults['common']['facings'].split(','));\n      typesArray = [];\n      id = [];\n      unitsArr = [];\n      unittypesColl = [];\n      $.each(types, function(index, value) {\n        if (value === 'Villas') {\n          $.merge(unitsArr, bunglowVariantMasterCollection.getBunglowMasterUnits());\n        }\n        if (value === 'Apartments/Penthouse') {\n          $.merge(unitsArr, apartmentVariantMasterCollection.getApartmentMasterUnits());\n        }\n        if (value === 'Plots') {\n          $.merge(unitsArr, plotVariantMasterCollection.getPlotMasterUnits());\n        }\n        if (value === \"\") {\n          $.merge(unitsArr, bunglowVariantMasterCollection.getBunglowUnits());\n          $.merge(unitsArr, apartmentVariantMasterCollection.getApartmentUnits());\n          return $.merge(unitsArr, plotVariantMasterCollection.getPlotUnits());\n        }\n      });\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        id.push(parseInt(unitDetails[0].get('id')));\n        return unittypesColl.push(parseFloat(unitDetails[1].get('id')));\n      });\n      unittypesColl = _.uniq(unittypesColl);\n      $(this.ui.unitTypes).each(function(ind, item) {\n        $('#' + item.id).prop('checked', true);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray($(item).attr('data-value'), unitTypes) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', false);\n        }\n      });\n      $(this.ui.variantNames).each(function(ind, item) {\n        $('#' + item.id).prop('checked', true);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray($(item).attr('data-value'), unitVariants) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', false);\n        }\n      });\n      $(this.ui.types).each(function(ind, item) {\n        var type;\n        $('#' + item.id).prop('checked', true);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray($('#' + item.id).attr('data-value'), types) === -1) {\n          return $('#' + item.id).prop('checked', false);\n        } else {\n          type = $('#' + item.id).attr('data-value');\n          $('#' + item.id).parent().addClass(type + '-check');\n          return $('#' + item.id).parent().addClass(type + '-btn');\n        }\n      });\n      $(this.ui.flooring).each(function(ind, item) {\n        $('#' + item.id).prop('checked', true);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray($(item).attr('data-value'), attributes) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', false);\n        }\n      });\n      $(this.ui.views).each(function(ind, item) {\n        $('#' + item.id).prop('checked', true);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray($(item).val(), views) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', false);\n        }\n      });\n      $(this.ui.facings).each(function(ind, item) {\n        $('#' + item.id).prop('checked', true);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray($(item).val(), facings) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', false);\n        }\n      });\n      this.ui.status.prop('checked', false);\n      if (CommonFloor.defaults['common']['availability'] !== \"\") {\n        return this.ui.status.prop('checked', true);\n      }\n    };\n\n    return FilterMsterView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.FilterMasterCtrl = (function(superClass) {\n    extend(FilterMasterCtrl, superClass);\n\n    function FilterMasterCtrl() {\n      return FilterMasterCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    FilterMasterCtrl.prototype.initialize = function() {\n      var apartmentFilters, budget, data, facings, plotFilters, types, unitVariants, view, views, viewsFacingsArr, villaFilters;\n      unitVariants = [];\n      budget = [];\n      views = [];\n      facings = [];\n      villaFilters = this.getVillaFilters();\n      if (villaFilters.length !== 0) {\n        $.merge(unitVariants, villaFilters[0].unitVariants);\n        $.merge(budget, villaFilters[0].budget);\n      }\n      apartmentFilters = this.getApartmentFilters();\n      if (apartmentFilters.length !== 0) {\n        $.merge(unitVariants, apartmentFilters[0].unitVariants);\n        $.merge(budget, apartmentFilters[0].budget);\n      }\n      plotFilters = this.getPlotFilters();\n      if (plotFilters.length !== 0) {\n        $.merge(unitVariants, plotFilters[0].unitVariants);\n        $.merge(budget, plotFilters[0].budget);\n      }\n      if ($.inArray('budget', project.get('filters').defaults) === -1 || _.isUndefined(project.get('filters').defaults)) {\n        budget = [];\n      }\n      if ($.inArray('area', project.get('filters').defaults) === -1 || _.isUndefined(project.get('filters').defaults)) {\n        unitVariants = [];\n      }\n      viewsFacingsArr = this.getViewsFacings();\n      views = viewsFacingsArr[0];\n      facings = viewsFacingsArr[1];\n      data = CommonFloor.masterPropertyTypes();\n      types = $.grep(data, function(e) {\n        if (_.has(project.get('filters'), s.capitalize(e.name)) && e.count.length > 0) {\n          return e;\n        }\n      });\n      $.each(types, function(index, value) {\n        value['id'] = value.type;\n        if (value.type === 'Apartments') {\n          value.type = 'Apartments/Penthouse';\n          value.type_name = '(A)/(PH)';\n          return value['id'] = 'Apartments';\n        }\n      });\n      this.view = view = new CommonFloor.FilterMsterView({\n        model: project,\n        'villas': villaFilters,\n        'unitVariants': _.uniq(unitVariants),\n        'apartments': apartmentFilters,\n        'budget': budget,\n        'types': types,\n        'plots': plotFilters,\n        'views': views,\n        'facings': facings\n      });\n      return this.show(this.view);\n    };\n\n    FilterMasterCtrl.prototype.getVillaFilters = function() {\n      var budget, filters, flooring, flooringAttributes, newtemp, temp, unitTypes, unitVariantNames, unitVariants, unit_types, unitsArr;\n      filters = [];\n      unitTypes = [];\n      unit_types = [];\n      unitVariants = [];\n      unitVariantNames = [];\n      flooringAttributes = [];\n      budget = [];\n      flooring = [];\n      temp = [];\n      newtemp = [];\n      bunglowVariantMasterCollection.each(function(item) {\n        var unitTypeModel, units;\n        units = unitMasterCollection.where({\n          'unit_variant_id': item.get('id')\n        });\n        if (units.length !== 0) {\n          unitTypeModel = unitTypeMasterCollection.findWhere({\n            'id': item.get('unit_type_id')\n          });\n          if ($.inArray(item.get('unit_type_id'), unit_types) === -1) {\n            unit_types.push(parseInt(unitTypeModel.get('id')));\n            unitTypes.push({\n              'id': unitTypeModel.get('id'),\n              'name': unitTypeModel.get('name'),\n              'type': 'V'\n            });\n          }\n          unitVariants.push(item.get('super_built_up_area'));\n          return unitVariantNames.push({\n            'id': item.get('id'),\n            'name': item.get('unit_variant_name'),\n            'type': 'V'\n          });\n        }\n      });\n      if (!_.isUndefined(project.get('filters').Villa)) {\n        $.each(project.get('filters').Villa, function(index, value) {\n          if (value !== 'unitTypes' && value !== 'unitVariantNames') {\n            temp = [];\n            flooring = [];\n            bunglowVariantMasterCollection.each(function(item) {\n              var units;\n              units = unitMasterCollection.where({\n                'unit_variant_id': item.get('id')\n              });\n              if (units.length !== 0) {\n                return $.each(item.get('variant_attributes'), function(ind, val) {\n                  if (ind === value && val !== \"\") {\n                    if (_.isArray(val)) {\n                      return $.each(val, function(ind1, val1) {\n                        if ($.inArray(val1, flooring) === -1) {\n                          flooring.push(val1);\n                          return temp.push({\n                            'name': val1,\n                            'index': value,\n                            'id': 'villa' + s.replaceAll(val1, \" \", \"_\"),\n                            'dataId': s.replaceAll(val1, \" \", \"_\"),\n                            'classname': 'attributes',\n                            'label': ind,\n                            type: 'V'\n                          });\n                        }\n                      });\n                    } else {\n                      if ($.inArray(val, flooring) === -1) {\n                        flooring.push(val);\n                        return temp.push({\n                          'name': val,\n                          'index': value,\n                          'id': 'villa' + s.replaceAll(val, \" \", \"_\"),\n                          'dataId': s.replaceAll(val, \" \", \"_\"),\n                          'classname': 'attributes',\n                          'label': ind,\n                          type: 'V'\n                        });\n                      }\n                    }\n                  }\n                });\n              }\n            });\n            if (temp.length !== 0) {\n              return newtemp.push({\n                'label': value.toUpperCase(),\n                'value': temp,\n                'index': value\n              });\n            }\n          }\n        });\n        unitsArr = bunglowVariantMasterCollection.getBunglowMasterUnits();\n        $.each(unitsArr, function(index, value) {\n          var unitDetails;\n          unitDetails = window.unit.getUnitDetails(value.id);\n          return budget.push(parseFloat(unitDetails[3]));\n        });\n      }\n      filters.push({\n        'unitTypes': unitTypes,\n        'unitVariants': unitVariants,\n        'unitVariantNames': unitVariantNames,\n        'flooring': newtemp,\n        'budget': budget\n      });\n      $.each(filters[0], function(index, value) {\n        if ($.inArray(index, project.get('filters').Villa) === -1 && index !== 'budget' && index !== 'unitVariants' && index !== 'flooring') {\n          filters[0][index] = [];\n        }\n        if (index === 'flooring') {\n          return $.each(value, function(ind, val) {\n            if ($.inArray(val.index, project.get('filters').Villa) === -1) {\n              return value[ind] = [];\n            }\n          });\n        }\n      });\n      return filters;\n    };\n\n    FilterMasterCtrl.prototype.getApartmentFilters = function() {\n      var budget, filters, flooring, flooringAttributes, newtemp, temp, unitTypes, unitVariantNames, unitVariants, unit_types, unitsArr;\n      filters = [];\n      unitTypes = [];\n      unit_types = [];\n      unitVariants = [];\n      unitVariantNames = [];\n      budget = [];\n      flooringAttributes = [];\n      flooring = [];\n      temp = [];\n      newtemp = [];\n      apartmentVariantMasterCollection.each(function(item) {\n        var type, unitTypeModel, units;\n        units = unitMasterCollection.where({\n          'unit_variant_id': item.get('id')\n        });\n        if (units.length !== 0) {\n          unitTypeModel = unitTypeMasterCollection.findWhere({\n            'id': item.get('unit_type_id')\n          });\n          type = 'A';\n          if (window.propertyTypes[unitTypeModel.get('property_type_id')] === 'Penthouses') {\n            type = 'PH';\n          }\n          if ($.inArray(item.get('unit_type_id'), unit_types) === -1) {\n            unit_types.push(parseInt(unitTypeModel.get('id')));\n            unitTypes.push({\n              'id': unitTypeModel.get('id'),\n              'name': unitTypeModel.get('name'),\n              'type': type\n            });\n          }\n          unitVariants.push(item.get('super_built_up_area'));\n          return unitVariantNames.push({\n            'id': item.get('id'),\n            'name': item.get('unit_variant_name'),\n            'type': type\n          });\n        }\n      });\n      if (!_.isUndefined(project.get('filters').Apartment)) {\n        $.each(project.get('filters').Apartment, function(index, value) {\n          if (value !== 'unitTypes' && value !== 'unitVariantNames') {\n            temp = [];\n            flooring = [];\n            apartmentVariantMasterCollection.each(function(item) {\n              var units;\n              units = unitMasterCollection.where({\n                'unit_variant_id': item.get('id')\n              });\n              if (units.length !== 0) {\n                return $.each(item.get('variant_attributes'), function(ind, val) {\n                  if (ind === value && val !== \"\") {\n                    if (_.isArray(val)) {\n                      return $.each(val, function(ind1, val1) {\n                        if ($.inArray(val1, flooring) === -1) {\n                          flooring.push(val1);\n                          return temp.push({\n                            'name': val1,\n                            'index': value,\n                            'id': 'apt' + s.replaceAll(val1, \" \", \"_\"),\n                            'dataId': s.replaceAll(val1, \" \", \"_\"),\n                            'classname': 'attributes',\n                            'label': ind,\n                            type: 'A'\n                          });\n                        }\n                      });\n                    } else {\n                      if ($.inArray(val, flooring) === -1) {\n                        flooring.push(val);\n                        return temp.push({\n                          'name': val,\n                          'index': value,\n                          'id': 'apt' + s.replaceAll(val, \" \", \"_\"),\n                          'dataId': s.replaceAll(val, \" \", \"_\"),\n                          'classname': 'attributes',\n                          'label': ind,\n                          type: 'A'\n                        });\n                      }\n                    }\n                  }\n                });\n              }\n            });\n            if (temp.length !== 0) {\n              return newtemp.push({\n                'label': value.toUpperCase(),\n                'value': temp,\n                'index': value\n              });\n            }\n          }\n        });\n      }\n      unitsArr = apartmentVariantMasterCollection.getApartmentMasterUnits();\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        return budget.push(parseFloat(unitDetails[3]));\n      });\n      filters.push({\n        'unitTypes': unitTypes,\n        'unitVariants': unitVariants,\n        'unitVariantNames': unitVariantNames,\n        'flooring': newtemp,\n        'budget': budget\n      });\n      $.each(filters[0], function(index, value) {\n        if ($.inArray(index, project.get('filters').Apartment) === -1 && index !== 'budget' && index !== 'unitVariants' && index !== 'flooring') {\n          filters[0][index] = [];\n        }\n        if (index === 'flooring') {\n          return $.each(value, function(ind, val) {\n            if ($.inArray(val.index, project.get('filters').Apartment) === -1) {\n              return filters[0][index] = [];\n            }\n          });\n        }\n      });\n      return filters;\n    };\n\n    FilterMasterCtrl.prototype.getPlotFilters = function() {\n      var budget, filters, flooring, flooringAttributes, newtemp, temp, unitTypes, unitVariantNames, unitVariants, unit_types, unitsArr;\n      filters = [];\n      unitTypes = [];\n      unit_types = [];\n      unitVariants = [];\n      unitVariantNames = [];\n      flooringAttributes = [];\n      budget = [];\n      flooring = [];\n      temp = [];\n      newtemp = [];\n      plotVariantMasterCollection.each(function(item) {\n        var unitTypeModel, units;\n        units = unitMasterCollection.where({\n          'unit_variant_id': item.get('id')\n        });\n        if (units.length !== 0) {\n          unitTypeModel = unitTypeMasterCollection.findWhere({\n            'id': item.get('unit_type_id')\n          });\n          if ($.inArray(item.get('unit_type_id'), unit_types) === -1) {\n            unit_types.push(parseInt(unitTypeModel.get('id')));\n            unitTypes.push({\n              'id': unitTypeModel.get('id'),\n              'name': unitTypeModel.get('name'),\n              'type': 'P'\n            });\n          }\n          unitVariants.push(item.get('size'));\n          return unitVariantNames.push({\n            'id': item.get('id'),\n            'name': item.get('unit_variant_name'),\n            'type': 'P'\n          });\n        }\n      });\n      if (!_.isUndefined(project.get('filters').Plot)) {\n        $.each(project.get('filters').Plot, function(index, value) {\n          if (value !== 'unitTypes' && value !== 'unitVariantNames') {\n            temp = [];\n            flooring = [];\n            plotVariantMasterCollection.each(function(item) {\n              var units;\n              units = unitMasterCollection.where({\n                'unit_variant_id': item.get('id')\n              });\n              if (units.length !== 0) {\n                return $.each(item.get('variant_attributes'), function(ind, val) {\n                  if (ind === value && val !== \"\") {\n                    if (_.isArray(val)) {\n                      return $.each(val, function(ind1, val1) {\n                        if ($.inArray(val1, flooring) === -1) {\n                          flooring.push(val1);\n                          return temp.push({\n                            'name': val1,\n                            'index': value,\n                            'id': 'plot' + s.replaceAll(val1, \" \", \"_\"),\n                            'dataId': s.replaceAll(val1, \" \", \"_\"),\n                            'classname': 'attributes',\n                            'label': ind,\n                            type: 'P'\n                          });\n                        }\n                      });\n                    } else {\n                      if ($.inArray(val, flooring) === -1) {\n                        flooring.push(val);\n                        return temp.push({\n                          'name': val,\n                          'index': value,\n                          'id': 'plot' + s.replaceAll(val, \" \", \"_\"),\n                          'dataId': s.replaceAll(val, \" \", \"_\"),\n                          'classname': 'attributes',\n                          'label': ind,\n                          type: 'P'\n                        });\n                      }\n                    }\n                  }\n                });\n              }\n            });\n            if (temp.length !== 0) {\n              return newtemp.push({\n                'label': value.toUpperCase(),\n                'value': temp,\n                'index': value\n              });\n            }\n          }\n        });\n      }\n      unitsArr = plotVariantMasterCollection.getPlotMasterUnits();\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        return budget.push(parseFloat(unitDetails[3]));\n      });\n      filters.push({\n        'unitTypes': unitTypes,\n        'unitVariants': unitVariants,\n        'unitVariantNames': unitVariantNames,\n        'flooring': newtemp,\n        'budget': budget\n      });\n      $.each(filters[0], function(index, value) {\n        if ($.inArray(index, project.get('filters').Plot) === -1 && index !== 'budget' && index !== 'unitVariants' && index !== 'flooring') {\n          filters[0][index] = [];\n        }\n        if (index === 'flooring') {\n          return $.each(value, function(ind, val) {\n            if ($.inArray(val.index, project.get('filters').Plot) === -1) {\n              return value[ind] = [];\n            }\n          });\n        }\n      });\n      return filters;\n    };\n\n    FilterMasterCtrl.prototype.getViewsFacings = function() {\n      var facings, facingsArr, viewArr, views;\n      views = [];\n      viewArr = [];\n      facingsArr = [];\n      _.each(unitCollection.toArray(), function(item) {\n        return $.merge(views, item.get('views'));\n      });\n      views = _.uniq(views);\n      views = views.sort();\n      $.each(views, function(ind, val) {\n        return viewArr.push({\n          'id': val,\n          'name': val\n        });\n      });\n      facings = ['North', 'South', 'East', 'West', 'North-East', 'North-West', 'South-East', 'South-West'];\n      $.each(facings, function(ind, val) {\n        return facingsArr.push({\n          'id': val,\n          'name': val\n        });\n      });\n      if ($.inArray('views', project.get('filters').defaults) === -1 || _.isUndefined(project.get('filters').defaults)) {\n        viewArr = [];\n      }\n      if ($.inArray('direction', project.get('filters').defaults) === -1 || _.isUndefined(project.get('filters').defaults)) {\n        facingsArr = [];\n      }\n      return [viewArr, facingsArr];\n    };\n\n    return FilterMasterCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/project-master-view/project.master.filter.controller.js.map","(function() {\n  var CenterUnitView, LeftUnitView, TopUnitView,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  CommonFloor.UnitView = (function(superClass) {\n    extend(UnitView, superClass);\n\n    function UnitView() {\n      return UnitView.__super__.constructor.apply(this, arguments);\n    }\n\n    UnitView.prototype.template = '#unit-view-template';\n\n    return UnitView;\n\n  })(Marionette.LayoutView);\n\n  CommonFloor.UnitCtrl = (function(superClass) {\n    extend(UnitCtrl, superClass);\n\n    function UnitCtrl() {\n      return UnitCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    UnitCtrl.prototype.initialize = function() {\n      if (jQuery.isEmptyObject(project.toJSON())) {\n        project.setProjectAttributes(PROJECTID);\n        CommonFloor.loadJSONData();\n      }\n      if (bunglowVariantMasterCollection.length === 0 && apartmentVariantMasterCollection.length === 0 && plotVariantMasterCollection.length === 0) {\n        return this.show(new CommonFloor.NothingFoundView);\n      } else {\n        return this.show(new CommonFloor.UnitView);\n      }\n    };\n\n    return UnitCtrl;\n\n  })(Marionette.RegionController);\n\n  TopUnitView = (function(superClass) {\n    extend(TopUnitView, superClass);\n\n    function TopUnitView() {\n      return TopUnitView.__super__.constructor.apply(this, arguments);\n    }\n\n    TopUnitView.prototype.template = Handlebars.compile('<div class=\"container-fluid animated fadeIn\"> <div class=\"row\"> <div class=\"col-md-12 col-xs-12 col-sm-12\"> <div class=\"breadcrumb-bar\"> <a class=\"unit_back\" href=\"#\"></a> </div> <div class=\"header-info\"> <h2 class=\"pull-left proj-name\">{{project_title}} - {{unit_name}}</h2> </div> <div class=\"pull-right\"> <form action=\"{{bookingPortalUrl}}\" method=\"POST\"> <input type=\"hidden\" value = \"{{id}}\" name=\"unit_id\"> <button type=\"submit\" class=\"btn btn-primary cf-btn-primary\">Book Now - &#8377; {{unitBookingAmount}}</button> </form> </div> <div class=\"clearfix\"></div> </div> </div> </div>');\n\n    TopUnitView.prototype.ui = {\n      unitBack: '.unit_back'\n    };\n\n    TopUnitView.prototype.serializeData = function() {\n      var data, response, unit, unitid, url;\n      data = TopUnitView.__super__.serializeData.call(this);\n      url = Backbone.history.fragment;\n      unitid = parseInt(url.split('/')[1]);\n      response = window.unit.getUnitDetails(unitid);\n      unit = unitCollection.findWhere({\n        id: unitid\n      });\n      data.project_title = project.get('project_title');\n      data.unitBookingAmount = window.numDifferentiation(unit.get('booking_amount'));\n      data.bookingPortalUrl = window.bookingPortalUrl;\n      return data;\n    };\n\n    TopUnitView.prototype.events = function() {\n      return {\n        'click @ui.unitBack': function(e) {\n          var buildingModel, building_id, previousRoute, property, unit, unitType, unitid, url;\n          e.preventDefault();\n          previousRoute = CommonFloor.router.previous();\n          url = Backbone.history.fragment;\n          unitid = parseInt(url.split('/')[1]);\n          unit = unitCollection.findWhere({\n            id: unitid\n          });\n          unitType = unitTypeMasterCollection.findWhere({\n            'id': unit.get('unit_type_id')\n          });\n          property = window.propertyTypes[unitType.get('property_type_id')];\n          if (s.decapitalize(property) === 'penthouses' || s.decapitalize(property) === 'apartments') {\n            buildingModel = buildingCollection.findWhere({\n              'id': unit.get('building_id')\n            });\n            building_id = buildingModel.get('id');\n            if (Object.keys(buildingModel.get('building_master')).length === 0) {\n              return CommonFloor.navigate('/building/' + building_id + '/apartments', true);\n            } else {\n              return CommonFloor.navigate('/building/' + building_id + '/master-view', true);\n            }\n          } else {\n            if (Object.keys(project.get('project_master')).length === 0) {\n              return CommonFloor.navigate('/list-view', true);\n            } else {\n              return CommonFloor.navigate('/master-view', true);\n            }\n          }\n        }\n      };\n    };\n\n    return TopUnitView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.TopUnitCtrl = (function(superClass) {\n    extend(TopUnitCtrl, superClass);\n\n    function TopUnitCtrl() {\n      return TopUnitCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    TopUnitCtrl.prototype.initialize = function() {\n      var response, unit, unitid, url;\n      url = Backbone.history.fragment;\n      unitid = parseInt(url.split('/')[1]);\n      unit = unitCollection.findWhere({\n        id: unitid\n      });\n      response = window.unit.getUnitDetails(unitid);\n      unit.set('type', s.capitalize(response[2]));\n      return this.show(new TopUnitView({\n        model: unit\n      }));\n    };\n\n    return TopUnitCtrl;\n\n  })(Marionette.RegionController);\n\n  LeftUnitView = (function(superClass) {\n    extend(LeftUnitView, superClass);\n\n    function LeftUnitView() {\n      return LeftUnitView.__super__.constructor.apply(this, arguments);\n    }\n\n    LeftUnitView.prototype.template = Handlebars.compile('<div class=\"col-md-4 col-lg-3 col-xs-12 col-sm-12 search-left-content animated fadeIn\"> <div class=\"unit-details\"> <div class=\"row detail-list\"> <div class=\"col-sm-6 col-xs-6 text-center\"> <span class=\"facts-icon icon-total-units\"></span> <div class=\"unit-label m-t-10\"> <h3>{{unit_variant}}</h3> <h6 class=\"text-muted\">Unit Variant</h6> </div> </div> <div class=\"col-sm-6 col-xs-6 text-center\"> <span class=\"facts-icon icon-BHKtype\"></span> <div class=\"unit-label m-t-10\"> <h3>{{type}}</h3> <h6 class=\"text-muted\">Unit Type</h6> </div> </div> </div> <div class=\"row detail-list\"> <div class=\"col-sm-6 col-xs-6 text-center\"> <span class=\"facts-icon icon-BHK-area-2\"></span> <div class=\"unit-label m-t-10\"> <h3>{{area}} {{measurement_units}}</h3> <h6 class=\"text-muted\">Area</h6> </div> </div> <div class=\"col-sm-6 col-xs-6 text-center\"> <span class=\"facts-icon icon-rupee-icn\"></span> <div class=\"unit-label m-t-10\"> <h3 class=\"price\">{{price}}</h3> <h6 class=\"text-muted\">Price</h6> </div> </div> </div> <div class=\"advncd-filter-wrp\"> <div class=\"blck-wrap title-row\"> <h5 class=\"bold property {{classname}}\">{{property_type}}</h5> </div> {{#attributes}} <div class=\"row\"> <div class=\"col-sm-12\"> <h6><span class=\"text-muted\">{{attribute}}:</span> {{value}}</h6> </div> </div> {{/attributes}} </div> <div class=\" title-row\"> <div class=\"panel-group\" id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\"> {{#levels}} <div class=\"panel panel-default\"> <div class=\"panel-heading\" role=\"tab\" id=\"headingTwo\"> <a class=\"accordion-toggle collapsed text-primary panel-title m-b-5 block\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#{{id}}\" aria-expanded=\"false\" > <h4 class=\"inline-block\"> {{level_name}} </h4> </a> </div> <div id=\"{{id}}\" class=\"panel-collapse collapse collapseLevel\" role=\"tabpanel\" aria-labelledby=\"headingTwo\"> <div class=\"panel-body\"> {{#rooms}} <div class=\"room-attr\"> <div class=\"m-b-15\"> <h5 class=\"m-b-5\">{{room_name}}</h5> {{#attributes}} <div class=\"\"><span>{{attribute}}</span>: {{value}}</div> {{/attributes}} </div> </div> {{/rooms}} </div> </div> </div> {{/levels}} </div> </div> </div> <div class=\"clearfix\"></div> <div class=\"similar-section\"> <h5 class=\"bold m-b-15\">{{similarUnitsText}}</h5> {{#similarUnits}} <div class=\"m-b-15 clearfix\"> <div class=\"sim-icon\"> <div class=\"alert \"> <i class=\"{{type}}-ico\"></i> </div> </div> <div class=\"sim-details\"> <h5><a href=\"' + BASEURL + '/project/' + PROJECTID + '/#unit-view/{{id}}\">{{unit_name}}</a> </h5> {{unit_type}} ({{area}} {{units}})<br> {{variant}}<br> <span class=\"text-primary\"><span class=\"icon-rupee-icn\"></span>{{price}}</span> </div> </div> {{/similarUnits}} </div> </div> </div>');\n\n    LeftUnitView.prototype.serializeData = function() {\n      var attributes, data, floor, response, similarUnits, temp, unit, unitid, url;\n      data = LeftUnitView.__super__.serializeData.call(this);\n      url = Backbone.history.fragment;\n      unitid = parseInt(url.split('/')[1]);\n      response = window.unit.getUnitDetails(unitid);\n      unit = unitCollection.findWhere({\n        id: unitid\n      });\n      floor = response[0].get('floor');\n      attributes = [];\n      if (response[2] === 'apartment' || response[2] === 'Penthouse') {\n        attributes.push({\n          'attribute': 'Floor',\n          'value': unit.get('floor')\n        });\n      }\n      if (response[4] !== null) {\n        $.each(response[4], function(index, value) {\n          return attributes.push({\n            'attribute': s.capitalize(index),\n            'value': value\n          });\n        });\n      }\n      similarUnits = this.getSimilarUnits(unit);\n      temp = [];\n      $.each(similarUnits[0], function(index, value) {\n        var res;\n        res = window.unit.getUnitDetails(value.get('id'));\n        return temp.push({\n          'unit_name': value.get('unit_name'),\n          'unit_type': res[1].get('name'),\n          'price': window.numDifferentiation(res[3]),\n          'area': res[0].get('super_built_up_area'),\n          'variant': res[0].get('unit_variant_name'),\n          'id': value.get('id'),\n          'type': similarUnits[2],\n          'units': project.get('measurement_units')\n        });\n      });\n      data.area = response[0].get('super_built_up_area');\n      data.type = response[1].get('name');\n      data.unit_variant = response[0].get('unit_variant_name');\n      data.levels = this.generateLevels(floor, response, unit);\n      data.attributes = attributes;\n      data.similarUnits = temp;\n      data.similarUnitsText = similarUnits[1];\n      data.measurement_units = project.get('measurement_units');\n      data.property_type = s.capitalize(response[2] + ' Attribute(s)');\n      data.classname = 'hidden';\n      data.unitSellingAmount = Marionette.getOption(this, 'unitSellingAmount');\n      if (attributes.length !== 0) {\n        data.classname = '';\n      }\n      return data;\n    };\n\n    LeftUnitView.prototype.getSimilarUnits = function(unit) {\n      var i, text, unitColl, unitModel, unitid, units, unitsArr, url;\n      units = [];\n      i = 0;\n      url = Backbone.history.fragment;\n      unitid = parseInt(url.split('/')[1]);\n      unitModel = unitMasterCollection.findWhere({\n        'id': unitid\n      });\n      unitColl = CommonFloor.getUnitsProperty(unitModel);\n      unitsArr = unitColl[0];\n      text = unitColl[1];\n      $.each(unitsArr.toArray(), function(index, value) {\n        if (value.get('id') !== unitid && value.get('availability') === 'available') {\n          units.push(value);\n          i++;\n        }\n        if (i === 3) {\n          return false;\n        }\n      });\n      if (unitsArr.length === 1) {\n        text = '';\n      }\n      if (units.length === 0) {\n        text = '';\n      }\n      return [units, text, unitColl[2]];\n    };\n\n    LeftUnitView.prototype.generateLevels = function(floor, response, unit) {\n      var levels;\n      levels = [];\n      $.each(floor, function(index, value) {\n        var level_id, level_name, rooms;\n        rooms = [];\n        level_name = 'Level  ' + index;\n        if (response[2] === 'apartment') {\n          level_name = 'Room details';\n        }\n        $.each(value.rooms_data, function(ind, val) {\n          var attributes;\n          attributes = [];\n          $.each(val.atributes, function(ind_att, val_att) {\n            if (val_att.attribute_value !== \"\") {\n              return attributes.push({\n                'attribute': s.capitalize(val_att.attribute_key),\n                'value': val_att.attribute_value\n              });\n            }\n          });\n          return rooms.push({\n            'room_name': val.room_name,\n            'attributes': attributes\n          });\n        });\n        if (rooms.length > 0) {\n          level_id = s.replaceAll(level_name, \" \", \"_\");\n          return levels.push({\n            'level_name': level_name,\n            'rooms': rooms,\n            'id': level_id\n          });\n        }\n      });\n      return levels;\n    };\n\n    LeftUnitView.prototype.onShow = function() {\n      var response, unitModel, unitid, url;\n      url = Backbone.history.fragment;\n      unitid = parseInt(url.split('/')[1]);\n      response = window.unit.getUnitDetails(unitid);\n      unitModel = unitMasterCollection.findWhere({\n        'id': unitid\n      });\n      $('.price').text(window.numDifferentiation(unitModel.get('selling_amount')));\n      if (response[2] === 'apartment') {\n        return $('.collapseLevel').collapse('show');\n      }\n    };\n\n    return LeftUnitView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.LeftUnitCtrl = (function(superClass) {\n    extend(LeftUnitCtrl, superClass);\n\n    function LeftUnitCtrl() {\n      return LeftUnitCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    LeftUnitCtrl.prototype.initialize = function() {\n      var unitid, url;\n      url = Backbone.history.fragment;\n      unitid = parseInt(url.split('/')[1]);\n      return this.show(new LeftUnitView);\n    };\n\n    return LeftUnitCtrl;\n\n  })(Marionette.RegionController);\n\n  CenterUnitView = (function(superClass) {\n    extend(CenterUnitView, superClass);\n\n    function CenterUnitView() {\n      return CenterUnitView.__super__.constructor.apply(this, arguments);\n    }\n\n    CenterUnitView.prototype.template = Handlebars.compile('<div class=\"col-md-8 col-lg-9 col-sm-12 col-xs-12 us-right-content single-unit unit-slides animated fadeIn\"> <div class=\"\"> <div class=\"liquid-slider slider\" id=\"slider-id\"> <div class=\"ls-wrapper ls-responsive\"> <div class=\"ls-nav\"> <ul> <li class=\"external \"> <h4 class=\"title\">External 3D</h4> </li> <li class=\"twoD\"> <h4 class=\"title\">2D Layout</h4> </li> <li class=\"threeD\"> <h4 class=\"title\">3D Layout</h4> </li> <li class=\"gallery\"> <h4 class=\"title\">Gallery</h4> </li> <li class=\"master hidden\"> <h4 class=\"title\">Position</h4> </li> <li class=\"booking\"> <h4 class=\"title\">Payment Plan</h4> </li> </ul> </div> <div class=\"price-mode-dropdown hidden\"> <div class=\"plan-select form-inline\"> <!--h5 class=\"inline-block\">Payment Plan: </h5--> <select class=\"form-control\" id=\"paymentplan\"> <option value=\"payment_plan_breakdown\"> Payment Plan Breakdown </option> <option value=\"price_breakup\"> Price Breakup </option> </select> </div> <div class=\"plan-amount text-right\"> <h5 class=\"inline-block\">Total Sale Value: </h5> <h4 class=\"inline-block bold text-primary\"><span class=\"rec\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> {{totalSaleValue}}</span></h4> </div> <div class=\"clearfix\"></div> </div> </div> <div class=\"liquid-slider slider\"> <div class=\"panel-wrapper\"> <div class=\"level \"> <img class=\"firstimage animated fadeIn img-responsive\" src=\"\"/> <div class=\"images animated fadeIn text-center\"> </div> </div> </div> </div> <div class=\"single-unit\"> <div class=\"prev\"></div> <div class=\"next\"></div> </div> </div> </div> </div>');\n\n    CenterUnitView.prototype.ui = {\n      imagesContainer: '.us-right-content'\n    };\n\n    CenterUnitView.prototype.serializeData = function() {\n      var data, id, unit, unitPaymentPlan, url;\n      data = CenterUnitView.__super__.serializeData.call(this);\n      url = Backbone.history.fragment;\n      id = url.split('/')[1];\n      unit = unitCollection.findWhere({\n        'id': parseInt(id)\n      });\n      unitPaymentPlan = Marionette.getOption(this, 'unitPaymentPlan');\n      data.totalSaleValue = window.numDifferentiation(unit.get('selling_amount'));\n      return data;\n    };\n\n    CenterUnitView.prototype.events = {\n      'click .threeD': function(e) {\n        var html, response;\n        $('.price-mode-dropdown').addClass('hidden');\n        $('.firstimage').hide();\n        $('.images').empty();\n        response = this.generateLevels();\n        html = '';\n        $.each(response[1], function(index, value) {\n          return html += '<div class=\"layouts animated fadeIn\"> <a class=\"fancybox\" rel=\"3d\" href=\"' + value + '\" title=\"' + s.replaceAll(response[2][index], \"_\", \" \") + '\"> <img class=\"img\" data-src=\"' + value + '\" /> <div class=\"img-overlay\"></div> <span>' + s.replaceAll(response[2][index], \"_\", \" \") + '</span> </a> </div>';\n        });\n        $('.images').html(html);\n        $('.img').lazyLoadXT({\n          forceLoad: true,\n          updateEvent: 'load',\n          oncomplete: function() {\n            $('.img').removeClass(\"lazy-hidden\");\n            return $('.img').addClass(\"lazy-loaded\");\n          }\n        });\n        $('.price-mode-dropdown').addClass('hidden');\n        $('.threeD').addClass('current');\n        $('.external').removeClass('current');\n        $('.twoD').removeClass('current');\n        $('.gallery').removeClass('current');\n        $('.master').removeClass('current');\n        return $('.booking').removeClass('current');\n      },\n      'click .twoD': function(e) {\n        var html, response;\n        $('.price-mode-dropdown').addClass('hidden');\n        $('.firstimage').hide();\n        $('.images').empty();\n        response = this.generateLevels();\n        html = '';\n        $.each(response[0], function(index, value) {\n          return html += '<div class=\"layouts animated fadeIn\"> <a class=\"fancybox\" rel=\"2d\" href=\"' + value + '\" title=\"' + s.replaceAll(response[2][index], \"_\", \" \") + '\"> <img class=\"img\" data-src=\"' + value + '\" /> <div class=\"img-overlay\"></div> <span>' + s.replaceAll(response[2][index], \"_\", \" \") + '</span> </a> </div>';\n        });\n        $('.images').html(html);\n        $('.img').lazyLoadXT({\n          forceLoad: true,\n          updateEvent: 'load',\n          oncomplete: function() {\n            $('.img').removeClass(\"lazy-hidden\");\n            return $('.img').addClass(\"lazy-loaded\");\n          }\n        });\n        $('.price-mode-dropdown').addClass('hidden');\n        $('.twoD').addClass('current');\n        $('.external').removeClass('current');\n        $('.threeD').removeClass('current');\n        $('.gallery').removeClass('current');\n        $('.master').removeClass('current');\n        return $('.booking').removeClass('current');\n      },\n      'click .external': function(e) {\n        var html, response;\n        $('.price-mode-dropdown').addClass('hidden');\n        $('.firstimage').hide();\n        $('.images').empty();\n        response = this.generateLevels();\n        html = '';\n        html += '<div class=\"external-wrapper\"> <div id=\"rotate_loader\" class=\"img-loader\"> <div class=\"square\" ></div> <div class=\"square\"></div> <div class=\"square last\"></div> <div class=\"square clear\"></div> <div class=\"square\"></div> <div class=\"square last\"></div> <div class=\"square clear\"></div> <div class=\"square \"></div> <div class=\"square last\"></div> </div> <div class=\"animated fadeIn hidden external-container\"> <img class=\"img-responsive external-img\" src=\"' + response[3].get('external3durl') + '\" /> </div> </div>';\n        $('.images').html(html);\n        $('#rotate_loader').removeClass('hidden');\n        $('.external-img').load(function() {\n          $('#rotate_loader').addClass('hidden');\n          return $('.external-container').removeClass('hidden');\n        });\n        $('.price-mode-dropdown').addClass('hidden');\n        $('.external').addClass('current');\n        $('.threeD').removeClass('current');\n        $('.twoD').removeClass('current');\n        $('.gallery').removeClass('current');\n        $('.master').removeClass('current');\n        return $('.booking').removeClass('current');\n      },\n      'click .gallery': function(e) {\n        var html, response;\n        $('.price-mode-dropdown').addClass('hidden');\n        $('.images').empty();\n        $('.firstimage').hide();\n        response = this.generateLevels();\n        html = '';\n        $.each(response[3].get('galleryurl'), function(index, value) {\n          return html += '<div class=\"animated fadeIn gallery-img\"> <a class=\"fancybox\" rel=\"gall\" href=\"' + value + '\"> <img class=\"img\" data-src=\"' + value + '\" /> </a> </div>';\n        });\n        $('.images').html(html);\n        $('.img').lazyLoadXT({\n          forceLoad: true,\n          updateEvent: 'load',\n          oncomplete: function() {\n            $('.img').removeClass(\"lazy-hidden\");\n            return $('.img').addClass(\"lazy-loaded\");\n          }\n        });\n        $('.price-mode-dropdown').addClass('hidden');\n        $('.gallery').addClass('current');\n        $('.threeD').removeClass('current');\n        $('.twoD').removeClass('current');\n        $('.external').removeClass('current');\n        $('.master').removeClass('current');\n        return $('.booking').removeClass('current');\n      },\n      'click .master': function(e) {\n        $('.price-mode-dropdown').addClass('hidden');\n        $('.firstimage').show();\n        $('.images').empty();\n        this.loadMaster();\n        $('.master').addClass('current');\n        $('.gallery').removeClass('current');\n        $('.threeD').removeClass('current');\n        $('.twoD').removeClass('current');\n        $('.external').removeClass('current');\n        return $('.booking').removeClass('current');\n      },\n      'change #paymentplan': function(e) {\n        var html, selectedMode, unitPaymentPlan, unitPlanMilestones, unitPriceSheet, unitPriceSheetComponents, unitTotalSaleValue;\n        selectedMode = $('#paymentplan').val();\n        $('.price-mode-dropdown').removeClass('hidden');\n        unitPaymentPlan = Marionette.getOption(this, 'unitPaymentPlan');\n        unitPriceSheet = Marionette.getOption(this, 'unitPriceSheet');\n        $('.images').empty();\n        $('.firstimage').hide();\n        html = '';\n        html += '<div class=\"invoice-items animated fadeIn\"> <ul id=\"paymentTable\">';\n        if (selectedMode === \"payment_plan_breakdown\") {\n          if (!unitPaymentPlan) {\n            html += \"No Data Found\";\n          } else {\n            unitPlanMilestones = unitPaymentPlan.milestones;\n            unitTotalSaleValue = unitPaymentPlan.total_sale_value;\n            _.each(unitPlanMilestones, function(milestone, key) {\n              var amount, perc;\n              perc = window.calculatePerc(milestone.amount, unitTotalSaleValue);\n              amount = window.numDifferentiation(milestone.amount);\n              return html += '<li class=\"milestonePercent\"> <span class=\"msPercent\">' + perc + '%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\">' + milestone.milestone + '</div> <div class=\"msVal\"> <div> <span class=\"label\">Cost Type:</span> <span class= \"percentageValue10 label\"  data-d-group= \"2\" data-m-dec=\"\"> ' + milestone.cost_type + '</span> </div> <div> <span class=\"label\">Due Date:</span> <span class= \"service10 label\"  data-d-group=\"2\" data-m-dec=\"\"> ' + milestone.milestone_date + '</span> </div> <div> Total Amount: <span class=\"total10\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> ' + amount + '</span> </div> </div><span class=\"barBg\" style=\"width:' + perc + '%\"></span> </li> <div class=\"clearfix\"></div>';\n            });\n          }\n        } else if (selectedMode === \"price_breakup\") {\n          if (!unitPriceSheet) {\n            html += \"No Data Found\";\n          } else {\n            unitPriceSheetComponents = unitPriceSheet.components;\n            unitTotalSaleValue = unitPriceSheet.total_sale_value;\n            _.each(unitPriceSheetComponents, function(component, key) {\n              var component_amt, perc;\n              perc = window.calculatePerc(component.amount, unitTotalSaleValue);\n              component_amt = window.numDifferentiation(component.amount);\n              return html += '<li class=\"milestonePercent\"> <span class=\"msPercent\">' + perc + '%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\">' + component.component_price_type + '</div> <div class=\"msVal\"> <div> <span class=\"label\">Cost Type:</span> <span class= \"percentageValue10 label\"  data-d-group= \"2\" data-m-dec=\"\"> ' + component.cost_type + '</span> </div> <div> <span class=\"label\">Sub Type:</span> <span class= \"service10 label\"  data-d-group=\"2\" data-m-dec=\"\"> ' + component.component_price_sub_type + '</span> </div> <div> Total Amount: <span class=\"total10\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> ' + component_amt + '</span> </div> </div><span class=\"barBg\" style=\"width:' + perc + '%\"></span> </li> <div class=\"clearfix\"></div>';\n            });\n          }\n        }\n        html += '</ul> </div>';\n        return $('.images').html(html);\n      },\n      'click .booking': function(e) {\n        var html, unitPaymentPlan, unitPlanMilestones, unitPriceSheet, unitPriceSheetComponents, unitTotalSaleValue;\n        $('#paymentplan option[value=\"payment_plan_breakdown\"]').attr('selected', 'selected');\n        $('.price-mode-dropdown').removeClass('hidden');\n        unitPaymentPlan = Marionette.getOption(this, 'unitPaymentPlan');\n        unitPriceSheet = Marionette.getOption(this, 'unitPriceSheet');\n        $('.images').empty();\n        $('.firstimage').hide();\n        html = '';\n        html += '<div class=\"invoice-items animated fadeIn\"> <ul id=\"paymentTable\">';\n        if (!unitPaymentPlan) {\n          html += \"No Data Found\";\n        } else {\n          unitPlanMilestones = unitPaymentPlan.milestones;\n          unitTotalSaleValue = unitPaymentPlan.total_sale_value;\n          unitPriceSheetComponents = unitPriceSheet.components;\n          _.each(unitPlanMilestones, function(milestone, key) {\n            var amount, perc;\n            perc = window.calculatePerc(milestone.amount, unitTotalSaleValue);\n            amount = window.numDifferentiation(milestone.amount);\n            return html += '<li class=\"milestonePercent\"> <span class=\"msPercent\">' + perc + '%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\">' + milestone.milestone + '</div> <div class=\"msVal\"> <div> <span class=\"label\">Cost Type:</span> <span class= \"percentageValue10 label\"  data-d-group= \"2\" data-m-dec=\"\"> ' + milestone.cost_type + '</span> </div> <div> <span class=\"label\">Due Date:</span> <span class= \"service10 label\"  data-d-group=\"2\" data-m-dec=\"\"> ' + milestone.milestone_date + '</span> </div> <div> Total Amount: <span class=\"total10\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> ' + amount + '</span> </div> </div><span class=\"barBg\" style=\"width:' + perc + '%\"></span> </li> <div class=\"clearfix\"></div>';\n          });\n        }\n        html += '</ul> </div>';\n        $('.images').html(html);\n        $('.booking').addClass('current');\n        $('.master').removeClass('current');\n        $('.gallery').removeClass('current');\n        $('.threeD').removeClass('current');\n        $('.twoD').removeClass('current');\n        return $('.external').removeClass('current');\n      },\n      'mouseover .next,.prev': function(e) {\n        var html, id, response, unitColl, unitModel;\n        id = parseInt($(e.target).attr('data-id'));\n        unitModel = unitCollection.findWhere({\n          'id': id\n        });\n        response = window.unit.getUnitDetails(id);\n        unitColl = CommonFloor.getUnitsProperty(unitModel);\n        html = '<div class=\"svg-info\"> <i class=\"' + unitColl[2] + '-ico\"></i> <h5 class=\" m-t-0\">' + unitModel.get('unit_name') + '</h5> <div class=\"details\"> <span>' + response[1].get('name') + '</span></br> <div class=\"text-primary\"><span class=\"text-primary facts-icon icon-rupee-icn\"></span>' + window.numDifferentiation(response[3]) + '</div> <!--<div>Area: <span>' + response[0].get('super_built_up_area') + ' ' + project.get('measurement_units') + '</span></div> <div>Variant: <span>' + response[0].get('unit_variant_name') + '</span></div>--> </div> </div>';\n        return $(e.target).tooltipster('content', html);\n      },\n      'click .next,.prev': function(e) {\n        var id, unitModel;\n        id = parseInt($(e.target).attr('data-id'));\n        unitModel = unitCollection.findWhere({\n          'id': id\n        });\n        CommonFloor.navigate('/unit-view/' + id, true);\n        return CommonFloor.router.storeRoute();\n      }\n    };\n\n    CenterUnitView.prototype.onShow = function() {\n      var building, flag, height, html, id, response, unit, url;\n      flag = 0;\n      this.getNextPrevUnit();\n      response = this.generateLevels();\n      html = '';\n      $.each(response[0], function(index, value) {\n        flag = 1;\n        return html += '<div class=\"layouts animated fadeIn\"> <a class=\"fancybox\" href=\"' + value + '\"> <img class=\"img\" data-src=\"' + value + '\" /> <div class=\"img-overlay\"></div> <span>' + s.replaceAll(response[2][index], \"_\", \" \") + '</span> </a> </div>';\n      });\n      $('.twoD').addClass('current');\n      $('.threeD').removeClass('current');\n      $('.external').removeClass('current');\n      $('.gallery').removeClass('current');\n      if (response[0].length === 0) {\n        flag = 1;\n        $.each(response[1], function(index, value) {\n          return html += '<img data-src=\"' + value + '\" /><span>' + s.replaceAll(response[2][index], \"_\", \" \") + '</span>';\n        });\n        $('.threeD').addClass('current');\n        $('.external').removeClass('current');\n        $('.twoD').removeClass('current');\n        $('.gallery').removeClass('current');\n      }\n      $('.images').html(html);\n      $('.level').attr('class', 'level Level_0 ' + _.last(response[2]));\n      if (response[4] === 'apartment') {\n        $('.level').attr('class', 'level Level_0 apartment_level');\n      }\n      if (!_.isUndefined(response[3].get('external3durl'))) {\n        flag = 1;\n        html = '<div class=\"external-wrapper\"> <div id=\"rotate_loader\" class=\"img-loader\"> <div class=\"square\" ></div> <div class=\"square\"></div> <div class=\"square last\"></div> <div class=\"square clear\"></div> <div class=\"square\"></div> <div class=\"square last\"></div> <div class=\"square clear\"></div> <div class=\"square \"></div> <div class=\"square last\"></div> </div> <div class=\"animated fadeIn hidden external-container\"> <img class=\" img-responsive external-img\"  src=\"' + response[3].get('external3durl') + '\" /> </div> </div>';\n        $('.images').html(html);\n        $('.external').addClass('current');\n        $('.threeD').removeClass('current');\n        $('.twoD').removeClass('current');\n        $('.gallery').removeClass('current');\n      }\n      if (response[0].length === 0) {\n        $('.twoD').hide();\n      }\n      if (response[1].length === 0) {\n        $('.threeD').hide();\n      }\n      if (_.isUndefined(response[3].get('external3durl'))) {\n        $('.external').hide();\n      }\n      if (_.isUndefined(response[3].get('galleryurl'))) {\n        $('.gallery').hide();\n      }\n      url = Backbone.history.fragment;\n      id = url.split('/')[1];\n      unit = unitCollection.findWhere({\n        'id': parseInt(id)\n      });\n      building = buildingCollection.findWhere({\n        'id': parseInt(unit.get('building_id'))\n      });\n      if (project.get('project_master').length !== 0 || building.get('building_master').length !== 0) {\n        $('.master').removeClass('hidden');\n      }\n      if (response[0].length === 0 && response[1].length === 0 && _.isUndefined(response[3].get('external3durl'))) {\n        $('.gallery').addClass('current');\n        $('.threeD').removeClass('current');\n        $('.twoD').removeClass('current');\n        $('.external').removeClass('current');\n        flag = 1;\n        if (!_.isUndefined(response[3].get('galleryurl'))) {\n          $.each(response[3].get('galleryurl'), function(index, value) {\n            return html += '<div class=\"animated fadeIn\"><img class=\"img\" data-src=\"' + value + '\" /></div>';\n          });\n        }\n      }\n      if (response[0].length === 0 && response[1].length === 0 && _.isUndefined(response[3].get('external3durl')) && _.isUndefined(response[3].get('galleryurl'))) {\n        this.loadMaster();\n        flag = 1;\n        $('.master').addClass('current');\n        $('.gallery').removeClass('current');\n        $('.threeD').removeClass('current');\n        $('.twoD').removeClass('current');\n        $('.external').removeClass('current');\n      }\n      height = this.ui.imagesContainer.height();\n      if ($(window).width() > 991) {\n        $('.unit-details').mCustomScrollbar({\n          theme: 'cf-scroll'\n        });\n      }\n      $('.images').html(html);\n      $('.external-img').load(function() {\n        $('#rotate_loader').addClass('hidden');\n        return $('.external-container').removeClass('hidden');\n      });\n      if (flag === 0) {\n        html = '<div class=\"invoice-items animated fadeIn\"> <div class=\"row\"> <div class=\"col-sm-5 form-inline m-b-20\"> <h5 class=\"inline-block\">Payment Plan: </h5><select class=\"form-control\" id=\"paymentplans\"> <option value=\"3363\"> Payment Plan </option> <option value=\"3364\"> Price Breakdown </option> </select> </div> <div class=\"col-sm-7 text-right\"> <h5 class=\"inline-block\">Booking Amount: </h5> <h4 class=\"inline-block bold text-primary\"><span class=\"rec\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,53,952</span></h4> </div> </div> <ul id=\"paymentTable\"> <li style=\"list-style: none\"><span class=\"msPercent\">4.5%</span></li> <li class=\"milestoneList milestoneReached\"> <div class=\"msName\"> Application </div> <div class=\"msVal discCol\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue0 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,43,343</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service0 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 10,609</span> </div> <div> Total: <span class=\"total0\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,53,952</span> </div> </div> <div class=\"msVal\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue10 label\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,43,343</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service10 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 10,609</span> </div> <div> Total: <span class=\"total10\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,53,952</span> </div> </div><span class=\"barBg\" style=\"width:4.5%\"></span> </li> <li style=\"list-style: none; display: inline\"> <div class=\"clearfix\"></div><span class=\"msPercent\">26%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\"> Plinth </div> <div class=\"msVal discCol\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue1 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 19,83,761</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service1 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 61,298</span> </div> <div> Total: <span class=\"total1\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 20,45,059</span> </div> </div> <div class=\"msVal\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue11 label\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 19,83,761</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service11 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 61,298</span> </div> <div> Total: <span class=\"total11\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 20,45,059</span> </div> </div><span class=\"barBg\" style=\"width:26%\"></span> </li> <li style=\"list-style: none; display: inline\"> <div class=\"clearfix\"></div><span class=\"msPercent\">11%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\"> 1st Slab </div> <div class=\"msVal discCol\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue2 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,39,284</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service2 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 25,934</span> </div> <div> Total: <span class=\"total2\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,65,218</span> </div> </div> <div class=\"msVal\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue12 label\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,39,284</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service12 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 25,934</span> </div> <div> Total: <span class=\"total12\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,65,218</span> </div> </div><span class=\"barBg\" style=\"width:11%\"></span> </li> <li style=\"list-style: none; display: inline\"> <div class=\"clearfix\"></div><span class=\"msPercent\">11%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\"> 3rd Slab </div> <div class=\"msVal discCol\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue3 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,39,284</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service3 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 25,934</span> </div> <div> Total: <span class=\"total3\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,65,218</span> </div> </div> <div class=\"msVal\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue13 label\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,39,284</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service13 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 25,934</span> </div> <div> Total: <span class=\"total13\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,65,218</span> </div> </div><span class=\"barBg\" style=\"width:11%\"></span> </li> <li style=\"list-style: none; display: inline\"> <div class=\"clearfix\"></div><span class=\"msPercent\">11%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\"> 5th Slab </div> <div class=\"msVal discCol\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue4 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,39,284</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service4 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 25,934</span> </div> <div> Total: <span class=\"total4\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,65,218</span> </div> </div> <div class=\"msVal\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue14 label\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,39,284</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service14 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 25,934</span> </div> <div> Total: <span class=\"total14\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,65,218</span> </div> </div><span class=\"barBg\" style=\"width:11%\"></span> </li> <li style=\"list-style: none; display: inline\"> <div class=\"clearfix\"></div><span class=\"msPercent\">11%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\"> 7th Slab </div> <div class=\"msVal discCol\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue5 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,39,284</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service5 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 25,934</span> </div> <div> Total: <span class=\"total5\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,65,218</span> </div> </div> <div class=\"msVal\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue15 label\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,39,284</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service15 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 25,934</span> </div> <div> Total: <span class=\"total15\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,65,218</span> </div> </div><span class=\"barBg\" style=\"width:11%\"></span> </li> <li style=\"list-style: none; display: inline\"> <div class=\"clearfix\"></div><span class=\"msPercent\">10.5%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\"> 9th Slab </div> <div class=\"msVal discCol\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue6 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,01,134</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service6 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 24,755</span> </div> <div> Total: <span class=\"total6\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,25,889</span> </div> </div> <div class=\"msVal\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue16 label\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,01,134</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service16 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 24,755</span> </div> <div> Total: <span class=\"total16\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 8,25,889</span> </div> </div><span class=\"barBg\" style=\"width:10.5%\"></span> </li> <li style=\"list-style: none; display: inline\"> <div class=\"clearfix\"></div><span class=\"msPercent\">5%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\"> Brick Work </div> <div class=\"msVal discCol\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue7 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,81,493</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service7 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 11,788</span> </div> <div> Total: <span class=\"total7\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,93,281</span> </div> </div> <div class=\"msVal\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue17 label\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,81,493</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service17 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 11,788</span> </div> <div> Total: <span class=\"total17\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,93,281</span> </div> </div><span class=\"barBg\" style=\"width:5%\"></span> </li> <li style=\"list-style: none; display: inline\"> <div class=\"clearfix\"></div><span class=\"msPercent\">5%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\"> Flooring </div> <div class=\"msVal discCol\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue8 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,81,493</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service8 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 11,788</span> </div> <div> Total: <span class=\"total8\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,93,281</span> </div> </div> <div class=\"msVal\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue18 label\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,81,493</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service18 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 11,788</span> </div> <div> Total: <span class=\"total18\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,93,281</span> </div> </div><span class=\"barBg\" style=\"width:5%\"></span> </li> <li style=\"list-style: none; display: inline\"> <div class=\"clearfix\"></div><span class=\"msPercent\">5%</span> </li> <li class=\"milestoneList\"> <div class=\"msName\"> Possession </div> <div class=\"msVal discCol\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue9 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,81,493</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service9 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 11,788</span> </div> <div> Total: <span class=\"total9\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,93,281</span> </div> </div> <div class=\"msVal\"> <div> <span class=\"label\">Amount:</span> <span class= \"percentageValue19 label\"  data-d-group= \"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,81,493</span> </div> <div> <span class=\"label\">Service Tax:</span> <span class= \"service19 label\"  data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 11,788</span> </div> <div> Total: <span class=\"total19\" data-d-group=\"2\" data-m-dec=\"\"><span class=\"icon-rupee-icn\"></span> 3,93,281</span> </div> </div><span class=\"barBg\" style=\"width:5%\"></span> </li> <li style=\"list-style: none; display: inline\"> <div class=\"clearfix\"></div> </li> </ul> </div>';\n      }\n      $(\".fancybox\").fancybox();\n      $('.img').lazyLoadXT({\n        updateEvent: 'load',\n        oncomplete: function() {\n          $('.img').removeClass(\"lazy-hidden\");\n          return $('.img').addClass(\"lazy-loaded\");\n        }\n      });\n      return this.iniTooltip();\n    };\n\n    CenterUnitView.prototype.loadMaster = function() {\n      var breakpoint, breakpoints, building, first, id, response, svgs, transitionImages, unit, url;\n      $('.master').removeClass('hidden');\n      url = Backbone.history.fragment;\n      id = url.split('/')[1];\n      unit = unitCollection.findWhere({\n        'id': parseInt(id)\n      });\n      breakpoint = unit.get('breakpoint');\n      response = window.unit.getUnitDetails(id);\n      building = buildingCollection.findWhere({\n        'id': parseInt(unit.get('building_id'))\n      });\n      if (response[2] === 'apartment' || response[2] === 'Penthouse') {\n        transitionImages = [];\n        svgs = {};\n        breakpoints = building.get('breakpoints');\n        $.each(breakpoints, function(index, value) {\n          return svgs[value] = BASEURL + '/projects/' + PROJECTID + '/buildings/' + unit.get('building_id') + '/master-' + value + '.svg';\n        });\n        $.merge(transitionImages, building.get('building_master'));\n        first = BASEURL + '/projects/' + PROJECTID + '/buildings/' + unit.get('building_id') + '/master-' + breakpoint + '.svg';\n        if (building.get('building_master').length !== 0) {\n          $('.firstimage').attr('src', transitionImages[breakpoint]);\n          $('.firstimage').load(function() {\n            return $('.images').load(first, function() {\n              $('.unassign').attr('style', \"opacity: 0;fill-opacity: 0;\");\n              $('.apartment,.amenity,.booked_by_agent').each(function(ind, item) {\n                var itemid;\n                itemid = parseInt(item.id);\n                return $('#' + itemid).attr('class', \"no-fill\");\n              });\n              return $('#' + id).attr('class', 'layer svg_active');\n            });\n          });\n        }\n        if (building.get('building_master').length === 0) {\n          $('.master').hide();\n        }\n        return;\n      }\n      svgs = [];\n      breakpoints = project.get('breakpoints');\n      $.each(breakpoints, function(index, value) {\n        return svgs[value] = BASEURL + '/projects/' + PROJECTID + '/master/master-' + value + '.svg';\n      });\n      first = BASEURL + '/projects/' + PROJECTID + '/master/master-' + breakpoint + '.svg';\n      transitionImages = [];\n      $.merge(transitionImages, project.get('project_master'));\n      if (project.get('project_master').length !== 0) {\n        $('.firstimage').attr('src', transitionImages[breakpoint]);\n        $('.firstimage').load(function() {\n          return $('.images').load(first, function() {\n            $('.unassign').attr('style', \"opacity: 0;fill-opacity: 0;\");\n            $('.villa,.plot,.building,.amenity,.booked_by_agent').each(function(ind, item) {\n              var itemid;\n              itemid = parseInt(item.id);\n              return $('#' + itemid).attr('class', \"no-fill\");\n            });\n            return $('#' + id).attr('class', 'layer svg_active');\n          });\n        });\n      }\n      if (project.get('project_master').length === 0) {\n        return $('.master').hide();\n      }\n    };\n\n    CenterUnitView.prototype.iniTooltip = function() {\n      $('.next').tooltipster({\n        theme: 'tooltipster-shadow circle-tooltip',\n        contentAsHTML: true,\n        onlyOne: true,\n        arrow: false,\n        interactive: true,\n        trigger: 'hover',\n        position: 'left',\n        delay: 50\n      });\n      return $('.prev').tooltipster({\n        theme: 'tooltipster-shadow circle-tooltip',\n        contentAsHTML: true,\n        onlyOne: true,\n        arrow: false,\n        interactive: true,\n        trigger: 'hover',\n        position: 'right',\n        delay: 50\n      });\n    };\n\n    CenterUnitView.prototype.generateLevels = function() {\n      var floor, i, level, response, threeD, twoD, unitD, unitid, url;\n      url = Backbone.history.fragment;\n      unitid = parseInt(url.split('/')[1]);\n      response = window.unit.getUnitDetails(unitid);\n      twoD = [];\n      threeD = [];\n      level = [];\n      floor = response[0].get('floor');\n      i = 0;\n      unitD = unitCollection.findWhere({\n        id: unitid\n      });\n      $.each(floor, function(index, value) {\n        var level_name;\n        if (!_.isUndefined(value.url2dlayout_image) && value.url2dlayout_image !== \"\") {\n          twoD.push(value.url2dlayout_image);\n        }\n        if (!_.isUndefined(value.url3dlayout_image) && value.url3dlayout_image !== \"\") {\n          threeD.push(value.url3dlayout_image);\n        }\n        level_name = 'Level  ' + index;\n        if (response[2] === 'apartment') {\n          level.push(\"\");\n        } else {\n          level.push(s.replaceAll('Level ' + i, \" \", \"_\"));\n        }\n        return i = i + 1;\n      });\n      return [twoD, threeD, level, response[0], response[2]];\n    };\n\n    CenterUnitView.prototype.getNextPrevUnit = function() {\n      var next, prev, unitModel, unitid, url;\n      url = Backbone.history.fragment;\n      unitid = parseInt(url.split('/')[1]);\n      unitModel = unitCollection.findWhere({\n        'id': unitid\n      });\n      CommonFloor.getUnitsProperty(unitModel);\n      window.tempColl.setRecord(unitModel);\n      next = tempColl.next();\n      if (_.isUndefined(next)) {\n        $('.next').hide();\n      } else {\n        $('.next').attr('data-id', next.get('id'));\n      }\n      prev = tempColl.prev();\n      if (_.isUndefined(prev)) {\n        return $('.prev').hide();\n      } else {\n        return $('.prev').attr('data-id', prev.get('id'));\n      }\n    };\n\n    return CenterUnitView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.CenterUnitCtrl = (function(superClass) {\n    extend(CenterUnitCtrl, superClass);\n\n    function CenterUnitCtrl() {\n      return CenterUnitCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    CenterUnitCtrl.prototype.initialize = function() {\n      var unitPaymentPlan, unitPaymentPlanAjx, unitPriceSheet, unitPriceSheetAjx, unitid, url;\n      url = Backbone.history.fragment;\n      unitid = parseInt(url.split('/')[1]);\n      unitPaymentPlan = {\n        method: \"GET\",\n        url: BASERESTURL + \"/get-unit-payment-plan\",\n        data: {\n          unit_id: unitid\n        }\n      };\n      unitPriceSheet = {\n        method: \"GET\",\n        url: BASERESTURL + \"/get-unit-price-sheet\",\n        data: {\n          unit_id: unitid\n        }\n      };\n      unitPriceSheetAjx = $.ajax(unitPriceSheet);\n      unitPaymentPlanAjx = $.ajax(unitPaymentPlan);\n      return $.when(unitPaymentPlanAjx, unitPriceSheetAjx).done((function(_this) {\n        return function(paymentPlanResp, priceSheetResp) {\n          var paymentPlan, priceSheet;\n          paymentPlan = paymentPlanResp[0]['data'];\n          priceSheet = priceSheetResp[0]['data'];\n          if (!paymentPlan) {\n            unitPaymentPlan = paymentPlanResp[0]['data'];\n          } else {\n            unitPaymentPlan = paymentPlanResp[0]['data'];\n          }\n          if (!priceSheet) {\n            unitPriceSheet = priceSheetResp[0]['data'];\n          } else {\n            unitPriceSheet = priceSheetResp[0]['data'];\n          }\n          return _this.show(new CenterUnitView({\n            unitPaymentPlan: unitPaymentPlan,\n            unitPriceSheet: unitPriceSheet\n          }));\n        };\n      })(this));\n    };\n\n    return CenterUnitCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/unit-view/unit.controller.js.map","(function() {\n  var LeftListView, TopListView,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  CommonFloor.ProjectListView = (function(superClass) {\n    extend(ProjectListView, superClass);\n\n    function ProjectListView() {\n      return ProjectListView.__super__.constructor.apply(this, arguments);\n    }\n\n    ProjectListView.prototype.template = '#project-listview-template';\n\n    return ProjectListView;\n\n  })(Marionette.LayoutView);\n\n  CommonFloor.ProjectListCtrl = (function(superClass) {\n    extend(ProjectListCtrl, superClass);\n\n    function ProjectListCtrl() {\n      return ProjectListCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    ProjectListCtrl.prototype.initialize = function() {\n      if (jQuery.isEmptyObject(project.toJSON())) {\n        project.setProjectAttributes(PROJECTID);\n        CommonFloor.loadJSONData();\n      }\n      if (bunglowVariantMasterCollection.length === 0 && apartmentVariantMasterCollection.length === 0 && plotVariantMasterCollection.length === 0) {\n        return this.show(new CommonFloor.NothingFoundView);\n      } else {\n        return this.show(new CommonFloor.ProjectListView);\n      }\n    };\n\n    return ProjectListCtrl;\n\n  })(Marionette.RegionController);\n\n  TopListView = (function(superClass) {\n    extend(TopListView, superClass);\n\n    function TopListView() {\n      return TopListView.__super__.constructor.apply(this, arguments);\n    }\n\n    TopListView.prototype.template = Handlebars.compile('<div class=\"container-fluid\"> <div class=\"row\"> <div class=\"col-md-12 col-xs-12 col-sm-12 text-center\"> <div class=\"breadcrumb-bar\"> <a class=\"unit_back\" href=\"#\"> </a> </div> <div class=\"header-info\"> <h2 class=\"proj-name pull-left\">{{project_title}}</h2> <div class=\"proj-type-count\"> {{#types}} <p class=\"pull-right\">{{type}}</p><h2 class=\" pull-right m-t-10\">{{count.length}}</h2> {{/types}} </div> <div class=\"clearfix\"></div> </div> </div> </div> </div> <div class=\"pull-left filter-result full\"> <ul  id=\"flexiselDemo1\"> {{#area}} <li> <div class=\"filter-pill\"> {{name}} {{type}} <span class=\"icon-cross \" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> </li> {{/area}} {{#budget}} <li> <div class=\"filter-pill\">  <span class=\"icon-rupee-icn\"></span>{{name}} {{type}}</span> <span class=\"icon-cross \" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> </li> {{/budget}} {{#views}} <li> <div class=\"filter-pill\"> {{name}}  <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" ></span> </div> </li> {{/views}} {{#facings}} <li> <div class=\"filter-pill\"> {{name}} <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" ></span> </div> </li> {{/facings}} {{#status}} <li> <div class=\"filter-pill\"> {{name}} {{type}} <span class=\"icon-cross\" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> </li> {{/status}} {{#each  filters}} <li> <div class=\"filter-title\"> {{name}}  <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" data-index=\"{{index}}\"></span> </div> </li> {{#filters}} {{#each this}} {{#each this}} <li> <div class=\"filter-pill\"> {{name}} <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" data-index=\"{{index}}\" data-type=\"{{typename}}\"></span> </div> </li>{{/each}} {{/each}} {{/filters}} {{/each}} </ul> </div> <div class=\"clearfix\"></div>');\n\n    TopListView.prototype.ui = {\n      unitBack: '.unit_back',\n      unitTypes: '.unit_types',\n      priceMin: '.price_min',\n      priceMax: '.price_max',\n      status: '#filter_available',\n      apply: '.apply',\n      variantNames: '.variant_names',\n      area: '#filter_area',\n      budget: '#filter_budget',\n      types: '.types',\n      filter_flooring: '.filter_flooring',\n      views: '.views',\n      facings: '.facings'\n    };\n\n    TopListView.prototype.serializeData = function() {\n      var data, main, response, status;\n      data = TopListView.__super__.serializeData.call(this);\n      status = CommonFloor.getStatusFilters();\n      if (status.length !== 0) {\n        data.status = status;\n      }\n      main = CommonFloor.getFilters();\n      data.filters = main[0].filters;\n      data.area = main[0].area;\n      data.budget = main[0].price;\n      data.status = main[0].status;\n      data.views = main[0].views;\n      data.facings = main[0].facings;\n      response = CommonFloor.propertyTypes();\n      data.types = response;\n      return data;\n    };\n\n    TopListView.prototype.events = function() {\n      return {\n        'click @ui.unitBack': function(e) {\n          e.preventDefault();\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return CommonFloor.navigate('/', true);\n        },\n        'click @ui.types': function(e) {\n          var arr, index;\n          arr = CommonFloor.defaults['type'].split(',');\n          index = arr.indexOf($(e.target).attr('data-id'));\n          arr.splice(index, 1);\n          CommonFloor.defaults['type'] = arr.join(',');\n          if ($(e.target).attr('data-id') === 'villa') {\n            this.removeVillaFilters();\n          }\n          if ($(e.target).attr('data-id') === 'apartment') {\n            this.removeAptFilters();\n          }\n          if ($(e.target).attr('data-id') === 'plot') {\n            this.removePlotFilters();\n          }\n          this.trigger('render:view');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          return unitCollection.trigger('available');\n        },\n        'click @ui.unitTypes': function(e) {\n          var type, types;\n          types = [];\n          type = $(e.currentTarget).attr('data-type');\n          if (CommonFloor.defaults[type]['unit_type_id'] !== \"\") {\n            types = CommonFloor.defaults[type]['unit_type_id'].split(',');\n            types = types.map(function(item) {\n              return parseInt(item);\n            });\n          }\n          types = _.without(types, parseInt($(e.currentTarget).attr('data-id')));\n          CommonFloor.defaults[type]['unit_type_id'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.variantNames': function(e) {\n          var type, types;\n          types = [];\n          type = $(e.currentTarget).attr('data-type');\n          if (CommonFloor.defaults[type]['unit_variant_id'] !== \"\") {\n            types = CommonFloor.defaults[type]['unit_variant_id'].split(',');\n            types = types.map(function(item) {\n              return parseInt(item);\n            });\n          }\n          types = _.without(types, parseInt($(e.currentTarget).attr('data-id')));\n          CommonFloor.defaults[type]['unit_variant_id'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.status': function(e) {\n          CommonFloor.defaults['common']['availability'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.filterNew();\n          CommonFloor.resetCollections();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.area': function(e) {\n          CommonFloor.defaults['common']['area_max'] = \"\";\n          CommonFloor.defaults['common']['area_min'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.budget': function(e) {\n          CommonFloor.defaults['common']['price_max'] = \"\";\n          CommonFloor.defaults['common']['price_min'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.filter_flooring': function(e) {\n          var index, type, types;\n          types = [];\n          type = $(e.currentTarget).attr('data-type');\n          index = $(e.currentTarget).attr('data-index');\n          if (CommonFloor.defaults[type]['attributes'][index] !== \"\") {\n            types = CommonFloor.defaults[type]['attributes'][index].split(',');\n          }\n          types = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults[type]['attributes'][index] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.facings': function(e) {\n          var types;\n          types = CommonFloor.defaults['common']['facings'].split(',');\n          types = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['common']['facings'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        },\n        'click @ui.views': function(e) {\n          var types;\n          types = CommonFloor.defaults['common']['views'].split(',');\n          types = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['common']['views'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterNew();\n          unitCollection.trigger('available');\n          return this.trigger('render:view');\n        }\n      };\n    };\n\n    TopListView.prototype.onShow = function() {\n      var response;\n      $(\"#flexiselDemo1\").flexisel({\n        visibleItems: 11,\n        animationSpeed: 200,\n        autoPlay: false,\n        autoPlaySpeed: 1000,\n        clone: false,\n        enableResponsiveBreakpoints: true,\n        responsiveBreakpoints: {\n          portrait: {\n            changePoint: 480,\n            visibleItems: 5\n          },\n          landscape: {\n            changePoint: 640,\n            visibleItems: 6\n          },\n          tablet: {\n            changePoint: 768,\n            visibleItems: 3\n          }\n        }\n      });\n      response = CommonFloor.propertyTypes();\n      if (response.length === 0) {\n        return $('.proj-type-count').html('<p class=\"p-l-15\">No results found</p>');\n      }\n    };\n\n    TopListView.prototype.removeVillaFilters = function() {\n      var unitTypes, unitTypesArr, unitVariants, unitVariantsArr, unitsArr, unittypes, variants;\n      variants = [];\n      unittypes = [];\n      unitsArr = bunglowVariantCollection.getBunglowMasterUnits();\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        variants.push(parseInt(unitDetails[0].get('id')));\n        return unittypes.push(parseInt(unitDetails[1].get('id')));\n      });\n      unitTypes = CommonFloor.defaults['villa']['unit_type_id'].split(',');\n      unitTypesArr = unitTypes.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(unittypes, function(index, value) {\n        if ($.inArray(parseInt(value), unitTypesArr) > -1) {\n          return unitTypes = _.without(unitTypesArr, parseInt(value));\n        }\n      });\n      CommonFloor.defaults['villa']['unit_type_id'] = unitTypes.join(',');\n      unitVariants = CommonFloor.defaults['villa']['unit_variant_id'].split(',');\n      unitVariantsArr = unitVariants.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(variants, function(index, value) {\n        if ($.inArray(parseInt(value), unitVariantsArr) > -1) {\n          return unitVariants = _.without(unitVariantsArr, parseInt(value));\n        }\n      });\n      return CommonFloor.defaults['villa']['unit_variant_id'] = unitVariants.join(',');\n    };\n\n    TopListView.prototype.removeAptFilters = function() {\n      var unitTypes, unitTypesArr, unitVariants, unitVariantsArr, unitsArr, unittypes, variants;\n      variants = [];\n      unittypes = [];\n      unitsArr = apartmentVariantCollection.getApartmentMasterUnits();\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        variants.push(parseInt(unitDetails[0].get('id')));\n        return unittypes.push(parseInt(unitDetails[1].get('id')));\n      });\n      unitTypes = CommonFloor.defaults['villa']['unit_type_id'].split(',');\n      unitTypesArr = unitTypes.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(unittypes, function(index, value) {\n        if ($.inArray(parseInt(value), unitTypesArr) > -1) {\n          return unitTypes = _.without(unitTypesArr, parseInt(value));\n        }\n      });\n      CommonFloor.defaults['villa']['unit_type_id'] = unitTypes.join(',');\n      unitVariants = CommonFloor.defaults['villa']['unit_variant_id'].split(',');\n      unitVariantsArr = unitVariants.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(variants, function(index, value) {\n        if ($.inArray(parseInt(value), unitVariantsArr) > -1) {\n          return unitVariants = _.without(unitVariantsArr, parseInt(value));\n        }\n      });\n      return CommonFloor.defaults['villa']['unit_variant_id'] = unitVariants.join(',');\n    };\n\n    TopListView.prototype.removePlotFilters = function() {\n      var unitTypes, unitTypesArr, unitVariants, unitVariantsArr, unitsArr, unittypes, variants;\n      variants = [];\n      unittypes = [];\n      unitsArr = plotVariantCollection.getPlotMasterUnits();\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        variants.push(parseInt(unitDetails[0].get('id')));\n        return unittypes.push(parseInt(unitDetails[1].get('id')));\n      });\n      unitTypes = CommonFloor.defaults['villa']['unit_type_id'].split(',');\n      unitTypesArr = unitTypes.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(unittypes, function(index, value) {\n        if ($.inArray(parseInt(value), unitTypesArr) > -1) {\n          return unitTypes = _.without(unitTypesArr, parseInt(value));\n        }\n      });\n      CommonFloor.defaults['villa']['unit_type_id'] = unitTypes.join(',');\n      unitVariants = CommonFloor.defaults['villa']['unit_variant_id'].split(',');\n      unitVariantsArr = unitVariants.map(function(item) {\n        return parseInt(item);\n      });\n      $.each(variants, function(index, value) {\n        if ($.inArray(parseInt(value), unitVariantsArr) > -1) {\n          return unitVariants = _.without(unitVariantsArr, parseInt(value));\n        }\n      });\n      return CommonFloor.defaults['villa']['unit_variant_id'] = unitVariants.join(',');\n    };\n\n    return TopListView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.TopListCtrl = (function(superClass) {\n    extend(TopListCtrl, superClass);\n\n    function TopListCtrl() {\n      return TopListCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    TopListCtrl.prototype.initialize = function() {\n      this.renderTopListView();\n      return unitCollection.bind(\"available\", this.renderTopListView, this);\n    };\n\n    TopListCtrl.prototype.renderTopListView = function() {\n      this.view = new TopListView({\n        model: project\n      });\n      this.listenTo(this.view, \"render:view\", this.loadController);\n      return this.show(this.view);\n    };\n\n    TopListCtrl.prototype.loadController = function() {\n      window.unitTypes = [];\n      window.unitVariants = [];\n      window.variantNames = [];\n      window.price = '';\n      window.area = '';\n      window.type = [];\n      this.region = new Marionette.Region({\n        el: '#filterregion'\n      });\n      return new CommonFloor.FilterMasterCtrl({\n        region: this.region\n      });\n    };\n\n    return TopListCtrl;\n\n  })(Marionette.RegionController);\n\n  LeftListView = (function(superClass) {\n    extend(LeftListView, superClass);\n\n    function LeftListView() {\n      return LeftListView.__super__.constructor.apply(this, arguments);\n    }\n\n    LeftListView.prototype.template = Handlebars.compile('<div class=\"col-md-3 col-xs-12 col-sm-12 search-left-content filters\"><div>');\n\n    LeftListView.prototype.onShow = function() {\n      return $('.filters').hide();\n    };\n\n    return LeftListView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.LeftListCtrl = (function(superClass) {\n    extend(LeftListCtrl, superClass);\n\n    function LeftListCtrl() {\n      return LeftListCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    LeftListCtrl.prototype.initialize = function() {\n      return this.show(new LeftListView);\n    };\n\n    return LeftListCtrl;\n\n  })(Marionette.RegionController);\n\n  CommonFloor.CenterListCtrl = (function(superClass) {\n    extend(CenterListCtrl, superClass);\n\n    function CenterListCtrl() {\n      return CenterListCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    CenterListCtrl.prototype.initialize = function() {\n      this.renderCenterListView();\n      return unitCollection.bind(\"available\", this.renderCenterListView, this);\n    };\n\n    CenterListCtrl.prototype.renderCenterListView = function() {\n      var data, region, response, units;\n      response = CommonFloor.checkListView();\n      if (response.count.length === 0) {\n        region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        new CommonFloor.NoUnitsCtrl({\n          region: region\n        });\n        return;\n      }\n      if (response.type === 'bunglows') {\n        units = bunglowVariantCollection.getBunglowUnits();\n        data = {};\n        data.units = units;\n        data.type = 'villa';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        new CommonFloor.VillaListCtrl({\n          region: this.region\n        });\n      }\n      if (response.type === 'building') {\n        units = buildingCollection;\n        data = {};\n        data.units = units;\n        data.type = 'building';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        new CommonFloor.BuildingListCtrl({\n          region: this.region\n        });\n      }\n      if (response.type === 'plot') {\n        units = plotVariantCollection.getPlotUnits();\n        data = {};\n        data.units = units;\n        data.type = 'plot';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        return new CommonFloor.PlotListCtrl({\n          region: this.region\n        });\n      }\n    };\n\n    return CenterListCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/project-list-view/project.list.controller.js.map","(function() {\n  var BuildingEmptyView, BuildingItemView, BuildingListView,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  BuildingItemView = (function(superClass) {\n    extend(BuildingItemView, superClass);\n\n    function BuildingItemView() {\n      return BuildingItemView.__super__.constructor.apply(this, arguments);\n    }\n\n    BuildingItemView.prototype.template = Handlebars.compile('<li class=\"bldg blocks {{status}} \"> <div class=\"col-sm-2 col-xs-2\"> <i class=\"building-ico m-t-15 \"></i> </div> <div class=\"col-sm-10 col-xs-10\"> <div class=\"info\"> <h2 class=\"margin-none\">{{building_name}} <label class=\"text-muted sm-text\">({{floors}} Floors)</label></h2> </div> <div class=\"clearfix\"></div> <div class=\"unit-type-info m-t-5\"> <ul> {{#types}} <li> {{name}}: <span>{{units}}</span> </li> {{/types}} </ul> </div> <div class=\"clearfix\"></div> <div class=\"m-t-5 text-primary {{classname}}\">Starting from <span class=\"icon-rupee-icn\"></span>{{price}}</div> </div> </li>');\n\n    BuildingItemView.prototype.serializeData = function() {\n      var cost, data, floors, id, response, types;\n      data = BuildingItemView.__super__.serializeData.call(this);\n      id = this.model.get('id');\n      response = building.getUnitTypes(id);\n      types = building.getUnitTypesCount(id, response);\n      floors = this.model.get('no_of_floors');\n      cost = building.getMinimumCost(id);\n      data.classname = \"\";\n      if (cost === 0) {\n        data.classname = 'hidden';\n      }\n      data.price = window.numDifferentiation(cost);\n      data.floors = this.model.get('no_of_floors');\n      data.types = types;\n      return data;\n    };\n\n    BuildingItemView.prototype.events = {\n      'click .bldg': function(e) {\n        var buildingModel, id, unit;\n        id = this.model.get('id');\n        unit = unitCollection.where({\n          'building_id': id\n        });\n        if (unit.length === 0) {\n          return;\n        }\n        buildingModel = buildingCollection.findWhere({\n          'id': id\n        });\n        CommonFloor.filterBuilding(id);\n        if (Object.keys(buildingModel.get('building_master')).length === 0) {\n          return CommonFloor.navigate('/building/' + id + '/apartments', true);\n        } else {\n          return CommonFloor.navigate('/building/' + id + '/master-view', true);\n        }\n      }\n    };\n\n    return BuildingItemView;\n\n  })(Marionette.ItemView);\n\n  BuildingEmptyView = (function(superClass) {\n    extend(BuildingEmptyView, superClass);\n\n    function BuildingEmptyView() {\n      return BuildingEmptyView.__super__.constructor.apply(this, arguments);\n    }\n\n    BuildingEmptyView.prototype.template = 'No units added';\n\n    return BuildingEmptyView;\n\n  })(Marionette.ItemView);\n\n  BuildingListView = (function(superClass) {\n    extend(BuildingListView, superClass);\n\n    function BuildingListView() {\n      return BuildingListView.__super__.constructor.apply(this, arguments);\n    }\n\n    BuildingListView.prototype.template = Handlebars.compile('<div class=\"col-md-12 us-right-content\"> <div class=\"list-view-container animated fadeInDown\"> <!--<div class=\"controls map-View\"> <div class=\"toggle\"> <a href=\"#/master-view\" class=\"map\">Map</a><a href=\"#/list-view\" class=\"list active\">List</a> </div> </div>--> <span class=\"pull-left top-legend\"> <ul> <li class=\"na\">N/A</li> </ul> </span> <h2 class=\"text-center\">List of Buildings</h2> <hr class=\"margin-none\"> <div class=\"text-center\"> <ul class=\"prop-select\"> <li class=\"prop-type buildings active\">Buildings</li> <li class=\"prop-type Villas hidden\">Villas</li> <li class=\"prop-type Plots hidden\">Plots</li> </ul> </div> <div class=\"bldg-list\"> <ul class=\"units\"> </ul> <div class=\"clearfix\"></div> </div> </div> </div>');\n\n    BuildingListView.prototype.childView = BuildingItemView;\n\n    BuildingListView.prototype.childViewContainer = '.units';\n\n    BuildingListView.prototype.events = {\n      'click .buildings': function(e) {\n        var data, units;\n        units = buildingCollection;\n        data = {};\n        data.units = units;\n        data.type = 'building';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        return new CommonFloor.BuildingListCtrl({\n          region: this.region\n        });\n      },\n      'click .Villas': function(e) {\n        var data, units;\n        units = bunglowVariantCollection.getBunglowUnits();\n        data = {};\n        data.units = units;\n        data.type = 'villa';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        return new CommonFloor.VillaListCtrl({\n          region: this.region\n        });\n      },\n      'click .Plots': function(e) {\n        var data, units;\n        units = plotVariantCollection.getPlotUnits();\n        data = {};\n        data.units = units;\n        data.type = 'plot';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        return new CommonFloor.PlotListCtrl({\n          region: this.region\n        });\n      }\n    };\n\n    BuildingListView.prototype.onShow = function() {\n      if (bunglowVariantCollection.length !== 0) {\n        $('.Villas').removeClass('hidden');\n      }\n      if (plotVariantCollection.length !== 0) {\n        return $('.Plots').removeClass('hidden');\n      }\n    };\n\n    return BuildingListView;\n\n  })(Marionette.CompositeView);\n\n  CommonFloor.BuildingListCtrl = (function(superClass) {\n    extend(BuildingListCtrl, superClass);\n\n    function BuildingListCtrl() {\n      this.loadController = bind(this.loadController, this);\n      return BuildingListCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    BuildingListCtrl.prototype.initialize = function() {\n      var view;\n      this.view = view = new BuildingListView({\n        collection: buildingCollection\n      });\n      this.listenTo(this.view, \"load:units\", this.loadController);\n      return this.show(view);\n    };\n\n    BuildingListCtrl.prototype.loadController = function(data) {\n      return Backbone.trigger(\"load:units\", data);\n    };\n\n    return BuildingListCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/project-list-view/building.list.controller.js.map","(function() {\n  var VillaEmptyView, VillaItemView, VillaView,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  VillaItemView = (function(superClass) {\n    extend(VillaItemView, superClass);\n\n    function VillaItemView() {\n      return VillaItemView.__super__.constructor.apply(this, arguments);\n    }\n\n    VillaItemView.prototype.template = Handlebars.compile('<li class=\"unit blocks {{status}}\"> <div class=\"villa-ico pull-left icon m-t-10\"></div> <div class=\"pull-left bldg-info\"> <div class=\"info\"> <label>{{unit_name}}</label> </div> {{unit_type}} ({{super_built_up_area}}{{measurement_units}}) <br> <div class=\"text-primary m-t-5 \"> <span class=\"icon-rupee-icn\"></span>{{price}} </div> </div> <div class=\"clearfix\"></div> </li>');\n\n    VillaItemView.prototype.initialize = function() {\n      return this.$el.prop(\"id\", 'unit' + this.model.get(\"id\"));\n    };\n\n    VillaItemView.prototype.serializeData = function() {\n      var availability, data, response;\n      data = VillaItemView.__super__.serializeData.call(this);\n      response = window.unit.getUnitDetails(this.model.get('id'));\n      data.unit_type = response[1].get('name');\n      data.super_built_up_area = response[0].get('super_built_up_area');\n      availability = this.model.get('availability');\n      data.status = s.decapitalize(availability);\n      this.model.set('status', status);\n      data.price = window.numDifferentiation(response[3]);\n      this.model.set('status', data.status);\n      data.measurement_units = project.get('measurement_units');\n      return data;\n    };\n\n    VillaItemView.prototype.events = {\n      'click .unit': function(e) {\n        if (this.model.get('status') === 'available') {\n          return CommonFloor.navigate('/unit-view/' + this.model.get('id'), true);\n        }\n      }\n    };\n\n    return VillaItemView;\n\n  })(Marionette.ItemView);\n\n  VillaEmptyView = (function(superClass) {\n    extend(VillaEmptyView, superClass);\n\n    function VillaEmptyView() {\n      return VillaEmptyView.__super__.constructor.apply(this, arguments);\n    }\n\n    VillaEmptyView.prototype.template = 'No units added';\n\n    return VillaEmptyView;\n\n  })(Marionette.ItemView);\n\n  VillaView = (function(superClass) {\n    extend(VillaView, superClass);\n\n    function VillaView() {\n      return VillaView.__super__.constructor.apply(this, arguments);\n    }\n\n    VillaView.prototype.template = Handlebars.compile('<div class=\"col-md-12 us-right-content\"> <div class=\"list-view-container animated fadeIn\"> <span class=\"pull-left top-legend\"> <ul> <li class=\"na\">N/A</li> </ul> </span> <h2 class=\"text-center\">List of Villas</h2> <hr class=\"margin-none\"> <div class=\"text-center\"> <ul class=\"prop-select\"> <li class=\"prop-type buildings hidden\">Buildings</li> <li class=\"prop-type Villas active \">Villas</li> <li class=\"prop-type Plots hidden\">Plots</li> </ul> </div> <div class=\"legend\"> <ul> <li class=\"available\">AVAILABLE</li> <li class=\"sold\">SOLD</li> <li class=\"blocked\">BLOCKED</li> <li class=\"na\">N/A</li> </ul> </div> <div class=\"clearfix\"></div> <div class=\"villa-list\"> <ul class=\"units eight\"> </ul> </div> </div> </div>');\n\n    VillaView.prototype.childView = VillaItemView;\n\n    VillaView.prototype.childViewContainer = '.units';\n\n    VillaView.prototype.events = {\n      'click .buildings': function(e) {\n        var data, units;\n        units = buildingCollection;\n        data = {};\n        data.units = units;\n        data.type = 'building';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        return new CommonFloor.BuildingListCtrl({\n          region: this.region\n        });\n      },\n      'click .Villas': function(e) {\n        var data, units;\n        units = bunglowVariantCollection.getBunglowUnits();\n        data = {};\n        data.units = units;\n        data.type = 'villa';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        return new CommonFloor.VillaListCtrl({\n          region: this.region\n        });\n      },\n      'click .Plots': function(e) {\n        var data, units;\n        units = plotVariantCollection.getPlotUnits();\n        data = {};\n        data.units = units;\n        data.type = 'plot';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        return new CommonFloor.PlotListCtrl({\n          region: this.region\n        });\n      }\n    };\n\n    VillaView.prototype.onShow = function() {\n      if (buildingCollection.length !== 0) {\n        $('.buildings').removeClass('hidden');\n      }\n      if (plotVariantCollection.length !== 0) {\n        return $('.Plots').removeClass('hidden');\n      }\n    };\n\n    return VillaView;\n\n  })(Marionette.CompositeView);\n\n  CommonFloor.VillaListCtrl = (function(superClass) {\n    extend(VillaListCtrl, superClass);\n\n    function VillaListCtrl() {\n      this.loadController = bind(this.loadController, this);\n      return VillaListCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    VillaListCtrl.prototype.initialize = function() {\n      var newUnits, temp, unitsCollection, view;\n      newUnits = bunglowVariantCollection.getBunglowUnits();\n      temp = [];\n      $.each(newUnits, function(index, value) {\n        if (value.get('availability') !== 'archived') {\n          return temp.push(value);\n        }\n      });\n      unitsCollection = new Backbone.Collection(temp);\n      this.view = view = new VillaView({\n        collection: unitsCollection\n      });\n      this.listenTo(this.view, \"load:units\", this.loadController);\n      return this.show(view);\n    };\n\n    VillaListCtrl.prototype.loadController = function(data) {\n      return Backbone.trigger(\"load:units\", data);\n    };\n\n    return VillaListCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/project-list-view/villa.list.controller.js.map","(function() {\n  var ApartmentsView,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  CommonFloor.ApartmentsListView = (function(superClass) {\n    extend(ApartmentsListView, superClass);\n\n    function ApartmentsListView() {\n      return ApartmentsListView.__super__.constructor.apply(this, arguments);\n    }\n\n    ApartmentsListView.prototype.template = '#apartment-list-template';\n\n    ApartmentsListView.prototype.onShow = function() {\n      return $('#leftregion').hide();\n    };\n\n    return ApartmentsListView;\n\n  })(Marionette.LayoutView);\n\n  CommonFloor.ApartmentsListCtrl = (function(superClass) {\n    extend(ApartmentsListCtrl, superClass);\n\n    function ApartmentsListCtrl() {\n      return ApartmentsListCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    ApartmentsListCtrl.prototype.initialize = function() {\n      if (jQuery.isEmptyObject(project.toJSON())) {\n        project.setProjectAttributes(PROJECTID);\n        CommonFloor.loadJSONData();\n      }\n      if (apartmentVariantMasterCollection.length === 0) {\n        return this.show(new CommonFloor.NothingFoundView);\n      } else {\n        return this.show(new CommonFloor.ApartmentsListView);\n      }\n    };\n\n    return ApartmentsListCtrl;\n\n  })(Marionette.RegionController);\n\n  CommonFloor.TopApartmentView = (function(superClass) {\n    extend(TopApartmentView, superClass);\n\n    function TopApartmentView() {\n      return TopApartmentView.__super__.constructor.apply(this, arguments);\n    }\n\n    TopApartmentView.prototype.template = Handlebars.compile('<div class=\"container-fluid animated fadeIn\"> <div class=\"row\"> <div class=\"col-md-12 col-xs-12 col-sm-12\"> <div class=\"breadcrumb-bar\"> <a class=\"unit_back\" href=\"#\"></a> </div> <div class=\"header-info\"> <h2 class=\"pull-left proj-name\">{{project_title}} - {{name}}</h2> <div class=\"proj-type-count\"> <h2 class=\"pull-left\">{{results}}</h2><p class=\"pull-left\">Apartment(s)/Penthouse(s)</p> </div> <div class=\"pull-left filter-result full\"> {{#filters}} {{#each this}} {{#each this}} <div class=\"filter-pill\"> {{name}} <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\" data-index=\"{{index}}\"></span> </div> {{/each}} {{/each}} {{/filters}} {{#area}} <div class=\"filter-pill\"> {{name}} {{type}} <span class=\"icon-cross \" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\" ></span> </div> {{/area}} {{#budget}} <div class=\"filter-pill\">  <span class=\"icon-rupee-icn\"></span>{{name}} {{type}}</span> <span class=\"icon-cross \" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> {{/budget}} {{#views}} <div class=\"filter-pill\"> {{name}}  <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" ></span> </div> {{/views}} {{#facings}} <div class=\"filter-pill\"> {{name}} <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" ></span> </div> {{/facings}} {{#floor}} <div class=\"filter-pill\"> {{name}} {{type}} <span class=\"icon-cross floor\" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> {{/floor}} {{#status}} <div class=\"filter-pill\"> {{name}} {{type}} <span class=\"icon-cross \" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> {{/status}} </div> </div> </div> </div> </div>');\n\n    TopApartmentView.prototype.ui = {\n      unitBack: '.unit_back',\n      unitTypes: '.unit_types',\n      priceMin: '.price_min',\n      priceMax: '.price_max',\n      status: '#filter_available',\n      apply: '.apply',\n      variantNames: '.variant_names',\n      area: '#filter_area',\n      budget: '#filter_budget',\n      types: '.types',\n      floor: '.floor',\n      filter_flooring: '.filter_flooring',\n      views: '.views',\n      facings: '.facings'\n    };\n\n    TopApartmentView.prototype.initialize = function() {\n      var building_id, url;\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      return this.building_id = building_id;\n    };\n\n    TopApartmentView.prototype.serializeData = function() {\n      var data, main, mainFilters, model, newTemp, results, temp, units;\n      data = TopApartmentView.__super__.serializeData.call(this);\n      units = Marionette.getOption(this, 'units');\n      data.units = units.length;\n      data.project_title = project.get('project_title');\n      main = CommonFloor.getStepFilters();\n      mainFilters = main[0].filters[0];\n      data.filters = [];\n      if (!_.isUndefined(mainFilters)) {\n        data.filters = main[0].filters[0].filters;\n      }\n      data.area = main[0].area;\n      data.budget = main[0].price;\n      data.status = main[0].status;\n      data.floor = main[0].floor;\n      data.views = main[0].views;\n      data.facings = main[0].facings;\n      results = apartmentVariantCollection.getApartmentUnits();\n      temp = new Backbone.Collection(results);\n      newTemp = temp.where({\n        'building_id': parseInt(this.building_id)\n      });\n      data.results = newTemp.length;\n      model = buildingMasterCollection.findWhere({\n        'id': this.building_id\n      });\n      data.name = model.get('building_name');\n      return data;\n    };\n\n    TopApartmentView.prototype.events = function() {\n      return {\n        'click @ui.types': function(e) {\n          var arr, index;\n          arr = CommonFloor.defaults['type'].split(',');\n          index = arr.indexOf($(e.target).attr('data-id'));\n          arr.splice(index, 1);\n          CommonFloor.defaults['type'] = arr.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.unitBack': function(e) {\n          var previousRoute;\n          e.preventDefault();\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          previousRoute = CommonFloor.router.previous();\n          if (Object.keys(project.get('project_master')).length === 0) {\n            return CommonFloor.navigate('/list-view', true);\n          } else {\n            return CommonFloor.navigate('/master-view', true);\n          }\n        },\n        'click @ui.unitTypes': function(e) {\n          var unitTypes;\n          unitTypes = CommonFloor.defaults['apartment']['unit_type_id'].split(',');\n          unitTypes = _.without(unitTypes, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['apartment']['unit_type_id'] = unitTypes.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.variantNames': function(e) {\n          var variantNames;\n          variantNames = CommonFloor.defaults['apartment']['unit_variant_id'].split(',');\n          variantNames = _.without(variantNames, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['apartment']['unit_variant_id'] = variantNames.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.status': function(e) {\n          CommonFloor.defaults['common']['availability'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.area': function(e) {\n          CommonFloor.defaults['common']['area_max'] = \"\";\n          CommonFloor.defaults['common']['area_min'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.budget': function(e) {\n          CommonFloor.defaults['common']['price_max'] = \"\";\n          CommonFloor.defaults['common']['price_min'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.floor': function(e) {\n          CommonFloor.defaults['common']['floor_max'] = \"\";\n          CommonFloor.defaults['common']['floor_min'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.floor': function(e) {\n          CommonFloor.defaults['common']['floor_max'] = \"\";\n          CommonFloor.defaults['common']['floor_min'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.facings': function(e) {\n          var types;\n          types = CommonFloor.defaults['common']['facings'].split(',');\n          types = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['common']['facings'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.views': function(e) {\n          var types;\n          types = CommonFloor.defaults['common']['views'].split(',');\n          types = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['common']['views'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.filter_flooring': function(e) {\n          var flooring, index, types;\n          types = [];\n          index = $(e.currentTarget).attr('data-index');\n          if (CommonFloor.defaults['apartment']['attributes'][index] !== \"\") {\n            types = CommonFloor.defaults['apartment']['attributes'][index].split(',');\n          }\n          flooring = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['apartment']['attributes'][index] = flooring.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitCollection.trigger('filter_available');\n          return this.trigger('render:view');\n        }\n      };\n    };\n\n    TopApartmentView.prototype.onShow = function() {\n      var results;\n      results = CommonFloor.getFilters();\n      if (results.length === 0) {\n        return $('.proj-type-count').text('No results found');\n      }\n    };\n\n    return TopApartmentView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.TopApartmentCtrl = (function(superClass) {\n    extend(TopApartmentCtrl, superClass);\n\n    function TopApartmentCtrl() {\n      return TopApartmentCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    TopApartmentCtrl.prototype.initialize = function() {\n      this.renderTopView();\n      return unitTempCollection.bind(\"filter_available\", this.renderTopView, this);\n    };\n\n    TopApartmentCtrl.prototype.renderTopView = function() {\n      var buildingModel, building_id, response, url;\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      response = window.building.getBuildingUnits(building_id);\n      buildingModel = buildingMasterCollection.findWhere({\n        id: building_id\n      });\n      this.view = new CommonFloor.TopApartmentView({\n        model: buildingModel,\n        units: response\n      });\n      this.listenTo(this.view, \"render:view\", this.loadController);\n      return this.show(this.view);\n    };\n\n    TopApartmentCtrl.prototype.loadController = function() {\n      window.unitTypes = [];\n      window.unitVariants = [];\n      window.variantNames = [];\n      window.price = '';\n      window.area = '';\n      window.type = [];\n      this.region = new Marionette.Region({\n        el: '#filterregion'\n      });\n      return new CommonFloor.FilterApartmentCtrl({\n        region: this.region\n      });\n    };\n\n    return TopApartmentCtrl;\n\n  })(Marionette.RegionController);\n\n  CommonFloor.LeftApartmentView = (function(superClass) {\n    extend(LeftApartmentView, superClass);\n\n    function LeftApartmentView() {\n      return LeftApartmentView.__super__.constructor.apply(this, arguments);\n    }\n\n    LeftApartmentView.prototype.template = Handlebars.compile('<div class=\"col-md-3 col-xs-12 col-sm-12 search-left-content leftview\"></div>');\n\n    LeftApartmentView.prototype.onShow = function() {\n      return $('#leftregion').hide();\n    };\n\n    return LeftApartmentView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.LeftApartmentCtrl = (function(superClass) {\n    extend(LeftApartmentCtrl, superClass);\n\n    function LeftApartmentCtrl() {\n      return LeftApartmentCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    LeftApartmentCtrl.prototype.initialize = function() {\n      return this.show(new CommonFloor.LeftApartmentView);\n    };\n\n    return LeftApartmentCtrl;\n\n  })(Marionette.RegionController);\n\n  ApartmentsView = (function(superClass) {\n    extend(ApartmentsView, superClass);\n\n    function ApartmentsView() {\n      return ApartmentsView.__super__.constructor.apply(this, arguments);\n    }\n\n    ApartmentsView.prototype.template = Handlebars.compile('<li class=\"unit blocks {{status}}\"> <div class=\"bldg-img\"></div> <div class=\"{{type}}-ico pull-left icon\"></div> <div class=\"pull-left bldg-info\"> <div class=\"info\"> <label>{{unit_name}} (Floor - {{floor}} )</label> </div> ({{unit_type}} {{super_built_up_area}} {{measurement_units}})<br> <div class=\"text-primary m-t-5\"><span class=\"icon-rupee-icn\"></span>{{price}}</div> </div> <div class=\"clearfix\"></div> </li>');\n\n    ApartmentsView.prototype.serializeData = function() {\n      var availability, data, property, response, unitType;\n      data = ApartmentsView.__super__.serializeData.call(this);\n      response = window.unit.getUnitDetails(this.model.get('id'));\n      data.unit_type = response[1].get('name');\n      data.super_built_up_area = response[0].get('super_built_up_area');\n      availability = this.model.get('availability');\n      data.status = s.decapitalize(availability);\n      this.model.set('status', status);\n      data.price = window.numDifferentiation(response[3]);\n      unitType = unitTypeMasterCollection.findWhere({\n        'id': this.model.get('unit_type_id')\n      });\n      property = window.propertyTypes[unitType.get('property_type_id')];\n      data.property = s.capitalize(property);\n      data.floor = this.model.get('floor');\n      data.measurement_units = project.get('measurement_units');\n      data.type = response[2];\n      return data;\n    };\n\n    ApartmentsView.prototype.events = {\n      'click .unit': function(e) {\n        if (this.model.get('availability') === 'available') {\n          return CommonFloor.navigate('/unit-view/' + this.model.get('id'), true);\n        }\n      }\n    };\n\n    return ApartmentsView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.CenterApartmentView = (function(superClass) {\n    extend(CenterApartmentView, superClass);\n\n    function CenterApartmentView() {\n      return CenterApartmentView.__super__.constructor.apply(this, arguments);\n    }\n\n    CenterApartmentView.prototype.template = '<div> <div class=\"col-md-12 us-right-content\"> <div class=\"list-view-container\"> <!--<div class=\"controls map-View\"> <div class=\"toggle\"> <a href=\"#\" class=\"map \">Map</a><a href=\"#\" class=\"list active\">List</a> </div> </div>--> <div class=\"legend clearfix\"> <ul> <li class=\"available\">AVAILABLE</li> <li class=\"sold\">SOLD</li> <li class=\"blocked\">BLOCKED</li> <li class=\"na\">N/A</li> </ul> </div> <h2 class=\"text-center\">List of Apartments/Penthouse <span class=\"pull-right top-legend\">     <ul> <li class=\"na\">N/A</li> </ul></span></h2><hr> <div class=\"villa-list\"> <ul class=\"units eight\"> </ul> </div> </div> </div> </div>';\n\n    CenterApartmentView.prototype.childView = ApartmentsView;\n\n    CenterApartmentView.prototype.childViewContainer = '.units';\n\n    CenterApartmentView.prototype.events = {\n      'click .map': function(e) {\n        var building_id, url;\n        e.preventDefault();\n        url = Backbone.history.fragment;\n        building_id = parseInt(url.split('/')[1]);\n        return CommonFloor.navigate('/building/' + building_id + '/master-view', true);\n      },\n      'click .list': function(e) {\n        var building_id, url;\n        e.preventDefault();\n        url = Backbone.history.fragment;\n        building_id = parseInt(url.split('/')[1]);\n        return CommonFloor.navigate('/building/' + building_id + '/apartments', true);\n      }\n    };\n\n    return CenterApartmentView;\n\n  })(Marionette.CompositeView);\n\n  CommonFloor.CenterApartmentCtrl = (function(superClass) {\n    extend(CenterApartmentCtrl, superClass);\n\n    function CenterApartmentCtrl() {\n      return CenterApartmentCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    CenterApartmentCtrl.prototype.initialize = function() {\n      this.renderListView();\n      return unitTempCollection.bind(\"filter_available\", this.renderListView, this);\n    };\n\n    CenterApartmentCtrl.prototype.renderListView = function() {\n      var building_id, region, response, temp, unitsCollection, url;\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      response = window.building.getBuildingUnits(building_id);\n      if (response.length === 0 && url.split('/')[2] === 'apartments') {\n        region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        new CommonFloor.NoUnitsCtrl({\n          region: region\n        });\n        return;\n      }\n      temp = [];\n      $.each(response, function(index, value) {\n        if (value.get('availability') !== 'archived') {\n          return temp.push(value);\n        }\n      });\n      unitsCollection = new Backbone.Collection(temp);\n      this.view = new CommonFloor.CenterApartmentView({\n        collection: unitsCollection\n      });\n      return this.show(this.view);\n    };\n\n    return CenterApartmentCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/building-step3/apartments.list.controller.js.map","(function() {\n  var ApartmentsView, api, breakPoints, currentBreakPoint,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  api = \"\";\n\n  currentBreakPoint = 0;\n\n  breakPoints = [];\n\n  CommonFloor.ApartmentsMasterView = (function(superClass) {\n    extend(ApartmentsMasterView, superClass);\n\n    function ApartmentsMasterView() {\n      return ApartmentsMasterView.__super__.constructor.apply(this, arguments);\n    }\n\n    ApartmentsMasterView.prototype.template = '#apartment-master-template';\n\n    return ApartmentsMasterView;\n\n  })(Marionette.LayoutView);\n\n  CommonFloor.ApartmentsMasterCtrl = (function(superClass) {\n    extend(ApartmentsMasterCtrl, superClass);\n\n    function ApartmentsMasterCtrl() {\n      return ApartmentsMasterCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    ApartmentsMasterCtrl.prototype.initialize = function() {\n      if (jQuery.isEmptyObject(project.toJSON())) {\n        project.setProjectAttributes(PROJECTID);\n        CommonFloor.loadJSONData();\n      }\n      if (apartmentVariantMasterCollection.length === 0) {\n        return this.show(new CommonFloor.NothingFoundView);\n      } else {\n        return this.show(new CommonFloor.ApartmentsMasterView);\n      }\n    };\n\n    return ApartmentsMasterCtrl;\n\n  })(Marionette.RegionController);\n\n  CommonFloor.TopApartmentMasterView = (function(superClass) {\n    extend(TopApartmentMasterView, superClass);\n\n    function TopApartmentMasterView() {\n      return TopApartmentMasterView.__super__.constructor.apply(this, arguments);\n    }\n\n    TopApartmentMasterView.prototype.template = Handlebars.compile('<div class=\"container-fluid animated fadeIn\"> <div class=\"row\"> <div class=\"col-md-12 col-xs-12 col-sm-12\"> <div class=\"breadcrumb-bar\"> <a class=\"unit_back\" href=\"#\"></a> </div> <div class=\"header-info\"> <h2 class=\"pull-left proj-name\">{{project_title}} - {{name}}</h2> <div class=\"proj-type-count\"> <h2 class=\"pull-left\">{{results}}</h2><p class=\"pull-left\">Apartment(s)/Penthouse(s)</p> </div> <div class=\"pull-left filter-result full\"> <ul  id=\"flexiselDemo1\"> {{#filters}} {{#each this}} {{#each this}} <li> <div class=\"filter-pill\"> {{name}} <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" data-index=\"{{index}}\" data-type=\"{{typename}}\"></span> </div> </li> {{/each}} {{/each}} {{/filters}} {{#area}} <li> <div class=\"filter-pill\"> {{name}} {{type}} <span class=\"icon-cross \" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> </li> {{/area}} {{#budget}} <li> <div class=\"filter-pill\">  <span class=\"icon-rupee-icn\"></span>{{name}} {{type}}</span> <span class=\"icon-cross \" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> </li> {{/budget}} {{#views}} <li> <div class=\"filter-pill\"> {{name}}  <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" ></span> </div> </li> {{/views}} {{#facings}} <li> <div class=\"filter-pill\"> {{name}} <span class=\"icon-cross {{classname}}\" id=\"{{id_name}}\" data-id=\"{{id}}\" ></span> </div> </li> {{/facings}} {{#floor}} <li> <div class=\"filter-pill\"> {{name}} {{type}} <span class=\"icon-cross floor\" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> </li> {{/floor}} {{#status}} <li> <div class=\"filter-pill\"> {{name}} {{type}} <span class=\"icon-cross \" id=\"{{id_name}}\" data-id=\"{{id}}\" data-type=\"{{typename}}\"></span> </div> </li> {{/status}} </ul> </div> </div> </div> </div> </div>');\n\n    TopApartmentMasterView.prototype.ui = {\n      unitBack: '.unit_back',\n      unitTypes: '.unit_types',\n      priceMin: '.price_min',\n      priceMax: '.price_max',\n      status: '#filter_available',\n      apply: '.apply',\n      variantNames: '.variant_names',\n      area: '#filter_area',\n      budget: '#filter_budget',\n      types: '.types',\n      floor: '.floor',\n      filter_flooring: '.filter_flooring',\n      views: '.views',\n      facings: '.facings'\n    };\n\n    TopApartmentMasterView.prototype.initialize = function() {\n      var building_id, url;\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      return this.building_id = building_id;\n    };\n\n    TopApartmentMasterView.prototype.serializeData = function() {\n      var building_id, data, main, mainFilters, model, newTemp, results, temp, units, url;\n      data = TopApartmentMasterView.__super__.serializeData.call(this);\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      units = Marionette.getOption(this, 'units');\n      data.units = units.length;\n      data.project_title = project.get('project_title');\n      main = CommonFloor.getStepFilters();\n      mainFilters = main[0].filters[0];\n      data.filters = [];\n      if (!_.isUndefined(mainFilters)) {\n        data.filters = main[0].filters[0].filters;\n      }\n      data.area = main[0].area;\n      data.budget = main[0].price;\n      data.status = main[0].status;\n      data.floor = main[0].floor;\n      data.views = main[0].views;\n      data.facings = main[0].facings;\n      results = unitCollection.length;\n      temp = unitCollection;\n      newTemp = temp.where({\n        'building_id': parseInt(building_id)\n      });\n      data.results = newTemp.length;\n      model = buildingMasterCollection.findWhere({\n        'id': building_id\n      });\n      data.name = model.get('building_name');\n      return data;\n    };\n\n    TopApartmentMasterView.prototype.events = function() {\n      return {\n        'click @ui.types': function(e) {\n          var arr, index;\n          arr = CommonFloor.defaults['type'].split(',');\n          index = arr.indexOf($(e.currentTarget).attr('data-id'));\n          arr.splice(index, 1);\n          CommonFloor.defaults['type'] = arr.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.unitBack': function(e) {\n          var previousRoute;\n          e.preventDefault();\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          previousRoute = CommonFloor.router.previous();\n          if (Object.keys(project.get('project_master')).length === 0) {\n            return CommonFloor.navigate('/list-view', true);\n          } else {\n            return CommonFloor.navigate('/master-view', true);\n          }\n        },\n        'click @ui.unitTypes': function(e) {\n          var unitTypes;\n          unitTypes = CommonFloor.defaults['apartment']['unit_type_id'].split(',');\n          unitTypes = _.without(unitTypes, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['apartment']['unit_type_id'] = unitTypes.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.variantNames': function(e) {\n          var variantNames;\n          variantNames = CommonFloor.defaults['apartment']['unit_variant_id'].split(',');\n          variantNames = _.without(variantNames, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['apartment']['unit_variant_id'] = variantNames.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.status': function(e) {\n          CommonFloor.defaults['common']['availability'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.area': function(e) {\n          CommonFloor.defaults['common']['area_max'] = \"\";\n          CommonFloor.defaults['common']['area_min'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.budget': function(e) {\n          CommonFloor.defaults['common']['price_max'] = \"\";\n          CommonFloor.defaults['common']['price_min'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.floor': function(e) {\n          CommonFloor.defaults['common']['floor_max'] = \"\";\n          CommonFloor.defaults['common']['floor_min'] = \"\";\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.facings': function(e) {\n          var types;\n          types = CommonFloor.defaults['common']['facings'].split(',');\n          types = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['common']['facings'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.views': function(e) {\n          var types;\n          types = CommonFloor.defaults['common']['views'].split(',');\n          types = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['common']['views'] = types.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger(\"filter_available\");\n          return this.trigger('render:view');\n        },\n        'click @ui.filter_flooring': function(e) {\n          var flooring, index, types;\n          types = [];\n          index = $(e.currentTarget).attr('data-index');\n          if (CommonFloor.defaults['apartment']['attributes'][index] !== \"\") {\n            types = CommonFloor.defaults['apartment']['attributes'][index].split(',');\n          }\n          flooring = _.without(types, $(e.currentTarget).attr('data-id'));\n          CommonFloor.defaults['apartment']['attributes'][index] = flooring.join(',');\n          unitCollection.reset(unitMasterCollection.toArray());\n          CommonFloor.resetCollections();\n          CommonFloor.filterStepNew();\n          unitTempCollection.trigger('filter_available');\n          return this.trigger('render:view');\n        }\n      };\n    };\n\n    TopApartmentMasterView.prototype.onShow = function() {\n      var results;\n      $(\"#flexiselDemo1\").flexisel({\n        visibleItems: 11,\n        animationSpeed: 200,\n        autoPlay: false,\n        autoPlaySpeed: 1000,\n        clone: false,\n        enableResponsiveBreakpoints: true,\n        responsiveBreakpoints: {\n          portrait: {\n            changePoint: 480,\n            visibleItems: 5\n          },\n          landscape: {\n            changePoint: 640,\n            visibleItems: 6\n          },\n          tablet: {\n            changePoint: 768,\n            visibleItems: 3\n          }\n        }\n      });\n      results = CommonFloor.getFilters();\n      if (results.length === 0) {\n        return $('.proj-type-count').text('No results found');\n      }\n    };\n\n    return TopApartmentMasterView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.TopApartmentMasterCtrl = (function(superClass) {\n    extend(TopApartmentMasterCtrl, superClass);\n\n    function TopApartmentMasterCtrl() {\n      return TopApartmentMasterCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    TopApartmentMasterCtrl.prototype.initialize = function() {\n      this.renderMasterTopView();\n      return unitTempCollection.bind(\"filter_available\", this.renderMasterTopView, this);\n    };\n\n    TopApartmentMasterCtrl.prototype.renderMasterTopView = function() {\n      var buildingModel, building_id, response, url;\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      response = window.building.getBuildingUnits(building_id);\n      buildingModel = buildingMasterCollection.findWhere({\n        id: building_id\n      });\n      this.view = new CommonFloor.TopApartmentMasterView({\n        model: buildingModel,\n        units: response\n      });\n      this.listenTo(this.view, \"render:view\", this.loadController);\n      return this.show(this.view);\n    };\n\n    TopApartmentMasterCtrl.prototype.loadController = function() {\n      window.unitTypes = [];\n      window.unitVariants = [];\n      window.variantNames = [];\n      window.price = '';\n      window.area = '';\n      window.type = [];\n      this.region = new Marionette.Region({\n        el: '#filterregion'\n      });\n      return new CommonFloor.FilterApartmentCtrl({\n        region: this.region\n      });\n    };\n\n    return TopApartmentMasterCtrl;\n\n  })(Marionette.RegionController);\n\n  ApartmentsView = (function(superClass) {\n    extend(ApartmentsView, superClass);\n\n    function ApartmentsView() {\n      return ApartmentsView.__super__.constructor.apply(this, arguments);\n    }\n\n    ApartmentsView.prototype.template = Handlebars.compile('\t<div class=\"row\"> <div class=\"col-xs-5  info\"> <b class=\"bold\">{{floor}}</b>-{{unit_name}} </div> <div class=\"col-xs-3  info\"> {{unit_type}} </div> <div class=\"col-xs-4 text-primary\"> <span class=\"icon-rupee-icn\"></span>{{price}} <!--<span class=\"tick\"></span>--> </div> </div>');\n\n    ApartmentsView.prototype.initialize = function() {\n      return this.$el.prop(\"id\", 'apartment' + this.model.get(\"id\"));\n    };\n\n    ApartmentsView.prototype.ui = {\n      onview: '.onview'\n    };\n\n    ApartmentsView.prototype.tagName = 'li';\n\n    ApartmentsView.prototype.className = 'unit blocks';\n\n    ApartmentsView.prototype.serializeData = function() {\n      var availability, data, property, response, status, unitType;\n      data = ApartmentsView.__super__.serializeData.call(this);\n      response = window.unit.getUnitDetails(this.model.get('id'));\n      data.unit_type = response[1].get('name');\n      data.super_built_up_area = response[0].get('super_built_up_area');\n      availability = this.model.get('availability');\n      status = s.decapitalize(availability);\n      this.model.set('status', status);\n      data.price = window.numDifferentiation(response[3]);\n      unitType = unitTypeMasterCollection.findWhere({\n        'id': this.model.get('unit_type_id')\n      });\n      property = window.propertyTypes[unitType.get('property_type_id')];\n      data.property = s.capitalize(property);\n      data.floor = 'F' + this.model.get('floor');\n      return data;\n    };\n\n    ApartmentsView.prototype.events = {\n      'mouseover': function(e) {\n        var html, id;\n        id = this.model.get('id');\n        html = this.getHtml(this.model.get('id'));\n        $('#apartment' + id).addClass(' active');\n        $('#' + id).attr('class', 'layer apartment svg_active ' + this.model.get('availability'));\n        $('#' + id).tooltipster('content', html);\n        return $('#' + id).tooltipster('show');\n      },\n      'mouseout': function(e) {\n        var id;\n        id = this.model.get('id');\n        $('#apartment' + id).removeClass('active');\n        $('#' + id).attr('class', 'layer apartment ' + this.model.get('availability'));\n        return $('#' + id).tooltipster('hide');\n      },\n      'click': function(e) {\n        var breakpoint;\n        if ($(e.currentTarget).hasClass('onview')) {\n          breakpoint = this.model.get('breakpoint');\n          currentBreakPoint = _.indexOf(breakPoints, breakpoint);\n          return api.playTo(breakpoint, {\n            nearest: true\n          });\n        } else {\n          if (this.model.get('availability') === 'available') {\n            return CommonFloor.navigate('/unit-view/' + this.model.get('id'), true);\n          }\n        }\n      }\n    };\n\n    ApartmentsView.prototype.getHtml = function(id) {\n      var availability, html, price, response, unit;\n      html = \"\";\n      id = parseInt(id);\n      unit = unitCollection.findWhere({\n        'id': id\n      });\n      if (unit === void 0) {\n        html = '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\"> Apartment details not entered </div> </div>';\n        $('.apartment').tooltipster('content', html);\n        return false;\n      }\n      response = window.unit.getUnitDetails(id);\n      price = window.numDifferentiation(response[3]);\n      availability = unit.get('availability');\n      availability = s.decapitalize(availability);\n      html = \"\";\n      html += '<div class=\"svg-info ' + availability + '\"> <div class=\"action-bar\"> <div class=\"apartment\"></div> </div> <div class=\"pull-left\"> <h4 class=\"m-t-0\">' + unit.get('unit_name') + '</h4> <div class=\"details\"> <ul> <li> <h5 class=\"inline-block\">' + response[1].get('name') + '</h5> <span> - ' + response[0].get('super_built_up_area') + ' ' + project.get('measurement_units') + '</span> <!--<label>Variant</label> - ' + response[0].get('unit_variant_name') + '--> </li> </ul> <h5 class=\"m-t-0 m-b-0 price text-primary\"> <span class=\"text-primary icon-rupee-icn\"></span>' + price + '</h5> <span>' + s.capitalize(availability) + '</span> </div> </div>';\n      if (availability === 'available') {\n        html += '<div class=\"circle\"> <a href=\"#unit-view/' + id + '\" class=\"arrow-up icon-chevron-right\"></a> </div> </div>';\n      } else {\n        html += '</div>';\n      }\n      return html;\n    };\n\n    ApartmentsView.prototype.onShow = function() {\n      var availability, classname, id, status;\n      id = this.model.get('id');\n      availability = this.model.get('availability');\n      status = s.decapitalize(availability);\n      classname = $('#apartment' + id).attr('class');\n      $('#apartment' + id).addClass(classname + ' ' + status);\n      return CommonFloor.applyOnViewClass();\n    };\n\n    return ApartmentsView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.LeftApartmentMasterView = (function(superClass) {\n    extend(LeftApartmentMasterView, superClass);\n\n    function LeftApartmentMasterView() {\n      return LeftApartmentMasterView.__super__.constructor.apply(this, arguments);\n    }\n\n    LeftApartmentMasterView.prototype.template = '<div> <div id=\"trig\" class=\"toggle-button\"></div> <div id=\"view_toggle\" class=\"toggle-view-button map\"></div> <div class=\"list-view-container w-map animated fadeInLeft\"> <div class=\"advncd-filter-wrp  unit-list\"> <div class=\"legend clearfix\"> <ul> <li class=\"available\">AVAILABLE</li> <li class=\"sold\">SOLD</li> <li class=\"blocked\">BLOCKED</li> <li class=\"na\">N/A</li> </ul> </div> <div class=\"sort-unit\"> All Units <input type=\"checkbox\" name=\"inview\" id=\"inview\" checked data-toggle=\"toggle\" data-on=\"&nbsp;\" data-off=\"&nbsp;\" data-onstyle=\"warning\" data-offstyle=\"warning\"> In View </div> <p class=\"text-center help-text\">Hover on the units for more details</p> <ul class=\"units one apartments\"> </ul> </div> </div> </div>';\n\n    LeftApartmentMasterView.prototype.childView = ApartmentsView;\n\n    LeftApartmentMasterView.prototype.childViewContainer = '.units';\n\n    LeftApartmentMasterView.prototype.ui = {\n      viewtog: '#view_toggle',\n      trig: '#trig',\n      notinview: '#notinview',\n      inview: '#inview'\n    };\n\n    LeftApartmentMasterView.prototype.events = {\n      'change @ui.inview': function(e) {\n        if ($(e.currentTarget).is(':checked')) {\n          return this.showInView();\n        } else {\n          return this.showNotInView();\n        }\n      },\n      'click @ui.trig': function(e) {\n        return $('.list-container').toggleClass('closed');\n      },\n      'click @ui.viewtog': function(e) {\n        $('.us-left-content').toggleClass('not-visible visible');\n        return $('.us-right-content').toggleClass('not-visible visible');\n      }\n    };\n\n    LeftApartmentMasterView.prototype.showInView = function() {\n      return $('.onview').hide();\n    };\n\n    LeftApartmentMasterView.prototype.showNotInView = function() {\n      return $('.onview').show();\n    };\n\n    LeftApartmentMasterView.prototype.onShow = function() {\n      return this.ui.inview.bootstrapToggle();\n    };\n\n    return LeftApartmentMasterView;\n\n  })(Marionette.CompositeView);\n\n  CommonFloor.LeftApartmentMasterCtrl = (function(superClass) {\n    extend(LeftApartmentMasterCtrl, superClass);\n\n    function LeftApartmentMasterCtrl() {\n      return LeftApartmentMasterCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    LeftApartmentMasterCtrl.prototype.initialize = function() {\n      this.renderLeftView();\n      return unitTempCollection.bind(\"filter_available\", this.renderLeftView, this);\n    };\n\n    LeftApartmentMasterCtrl.prototype.renderLeftView = function() {\n      var building_id, region, response, temp, unitsCollection, url;\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      response = window.building.getBuildingUnits(building_id);\n      if (response.length === 0) {\n        region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        new CommonFloor.NoUnitsCtrl({\n          region: region\n        });\n        return;\n      }\n      temp = [];\n      $.each(response, function(index, value) {\n        if (value.get('availability') !== 'archived') {\n          return temp.push(value);\n        }\n      });\n      unitsCollection = new Backbone.Collection(temp);\n      this.view = new CommonFloor.LeftApartmentMasterView({\n        collection: unitsCollection\n      });\n      return this.show(this.view);\n    };\n\n    return LeftApartmentMasterCtrl;\n\n  })(Marionette.RegionController);\n\n  CommonFloor.CenterApartmentMasterView = (function(superClass) {\n    extend(CenterApartmentMasterView, superClass);\n\n    function CenterApartmentMasterView() {\n      return CenterApartmentMasterView.__super__.constructor.apply(this, arguments);\n    }\n\n    CenterApartmentMasterView.prototype.template = Handlebars.compile('<div class=\"col-md-12 col-sm-12 col-xs-12 us-right-content mobile visible animated fadeIn overflow-h\"> <div class=\"legend clearfix\"> <ul> <!--<li class=\"available\">AVAILABLE</li>--> <li class=\"sold\">N/A</li> <!--<li class=\"blocked\">BLOCKED</li> <li class=\"na\">Available</li>--> </ul> </div> <div class=\"zoom-controls\"> <div class=\"zoom-in\"></div> <div class=\"zoom-out\"></div> </div> <div id=\"view_toggle\" class=\"toggle-view-button list\"></div> <div id=\"trig\" class=\"toggle-button hidden\">List View</div> <div class=\" master animated fadeIn\"> <div class=\"single-bldg\"> <div class=\"prev\"></div> <div class=\"next\"></div> </div> <div id=\"svg_loader\" class=\"img-loader\"> <div class=\"square\" ></div> <div class=\"square\"></div> <div class=\"square last\"></div> <div class=\"square clear\"></div> <div class=\"square\"></div> <div class=\"square last\"></div> <div class=\"square clear\"></div> <div class=\"square \"></div> <div class=\"square last\"></div> </div> <div class=\"outer-wrap\" STYLE=\"height:100%\"> <div mag-thumb=\"outer\" class=\"home-region\"> <img class=\"zoomimage\" /> </div> <div mag-zoom=\"outer\"> <div id=\"spritespin\" class=\"building-master\"></div> <div class=\"svg-maps animated fadeIn hidden\"> <img class=\"first_image img-responsive\" /> <div class=\"region inactive\"></div> </div> </div> </div> <div id=\"rotate_loader\" class=\"cf-loader hidden\"></div> </div> <div class=\"rotate rotate-controls hidden\"> <div id=\"prev\" class=\"rotate-left\">Left</div> <span class=\"rotate-text\">Rotate</span> <div id=\"next\" class=\"rotate-right\">Right</div> </div> <div class=\"mini-map hidden animated fadeIn\"> <img class=\"firstimage img-responsive\" src=\"\"/> <div class=\"project_master\"></div> </div> </div>');\n\n    CenterApartmentMasterView.prototype.ui = {\n      svgContainer: '.master',\n      viewtog: '#view_toggle',\n      zoomIn: '.Zoomin'\n    };\n\n    CenterApartmentMasterView.prototype.events = {\n      'click @ui.zoomIn': function(e) {\n        $('.apartment').bind('mouseenter');\n        return $('.apartment').on('click');\n      },\n      'click @ui.viewtog': function(e) {\n        $('.us-left-content').toggleClass('not-visible visible');\n        return $('.us-right-content').toggleClass('not-visible visible');\n      },\n      'click #prev': function() {\n        return this.setDetailIndex(currentBreakPoint - 1);\n      },\n      'click #next': function() {\n        return this.setDetailIndex(currentBreakPoint + 1);\n      },\n      'mouseover .apartment': function(e) {\n        var availability, html, id, price, response, status, unit, unitMaster;\n        id = parseInt(e.currentTarget.id);\n        unit = unitCollection.findWhere({\n          'id': id\n        });\n        unitMaster = unitMasterCollection.findWhere({\n          id: id\n        });\n        if (unit === void 0 && unitMaster !== void 0) {\n          html = '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\"> Not in selection </div> </div>';\n          $('.apartment').tooltipster('content', html);\n          return;\n        }\n        response = window.unit.getUnitDetails(id);\n        price = window.numDifferentiation(response[3]);\n        availability = unit.get('availability');\n        availability = s.decapitalize(availability);\n        if (unit === void 0 || availability === 'archived') {\n          html = '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\"> Apartment details not entered </div> </div>';\n          $('.apartment').tooltipster('content', html);\n          return false;\n        }\n        html = \"\";\n        status = s.replaceAll(s.capitalize(availability), \"_\", \" \");\n        html += '<div class=\"svg-info ' + availability + '\"> <div class=\"action-bar\"> <div class=\"' + response[2] + '\"></div> </div> <div class=\"pull-left\"> <h4 class=\"m-t-0\">' + unit.get('unit_name') + '</h4> <div class=\"details\"> <ul> <li> <h5 class=\"inline-block\">' + response[1].get('name') + '</h5> <span> - ' + response[0].get('super_built_up_area') + ' ' + project.get('measurement_units') + '</span> <!--<label>Variant</label> - ' + response[0].get('unit_variant_name') + '--> </li> </ul> <h5 class=\"m-t-0 m-b-0 price text-primary\"> <span class=\"text-primary icon-rupee-icn\"></span>' + price + '</h5> <span>' + status + '</span> </div> </div>';\n        if (availability === 'available') {\n          html += '<a href=\"#unit-view/' + id + '\" class=\"view-unit\"> <div class=\"circle\"> <span class=\"arrow-up icon-chevron-right\"></span> </div> </a> </div>';\n        } else {\n          html += '</div>';\n        }\n        $('#' + id).attr('class', 'layer apartment svg_active ' + availability);\n        $('#apartment' + id).addClass(' active');\n        $('.units').mCustomScrollbar(\"scrollTo\", '#apartment' + id);\n        return $('.apartment').tooltipster('content', html);\n      },\n      'mouseout .apartment': function(e) {\n        var availability, id, unit;\n        id = parseInt(e.currentTarget.id);\n        unit = unitCollection.findWhere({\n          'id': id\n        });\n        if (unit === void 0) {\n          return;\n        }\n        availability = unit.get('availability');\n        availability = s.decapitalize(availability);\n        $('#' + id).attr('class', 'layer apartment ' + availability);\n        return $('#apartment' + id).removeClass(' active');\n      },\n      'mouseover .amenity': function(e) {\n        var html;\n        html = '<div class=\"row\"> <div class=\"col-sm-12 b-r\"> <h4 class=\"text-warning margin-none\">' + $(e.currentTarget).attr('data-amenity-title') + '</h4> <h6 class=\"text-muted\">' + $(e.currentTarget).attr('data-amenity-desc') + '</h6> </div> </div>';\n        return $('.amenity').tooltipster('content', html);\n      },\n      'click .apartment': function(e) {\n        var id, unit;\n        id = parseInt(e.currentTarget.id);\n        unit = unitCollection.findWhere({\n          id: id\n        });\n        if (!(_.isUndefined(unit)) && unit.get('availability') === 'available') {\n          return CommonFloor.navigate('/unit-view/' + id, true);\n        }\n      },\n      'mouseover .next,.prev': function(e) {\n        var buildingModel, cost, floors, html, id, images, price, response, unitTypes;\n        id = parseInt($(e.currentTarget).attr('data-id'));\n        buildingModel = buildingMasterCollection.findWhere({\n          'id': id\n        });\n        images = Object.keys(buildingModel.get('building_master')).length;\n        floors = buildingModel.get('no_of_floors');\n        unitTypes = window.building.getUnitTypes(id);\n        response = window.building.getUnitTypesCount(id, unitTypes);\n        cost = window.building.getMinimumCost(id);\n        price = window.numDifferentiation(cost);\n        html = '<div class=\"svg-info\"> <i class=\"building-ico\"></i> <h5 class=\" m-t-0\">' + buildingModel.get('building_name') + '</h5> <div class=\"details\"> <label>' + floors + ' Floors</label></br> <div class=\"text-primary\"> <span class=\"text-primary facts-icon icon-rupee-icn\"></span>' + price + '</div> </div> </div>';\n        return $(e.currentTarget).tooltipster('content', html);\n      },\n      'click .next,.prev': function(e) {\n        var buildingModel, id;\n        id = parseInt($(e.currentTarget).attr('data-id'));\n        buildingModel = buildingMasterCollection.findWhere({\n          'id': id\n        });\n        if (Object.keys(buildingModel.get('building_master')).length === 0) {\n          return CommonFloor.navigate('/building/' + id + '/apartments', true);\n        } else {\n          return CommonFloor.navigate('/building/' + id + '/master-view', true);\n        }\n      }\n    };\n\n    CenterApartmentMasterView.prototype.onShow = function() {\n      var breakpoints, building, building_id, first, height, svgs, that, transitionImages, url, windowHeight;\n      if ($(window).width() > 991) {\n        window.magne = new Magnificent('[mag-thumb=\"outer\"]', {\n          mode: 'outer',\n          position: 'drag',\n          toggle: false,\n          zoomMax: 3,\n          zoomRate: 2,\n          constrainZoomed: true\n        });\n        window.magne.zoomBy(-1);\n      }\n      windowHeight = $(window).innerHeight() - 56;\n      $('.master').css('height', windowHeight);\n      $('.master').css('min-width', windowHeight * 2);\n      this.getNextPrev();\n      height = this.ui.svgContainer.width() / 2;\n      $('.search-left-content').css('height', height);\n      $('#spritespin').hide();\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      building = buildingMasterCollection.findWhere({\n        id: building_id\n      });\n      transitionImages = [];\n      svgs = {};\n      that = this;\n      breakpoints = building.get('breakpoints');\n      $.each(breakpoints, function(index, value) {\n        return svgs[value] = BASEURL + '/projects/' + PROJECTID + '/buildings/' + building_id + '/master-' + value + '.svg';\n      });\n      $.merge(transitionImages, building.get('building_master'));\n      first = _.values(svgs);\n      $('.first_image').attr('src', transitionImages[breakpoints[0]]);\n      $('.first_image').load(function() {\n        return $('.region').load(first[0], function() {\n          var response;\n          $('#svg_loader').addClass('hidden');\n          that.iniTooltip();\n          CommonFloor.applyAvailabilClasses();\n          CommonFloor.randomClass();\n          CommonFloor.applyFliterClass();\n          CommonFloor.applyOnViewClass();\n          if ($(window).width() > 991) {\n            $(that.el).undelegate('.apartment', 'click');\n            $(that.el).undelegate('.apartment', 'mouseover');\n            that.zoomBuilding();\n            $('.zoomimage').attr('src', transitionImages[breakpoints[0]]);\n          } else {\n            that.loadZoom();\n            $('.first_image').first().css('width', that.ui.svgContainer.width());\n          }\n          response = building.checkRotationView(building_id);\n          $('.svg-maps').removeClass('hidden');\n          $('.mini-map').removeClass('hidden');\n          $('.unassign').attr('style', \"opacity: 0;fill-opacity: 0;\");\n          if (response === 1) {\n            $('.cf-loader').removeClass('hidden');\n            return that.initializeRotate(transitionImages, svgs, building);\n          }\n        }).addClass('active').removeClass('inactive');\n      });\n      this.loadProjectMaster();\n      if ($(window).width() > 991) {\n        return $('.units').mCustomScrollbar({\n          theme: 'cf-scroll'\n        });\n      }\n    };\n\n    CenterApartmentMasterView.prototype.ratioOffsetsFor = function($target, x, y) {\n      return {\n        x: x / $target.width(),\n        y: y / $target.height()\n      };\n    };\n\n    CenterApartmentMasterView.prototype.zoomBuilding = function() {\n      var that;\n      that = this;\n      $(\".mag-lens\").resize(function(e) {\n        var temp;\n        temp = $(e.target).width();\n        if (temp === 398) {\n          $(that.el).undelegate('.apartment', 'click');\n          $(that.el).undelegate('.apartment', 'mouseover');\n          $('.apartment').tooltipster('disable');\n          return that.zoomShow();\n        } else {\n          that.delegateEvents();\n          $('.svg-maps').off('click', '.sold');\n          $('.svg-maps').off('click', '.blocked');\n          $('.svg-maps').off('click', '.not_released');\n          that.iniTooltip();\n          return $('.apartment').tooltipster('enable');\n        }\n      });\n      return that.zoomShow();\n    };\n\n    CenterApartmentMasterView.prototype.zoomShow = function() {\n      var class_array;\n      class_array = ['.available', '.sold', '.blocked', '.not_released', '.booked_by_agent', '.archived'];\n      return $.each(class_array, function(index, value) {\n        return $('.svg-maps').on('click', value, function(e) {\n          var temp, xapoint, xpoint, yapoint, ypoint;\n          clearTimeout(window.renderLoopInterval);\n          xpoint = e.clientX;\n          ypoint = e.clientY;\n          xpoint = xpoint / $(window).width();\n          ypoint = ypoint / $(window).height();\n          xpoint = xpoint.toFixed(1);\n          ypoint = ypoint.toFixed(1);\n          xapoint = xpoint / 10;\n          yapoint = ypoint / 10;\n          temp = window.magne;\n          temp.model.focus = {\n            x: xpoint,\n            y: ypoint\n          };\n          temp.zoomBy(1);\n          return temp.reinit();\n        });\n      });\n    };\n\n    CenterApartmentMasterView.prototype.loadProjectMaster = function() {\n      var first, masterbreakpoints, svgs, transitionImages;\n      svgs = [];\n      masterbreakpoints = project.get('breakpoints');\n      $.each(masterbreakpoints, function(index, value) {\n        return svgs[value] = BASEURL + '/projects/' + PROJECTID + '/master/master-' + value + '.svg';\n      });\n      first = _.values(svgs);\n      transitionImages = [];\n      $.merge(transitionImages, project.get('project_master'));\n      if (project.get('project_master').length !== 0) {\n        return $('.project_master').load(first[0], function() {\n          var building_id, url;\n          $('.unassign').attr('style', \"opacity: 0;fill-opacity: 0;\");\n          $('.firstimage').attr('src', transitionImages[masterbreakpoints[0]]);\n          url = Backbone.history.fragment;\n          building_id = url.split('/')[1];\n          $('.building').each(function(ind, item) {\n            var id;\n            id = parseInt(item.id);\n            return $('#' + id).attr('class', \"layer building no-fill\");\n          });\n          $('.unassign').attr('style', \"opacity: 0;fill-opacity: 0;\");\n          $('.villa,.plot,.amenitym,.booked_by_agent').each(function(ind, item) {\n            var id;\n            id = parseInt(item.id);\n            return $('#' + id).attr('class', \"no-fill\");\n          });\n          return $('#' + building_id + '.building').attr('class', 'layer building svg_active');\n        });\n      }\n    };\n\n    CenterApartmentMasterView.prototype.getNextPrev = function() {\n      var buildingModel, building_id, next, prev, url;\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      buildingModel = buildingMasterCollection.findWhere({\n        'id': building_id\n      });\n      buildingMasterCollection.setRecord(buildingModel);\n      next = buildingMasterCollection.next();\n      if (_.isUndefined(next)) {\n        $('.next').hide();\n      } else {\n        $('.next').attr('data-id', next.get('id'));\n      }\n      prev = buildingMasterCollection.prev();\n      if (_.isUndefined(prev)) {\n        return $('.prev').hide();\n      } else {\n        return $('.prev').attr('data-id', prev.get('id'));\n      }\n    };\n\n    CenterApartmentMasterView.prototype.setDetailIndex = function(index) {\n      $('.region').empty();\n      $('.region').addClass('inactive').removeClass('active');\n      currentBreakPoint = index;\n      if (currentBreakPoint < 0) {\n        currentBreakPoint = breakPoints.length - 1;\n      }\n      if (currentBreakPoint >= breakPoints.length) {\n        currentBreakPoint = 0;\n      }\n      return api.playTo(breakPoints[currentBreakPoint], {\n        nearest: true\n      });\n    };\n\n    CenterApartmentMasterView.prototype.initializeRotate = function(transitionImages, svgs, building) {\n      var building_id, frames, spin, that, url, width;\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      frames = transitionImages;\n      breakPoints = building.get('breakpoints');\n      currentBreakPoint = 0;\n      width = this.ui.svgContainer.width() + 20;\n      $('.svg-maps > div').first().removeClass('inactive').addClass('active').css('width', width);\n      spin = $('#spritespin');\n      spin.spritespin({\n        source: frames,\n        width: this.ui.svgContainer.width(),\n        sense: -1,\n        height: this.ui.svgContainer.width() / 2,\n        animate: false\n      });\n      that = this;\n      api = spin.spritespin(\"api\");\n      spin.bind(\"onFrame\", function() {\n        var data;\n        data = api.data;\n        if (data.frame === data.stopFrame) {\n          url = svgs[data.frame];\n          return $('.region').load(url, function() {\n            that.iniTooltip();\n            CommonFloor.applyAvailabilClasses();\n            CommonFloor.randomClass();\n            CommonFloor.applyFliterClass();\n            CommonFloor.applyOnViewClass();\n            if ($(window).width() < 992) {\n              that.loadZoom();\n            }\n            return $('.unassign').attr('style', \"opacity: 0;fill-opacity: 0;\");\n          }).addClass('active').removeClass('inactive');\n        }\n      });\n      return spin.bind(\"onLoad\", function() {\n        var response;\n        response = building.checkRotationView(building_id);\n        if (response === 1) {\n          $('.first_image').remove();\n          $('.rotate').removeClass('hidden');\n          $('#spritespin').show();\n          $('#rotate_loader').addClass('hidden');\n        }\n        return $('.region').load(url, function() {\n          that.iniTooltip();\n          if ($(window).width() < 992) {\n            that.loadZoom();\n          }\n          CommonFloor.applyAvailabilClasses();\n          CommonFloor.randomClass();\n          CommonFloor.applyFliterClass();\n          CommonFloor.applyOnViewClass();\n          return $('.unassign').attr('style', \"opacity: 0;fill-opacity: 0;\");\n        }).addClass('active').removeClass('inactive');\n      });\n    };\n\n    CenterApartmentMasterView.prototype.iniTooltip = function() {\n      $('.apartment').tooltipster({\n        theme: 'tooltipster-shadow',\n        contentAsHTML: true,\n        onlyOne: true,\n        arrow: false,\n        offsetX: 50,\n        offsetY: -10,\n        trigger: 'hover',\n        interactive: true,\n        functionReady: function(e) {\n          return $('.view-unit').on('click', function(e) {\n            $('.layer').tooltipster('hide');\n            $('svg').attr('class', 'zoom');\n            $('#spritespin').addClass('zoom');\n            $('.us-right-content').addClass('fadeOut');\n            return $('.cf-loader').removeClass('hidden');\n          });\n        }\n      });\n      $('.next').tooltipster({\n        theme: 'tooltipster-shadow circle-tooltip',\n        contentAsHTML: true,\n        onlyOne: true,\n        arrow: false,\n        interactive: true,\n        trigger: 'hover',\n        position: 'left',\n        delay: 50\n      });\n      $('.prev').tooltipster({\n        theme: 'tooltipster-shadow circle-tooltip',\n        contentAsHTML: true,\n        onlyOne: true,\n        arrow: false,\n        interactive: true,\n        trigger: 'hover',\n        position: 'right',\n        delay: 50\n      });\n      return $('.amenity').tooltipster({\n        theme: 'tooltipster-shadow marker-tooltip',\n        contentAsHTML: true,\n        onlyOne: true,\n        arrow: false,\n        trigger: 'hover'\n      });\n    };\n\n    CenterApartmentMasterView.prototype.loadZoom = function() {\n      $('.master').panzoom({\n        contain: 'invert',\n        minScale: 1,\n        maxScale: 2.4,\n        increment: 0.4,\n        $zoomIn: $('.zoom-in'),\n        $zoomOut: $('.zoom-out')\n      });\n      return $('.master polygon').on('mousedown touchstart', function(e) {\n        return e.stopImmediatePropagation();\n      });\n    };\n\n    return CenterApartmentMasterView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.CenterApartmentMasterCtrl = (function(superClass) {\n    extend(CenterApartmentMasterCtrl, superClass);\n\n    function CenterApartmentMasterCtrl() {\n      return CenterApartmentMasterCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    CenterApartmentMasterCtrl.prototype.initialize = function() {\n      return this.show(new CommonFloor.CenterApartmentMasterView);\n    };\n\n    return CenterApartmentMasterCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/building-step3/apartments.master.controller.js.map","(function() {\n  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  window.unitTypes = [];\n\n  window.unitVariants = [];\n\n  window.variantNames = [];\n\n  window.flooring = [];\n\n  window.price = '';\n\n  window.area = '';\n\n  window.type = [];\n\n  CommonFloor.FilterApartmentView = (function(superClass) {\n    extend(FilterApartmentView, superClass);\n\n    function FilterApartmentView() {\n      return FilterApartmentView.__super__.constructor.apply(this, arguments);\n    }\n\n    FilterApartmentView.prototype.template = Handlebars.compile('<a href=\"javascript:void(0)\"  class=\"text-primary filters-clear clear\">Clear Filters </a> <button class=\"btn btn-primary filter-button\" type=\"button\"> <span class=\"icon\"></span> </button> <div class=\"filters-wrapper\"> <div class=\"filters-content\"> <div class=\"unit_type_filter\"> <h6>UNIT TYPE</h6> <div class=\"filter-chkbox-block\"> {{#unitTypes}} <input type=\"checkbox\" class=\"custom-chckbx addCft unit_types\" id=\"unit_type{{id}}\" value=\"unit_type{{id}}\" value=\"1\" data-value={{id}} > <label for=\"unit_type{{id}}\" class=\"-lbl\">{{name}}({{type}})</label> {{/unitTypes}} </div> </div> <div class=\"variant_filter\"> <h6>VARIANT</h6> <div class=\"filter-chkbox-block\"> {{#unitVariantNames}} <input type=\"checkbox\" class=\"custom-chckbx addCft variant_names\" id=\"varinat_name{{id}}\" value=\"varinat_name{{id}}\" value=\"1\" data-value={{id}} > <label for=\"varinat_name{{id}}\" class=\"-lbl\">{{name}}({{type}})</label> {{/unitVariantNames}} <!--<a href=\"#\" class=\"hide-div\">+ Show More</a>--> </div> </div> <div class=\"flooring_filter\"> <div class=\"filter-chkbox-block\"> {{#flooring}} <div class=\"\"> <h6 class=\"unit_type_filter\">{{label}}</h6> <div class=\"filter-chkbox-block\"> {{#value}} <input type=\"checkbox\" class=\"custom-chckbx addCft {{classname}}\" id=\"{{id}}\" value=\"{{id}}\" value=\"1\" data-value=\"{{name}}\" data-index=\"{{index}}\" data-type=\"apartment\" > <label for=\"{{id}}\" class=\"-lbl\">{{name}}</label> {{/value}} </div> </div> {{/flooring}} <!--<a href=\"#\" class=\"hide-div\">+ Show More</a>--> </div> </div> <div class=\"areaLabel\"> <h6>AREA ({{measurement_units}})</h6> <div class=\"range-container\"> <input type=\"text\" id=\"area\" name=\"area\" value=\"\" /> </div> </div> <div class=\"budgetLabel\"> <h6>BUDGET ( <span class=\"icon-rupee-icn\"></span> )</h6> <div class=\"range-container\"> <input type=\"text\" id=\"budget\" name=\"budget\" value=\"\" /> </div> </div> <div class=\"viewLabel\"> <h6 class=\"\">VIEWS</h6> <div class=\"filter-chkbox-block\"> {{#views}} <input type=\"checkbox\" class=\"custom-chckbx addCft views \" id=\"{{id}}\" value=\"{{id}}\"  > <label for=\"{{id}}\" class=\"-lbl  \">{{name}}</label> {{/views}} </div> </div> <div class=\"facingLabel\"> <h6 class=\"\">FACINGS</h6> <div class=\"filter-chkbox-block\"> {{#facings}} <input type=\"checkbox\" class=\"custom-chckbx addCft facings \" id=\"{{id}}\" value=\"{{id}}\"  > <label for=\"{{id}}\" class=\"-lbl  \">{{name}}</label> {{/facings}} </div> </div> <div class=\"floor_filter\"> <h6>FLOOR </h6> <div class=\"range-container\"> <input type=\"text\" id=\"floor\" name=\"floor\" value=\"\" /> </div> </div> <div class=\"\"> <h6 class=\"availability\">AVAILABILITY</h6> <div class=\"filter-chkbox-block\"> <input type=\"checkbox\" name=\"available\"  class=\"custom-chckbx addCft status\" id=\"available\" value=\"available\"> <label for=\"available\" class=\"-lbl\">Show Available Units Only</label> </div> </div> </div> </div>');\n\n    FilterApartmentView.prototype.ui = {\n      unitTypes: '.unit_types',\n      priceMin: '.price_min',\n      priceMax: '.price_max',\n      status: '.status',\n      apply: '.apply',\n      variantNames: '.variant_names',\n      area: '#area',\n      budget: '#budget',\n      clear: '.clear',\n      floor: '#floor',\n      flooring: '.attributes',\n      facings: '.facings',\n      views: '.views'\n    };\n\n    FilterApartmentView.prototype.initialize = function() {\n      var building_id, unitTypes, url, variantNames;\n      this.price = '';\n      this.area = '';\n      this.floor = '';\n      variantNames = [];\n      unitTypes = [];\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      this.building_id = building_id;\n      if (CommonFloor.defaults['apartment']['unit_type_id'] !== \"\") {\n        unitTypes = CommonFloor.defaults['apartment']['unit_type_id'].split(',');\n      }\n      if (CommonFloor.defaults['apartment']['unit_variant_id'] !== \"\") {\n        variantNames = CommonFloor.defaults['apartment']['unit_variant_id'].split(',');\n      }\n      if (CommonFloor.defaults['type'] !== \"\") {\n        window.type = CommonFloor.defaults['type'].split(',');\n      }\n      window.unitTypes = unitTypes.map(function(item) {\n        return parseInt(item);\n      });\n      return window.variantNames = variantNames.map(function(item) {\n        return parseInt(item);\n      });\n    };\n\n    FilterApartmentView.prototype.events = {\n      'click @ui.clear': function(e) {\n        window.unitTypes = [];\n        window.unitVariants = [];\n        window.variantNames = [];\n        window.price = '';\n        window.area = '';\n        window.type = [];\n        $.each(CommonFloor.defaults['apartment'], function(index, value) {\n          CommonFloor.defaults['apartment'][index] = \"\";\n          if (index === 'attributes') {\n            return CommonFloor.defaults['apartment'][index] = {};\n          }\n        });\n        $.each(CommonFloor.defaults['common'], function(index, value) {\n          return CommonFloor.defaults['common'][index] = \"\";\n        });\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        unitTempCollection.trigger(\"filter_available\");\n        this.loadSelectedFilters();\n        this.price = $(\"#budget\").data(\"ionRangeSlider\");\n        this.area = $(\"#area\").data(\"ionRangeSlider\");\n        this.floor = $(\"#floor\").data(\"ionRangeSlider\");\n        this.price.destroy();\n        this.area.destroy();\n        this.floor.destroy();\n        return this.loadClearFilters();\n      },\n      'click @ui.unitTypes': function(e) {\n        if ($(e.currentTarget).is(':checked')) {\n          window.unitTypes.push(parseInt($(e.currentTarget).attr('data-value')));\n        } else {\n          window.unitTypes = _.without(window.unitTypes, parseInt($(e.currentTarget).attr('data-value')));\n        }\n        CommonFloor.defaults['apartment']['unit_type_id'] = window.unitTypes.join(',');\n        CommonFloor.defaults['step_three']['unit_type_id'] = window.unitTypes.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        return unitTempCollection.trigger(\"filter_available\");\n      },\n      'click @ui.variantNames': function(e) {\n        if ($(e.currentTarget).is(':checked')) {\n          window.variantNames.push(parseInt($(e.currentTarget).attr('data-value')));\n        } else {\n          window.variantNames = _.without(window.variantNames, parseInt($(e.currentTarget).attr('data-value')));\n        }\n        CommonFloor.defaults['apartment']['unit_variant_id'] = window.variantNames.join(',');\n        CommonFloor.defaults['step_three']['unit_variant_id'] = window.variantNames.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        return unitTempCollection.trigger(\"filter_available\");\n      },\n      'change @ui.priceMin': function(e) {\n        if ($(e.currentTarget).val() !== \"\") {\n          CommonFloor.defaults['common']['price_min'] = $(e.currentTarget).val();\n        } else {\n          CommonFloor.defaults['common']['price_min'] = 0;\n        }\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        return unitTempCollection.trigger(\"filter_available\");\n      },\n      'change @ui.priceMax': function(e) {\n        if ($(e.currentTarget).val() !== \"\") {\n          CommonFloor.defaults['common']['price_max'] = $(e.currentTarget).val();\n        } else {\n          CommonFloor.defaults['common']['price_max'] = 999999900;\n        }\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        return unitTempCollection.trigger(\"filter_available\");\n      },\n      'click @ui.status': function(e) {\n        if ($(e.currentTarget).is(':checked')) {\n          CommonFloor.defaults['common']['availability'] = e.currentTarget.id;\n        } else {\n          CommonFloor.defaults['common']['availability'] = \"\";\n        }\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        return unitTempCollection.trigger(\"filter_available\");\n      },\n      'change @ui.area': function(e) {\n        CommonFloor.defaults['common']['area_max'] = parseFloat($(e.target).val().split(';')[1]);\n        CommonFloor.defaults['common']['area_min'] = parseFloat($(e.target).val().split(';')[0]);\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        return unitTempCollection.trigger(\"filter_available\");\n      },\n      'change @ui.budget': function(e) {\n        CommonFloor.defaults['common']['price_max'] = parseFloat($(e.target).val().split(';')[1]);\n        CommonFloor.defaults['common']['price_min'] = parseFloat($(e.target).val().split(';')[0]);\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        return unitTempCollection.trigger(\"filter_available\");\n      },\n      'change @ui.floor': function(e) {\n        CommonFloor.defaults['common']['floor_max'] = parseFloat($(e.target).val().split(';')[1]);\n        CommonFloor.defaults['common']['floor_min'] = parseFloat($(e.target).val().split(';')[0]);\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        return unitTempCollection.trigger(\"filter_available\");\n      },\n      'click @ui.flooring': function(e) {\n        var index, types;\n        types = [];\n        index = $(e.currentTarget).attr('data-index');\n        if (!_.has(CommonFloor.defaults['apartment']['attributes'], index)) {\n          CommonFloor.defaults['apartment']['attributes'][index] = '';\n        }\n        if (CommonFloor.defaults['apartment']['attributes'][index] !== \"\") {\n          types = CommonFloor.defaults['apartment']['attributes'][index].split(',');\n        }\n        if ($(e.currentTarget).is(':checked')) {\n          types.push($(e.currentTarget).attr('data-value'));\n        } else {\n          types = _.without(types, $(e.currentTarget).attr('data-value'));\n        }\n        window.flooring = _.uniq(types);\n        CommonFloor.defaults['apartment']['attributes'][index] = types.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        return unitTempCollection.trigger(\"filter_available\");\n      },\n      'click @ui.views': function(e) {\n        var types;\n        types = [];\n        if (CommonFloor.defaults['common']['views'] !== \"\") {\n          types = CommonFloor.defaults['common']['views'].split(',');\n        }\n        if ($(e.currentTarget).is(':checked')) {\n          types.push($(e.currentTarget).val());\n        } else {\n          types = _.without(types, $(e.currentTarget).val());\n        }\n        types = _.uniq(types);\n        CommonFloor.defaults['common']['views'] = types.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        return unitTempCollection.trigger(\"filter_available\");\n      },\n      'click @ui.facings': function(e) {\n        var types;\n        types = [];\n        if (CommonFloor.defaults['common']['facings'] !== \"\") {\n          types = CommonFloor.defaults['common']['facings'].split(',');\n        }\n        if ($(e.currentTarget).is(':checked')) {\n          types.push($(e.currentTarget).val());\n        } else {\n          types = _.without(types, $(e.currentTarget).val());\n        }\n        types = _.uniq(types);\n        CommonFloor.defaults['common']['facings'] = types.join(',');\n        unitCollection.reset(unitMasterCollection.toArray());\n        CommonFloor.resetCollections();\n        CommonFloor.filterBuilding(this.building_id);\n        CommonFloor.filterStepNew();\n        return unitTempCollection.trigger(\"filter_available\");\n      },\n      'click .filter-button': function(e) {\n        window.flag1 = 0;\n        $('.fliters-container').toggleClass('closed');\n        if ($('.fliters-container').hasClass(\"closed\")) {\n          return window.flag1 = 1;\n        }\n      }\n    };\n\n    FilterApartmentView.prototype.serializeData = function() {\n      var data;\n      data = FilterApartmentView.__super__.serializeData.call(this);\n      data.unitTypes = Marionette.getOption(this, 'unitTypes');\n      data.unitVariants = Marionette.getOption(this, 'unitVariants');\n      data.unitVariantNames = Marionette.getOption(this, 'unitVariantNames');\n      data.flooring = Marionette.getOption(this, 'flooring');\n      data.views = Marionette.getOption(this, 'views');\n      data.facings = Marionette.getOption(this, 'facings');\n      return data;\n    };\n\n    FilterApartmentView.prototype.onShow = function() {\n      var area, budget, building_id, floor, max, min, priceMax, priceMin, sub, subArea, subBudget, units, url;\n      this.loadSelectedFilters();\n      $('.filters-content').mCustomScrollbar({\n        theme: 'cf-scroll'\n      });\n      budget = [];\n      area = [];\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      floor = buildingMasterCollection.findWhere({\n        'id': building_id\n      });\n      units = unitMasterCollection.where({\n        'building_id': this.building_id\n      });\n      $.each(units, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.get('id'));\n        budget.push(parseFloat(unitDetails[3]));\n        return area.push(parseFloat(unitDetails[0].get('super_built_up_area')));\n      });\n      min = _.min(area);\n      max = _.max(area);\n      subArea = (max - min) / 20;\n      subArea = subArea.toFixed(0);\n      sub = subArea % 5;\n      subArea = subArea - sub;\n      priceMin = _.min(budget);\n      priceMax = _.max(budget);\n      subBudget = (priceMax - priceMin) / 20;\n      subBudget = subBudget.toFixed(0);\n      if (CommonFloor.defaults['common']['area_min'] !== \"\") {\n        $(\"#area\").ionRangeSlider({\n          type: \"double\",\n          min: min,\n          max: max,\n          from: CommonFloor.defaults['common']['area_min']\n        }, {\n          to: CommonFloor.defaults['common']['area_max']\n        }, {\n          step: subArea,\n          grid: false\n        });\n      } else {\n        $(\"#area\").ionRangeSlider({\n          type: \"double\",\n          min: min,\n          max: max,\n          step: subArea,\n          grid: false\n        });\n      }\n      if (CommonFloor.defaults['common']['price_min'] !== \"\") {\n        $(\"#budget\").ionRangeSlider({\n          type: \"double\",\n          min: priceMin,\n          max: priceMax,\n          from: CommonFloor.defaults['common']['price_min'],\n          to: CommonFloor.defaults['common']['price_max'],\n          grid: false,\n          step: subBudget,\n          prettify: function(num) {\n            return window.numDifferentiation(num);\n          }\n        });\n      } else {\n        $(\"#budget\").ionRangeSlider({\n          type: \"double\",\n          min: priceMin,\n          max: priceMax,\n          grid: false,\n          step: subBudget,\n          prettify: function(num) {\n            return window.numDifferentiation(num);\n          }\n        });\n      }\n      $(\"#floor\").ionRangeSlider({\n        type: \"double\",\n        min: 1,\n        max: floor.get('no_of_floors'),\n        grid: false\n      });\n      if (CommonFloor.defaults['common']['floor_min'] !== \"\") {\n        $(\"#budget\").ionRangeSlider({\n          type: \"double\",\n          min: 1,\n          max: floor.get('no_of_floors'),\n          from: CommonFloor.defaults['common']['floor_min'],\n          to: CommonFloor.defaults['common']['floor_max'],\n          grid: false\n        });\n      } else {\n        $(\"#budget\").ionRangeSlider({\n          type: \"double\",\n          min: 1,\n          max: floor.get('no_of_floors'),\n          grid: false\n        });\n      }\n      return this.hideLabels();\n    };\n\n    FilterApartmentView.prototype.hideLabels = function() {\n      var budget, facings, unitVariants, views;\n      if (Marionette.getOption(this, 'flooring').length === 0) {\n        $('.flooring_filter').hide();\n      }\n      if (Marionette.getOption(this, 'unitTypes').length === 0) {\n        $('.unit_type_filter').hide();\n      }\n      if (Marionette.getOption(this, 'unitVariantNames').length === 0) {\n        $('.variant_filter').hide();\n      }\n      views = Marionette.getOption(this, 'views');\n      facings = Marionette.getOption(this, 'facings');\n      budget = Marionette.getOption(this, 'budget');\n      unitVariants = Marionette.getOption(this, 'unitVariants');\n      if (views.length === 0) {\n        $('.viewLabel').hide();\n      }\n      if (facings.length === 0) {\n        $('.facingLabel').hide();\n      }\n      if (budget.length === 0) {\n        $('.budgetLabel').hide();\n      }\n      if (unitVariants.length === 0) {\n        $('.areaLabel').hide();\n      }\n      if ($.inArray('floor', project.get('filters').defaults) === -1 || _.isUndefined(project.get('filters').defaults)) {\n        return $('.floor_filter').hide();\n      }\n    };\n\n    FilterApartmentView.prototype.loadClearFilters = function() {\n      var area, budget, building_id, floor, max, min, priceMax, priceMin, sub, subArea, subBudget, submax, submin, url;\n      budget = [];\n      area = [];\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      floor = buildingMasterCollection.findWhere({\n        'id': building_id\n      });\n      $.each(unitMasterCollection.toArray(), function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        budget.push(parseFloat(unitDetails[3]));\n        return area.push(parseFloat(unitDetails[0].get('super_built_up_area')));\n      });\n      min = _.min(area);\n      submin = min % 5;\n      min = min - submin;\n      max = _.max(area);\n      submax = max % 5;\n      max = max - submax;\n      subArea = (max - min) / 20;\n      subArea = subArea.toFixed(0);\n      sub = subArea % 5;\n      subArea = subArea - sub;\n      priceMin = _.min(budget);\n      priceMax = _.max(budget);\n      subBudget = (priceMax - priceMin) / 20;\n      subBudget = subBudget.toFixed(0);\n      $('#area').val(min + \";\" + max);\n      $('#budget').val(priceMin + \";\" + priceMax);\n      $('#floor').val(1 + \";\" + floor.get('no_of_floors'));\n      $(\"#area\").ionRangeSlider({\n        type: \"double\",\n        min: min,\n        max: max,\n        step: subArea,\n        grid: false\n      });\n      $(\"#budget\").ionRangeSlider({\n        type: \"double\",\n        min: priceMin,\n        max: priceMax,\n        grid: false,\n        step: subBudget,\n        prettify: function(num) {\n          return window.numDifferentiation(num);\n        }\n      });\n      return $(\"#floor\").ionRangeSlider({\n        type: \"double\",\n        min: 1,\n        max: floor.get('no_of_floors'),\n        grid: false\n      });\n    };\n\n    FilterApartmentView.prototype.loadSelectedFilters = function() {\n      var aptValues, attributes, facings, id, types, typesArray, unitTypes, unitVariants, unitVariantsArray, unitsArr, unittypesArray, unittypesColl, views;\n      unittypesArray = [];\n      unitTypes = CommonFloor.defaults['apartment']['unit_type_id'].split(',');\n      unitVariantsArray = [];\n      unitVariants = CommonFloor.defaults['apartment']['unit_variant_id'].split(',');\n      typesArray = [];\n      types = CommonFloor.defaults['type'].split(',');\n      id = [];\n      unitsArr = [];\n      unittypesColl = [];\n      $.merge(unitsArr, apartmentVariantMasterCollection.getApartmentMasterUnits());\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        id.push(parseInt(unitDetails[0].get('id')));\n        return unittypesColl.push(parseInt(unitDetails[1].get('id')));\n      });\n      attributes = [];\n      aptValues = _.values(CommonFloor.defaults['apartment']['attributes']);\n      $.merge(attributes, aptValues);\n      views = [];\n      $.merge(views, CommonFloor.defaults['common']['views'].split(','));\n      facings = [];\n      $.merge(facings, CommonFloor.defaults['common']['facings'].split(','));\n      $(this.ui.unitTypes).each(function(ind, item) {\n        $('#' + item.id).attr('checked', true);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray($(item).attr('data-value'), unitTypes) === -1) {\n          $('#' + item.id).prop('checked', false);\n          $('#' + item.id).attr('disabled', false);\n        }\n        if ($.inArray(parseInt($(item).attr('data-value')), unittypesColl) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', true);\n        }\n      });\n      $(this.ui.variantNames).each(function(ind, item) {\n        $('#' + item.id).attr('checked', true);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray($(item).attr('data-value'), unitVariants) === -1) {\n          $('#' + item.id).prop('checked', false);\n          $('#' + item.id).attr('disabled', false);\n        }\n        if ($.inArray(parseInt($(item).attr('data-value')), id) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', true);\n        }\n      });\n      $(this.ui.flooring).each(function(ind, item) {\n        $('#' + item.id).prop('checked', true);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray($(item).attr('data-value'), attributes) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', false);\n        }\n      });\n      $(this.ui.views).each(function(ind, item) {\n        $('#' + item.id).prop('checked', true);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray($(item).val(), views) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', false);\n        }\n      });\n      $(this.ui.facings).each(function(ind, item) {\n        $('#' + item.id).prop('checked', true);\n        $('#' + item.id).attr('disabled', false);\n        if ($.inArray($(item).val(), facings) === -1) {\n          $('#' + item.id).prop('checked', false);\n          return $('#' + item.id).attr('disabled', false);\n        }\n      });\n      this.ui.status.prop('checked', false);\n      if (CommonFloor.defaults['common']['availability'] !== \"\") {\n        return this.ui.status.prop('checked', true);\n      }\n    };\n\n    return FilterApartmentView;\n\n  })(Marionette.ItemView);\n\n  CommonFloor.FilterApartmentCtrl = (function(superClass) {\n    extend(FilterApartmentCtrl, superClass);\n\n    function FilterApartmentCtrl() {\n      return FilterApartmentCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    FilterApartmentCtrl.prototype.initialize = function() {\n      var apartmentFilters, area, budget, facings, flooring, unitTypes, unitVariantNames, unitVariants, view, views, viewsFacingsArr;\n      unitTypes = [];\n      unitVariants = [];\n      unitVariantNames = [];\n      area = [];\n      budget = [];\n      flooring = [];\n      apartmentFilters = this.getApartmentFilters();\n      if (apartmentFilters.length !== 0) {\n        $.merge(unitTypes, apartmentFilters[0].unitTypes);\n        $.merge(unitVariants, apartmentFilters[0].unitVariants);\n        $.merge(unitVariantNames, apartmentFilters[0].unitVariantNames);\n        $.merge(budget, apartmentFilters[0].budget);\n        $.merge(flooring, apartmentFilters[0].flooring);\n      }\n      viewsFacingsArr = this.getViewsFacings();\n      views = viewsFacingsArr[0];\n      facings = viewsFacingsArr[1];\n      if ($.inArray('budget', project.get('filters').defaults) === -1 || _.isUndefined(project.get('filters').defaults)) {\n        budget = [];\n      }\n      if ($.inArray('area', project.get('filters').defaults) === -1 || _.isUndefined(project.get('filters').defaults)) {\n        unitVariants = [];\n      }\n      this.view = view = new CommonFloor.FilterApartmentView({\n        model: project,\n        'unitTypes': unitTypes,\n        'unitVariants': _.uniq(unitVariants),\n        'unitVariantNames': unitVariantNames,\n        'budget': budget,\n        'flooring': flooring,\n        'views': views,\n        'facings': facings\n      });\n      this.listenTo(this.view, \"load:apt:filters\", this.loadAptFilter);\n      return this.show(this.view);\n    };\n\n    FilterApartmentCtrl.prototype.loadAptFilter = function() {\n      var aptFilters;\n      aptFilters = this.getApartmentFilters();\n      return this.view.triggerMethod(\"apt:filters\", aptFilters);\n    };\n\n    FilterApartmentCtrl.prototype.getApartmentFilters = function() {\n      var budget, building_id, filters, newtemp, temp, unitTypes, unitVariantNames, unitVariants, unit_types, unitsArr, url;\n      filters = [];\n      unitTypes = [];\n      unit_types = [];\n      unitVariants = [];\n      unitVariantNames = [];\n      budget = [];\n      temp = [];\n      newtemp = [];\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      apartmentVariantMasterCollection.each(function(item) {\n        var type, unitTypeModel, units;\n        units = unitMasterCollection.where({\n          'unit_variant_id': item.get('id'),\n          'building_id': building_id\n        });\n        if (units.length !== 0) {\n          unitTypeModel = unitTypeMasterCollection.findWhere({\n            'id': item.get('unit_type_id')\n          });\n          type = 'A';\n          if (window.propertyTypes[unitTypeModel.get('property_type_id')] === 'Penthouses') {\n            type = 'PH';\n          }\n          if ($.inArray(item.get('unit_type_id'), unit_types) === -1) {\n            unit_types.push(parseInt(unitTypeModel.get('id')));\n            unitTypes.push({\n              'id': unitTypeModel.get('id'),\n              'name': unitTypeModel.get('name'),\n              'type': type\n            });\n          }\n          unitVariants.push(item.get('super_built_up_area'));\n          return unitVariantNames.push({\n            'id': item.get('id'),\n            'name': item.get('unit_variant_name'),\n            'type': type\n          });\n        }\n      });\n      if (!_.isUndefined(project.get('filters').Apartment)) {\n        $.each(project.get('filters').Apartment, function(index, value) {\n          var flooring;\n          if (value !== 'unitTypes' && value !== 'unitVariantNames') {\n            temp = [];\n            flooring = [];\n            apartmentVariantMasterCollection.each(function(item) {\n              var units;\n              units = unitMasterCollection.where({\n                'unit_variant_id': item.get('id')\n              });\n              if (units.length !== 0) {\n                return $.each(item.get('variant_attributes'), function(ind, val) {\n                  if (ind === value && val !== \"\") {\n                    if (_.isArray(val)) {\n                      return $.each(val, function(ind1, val1) {\n                        if ($.inArray(val, flooring) === -1) {\n                          flooring.push(val1);\n                          return temp.push({\n                            'name': val1,\n                            'index': value,\n                            'id': 'apt' + s.replaceAll(val1, \" \", \"_\"),\n                            'dataId': s.replaceAll(val1, \" \", \"_\"),\n                            'classname': 'attributes',\n                            'label': ind,\n                            type: 'A'\n                          });\n                        }\n                      });\n                    } else {\n                      if ($.inArray(val, flooring) === -1) {\n                        flooring.push(val);\n                        return temp.push({\n                          'name': val,\n                          'index': value,\n                          'id': 'apt' + s.replaceAll(val, \" \", \"_\"),\n                          'dataId': s.replaceAll(val, \" \", \"_\"),\n                          'classname': 'attributes',\n                          'label': ind,\n                          type: 'A'\n                        });\n                      }\n                    }\n                  }\n                });\n              }\n            });\n            if (temp.length !== 0) {\n              return newtemp.push({\n                'label': value.toUpperCase(),\n                'value': temp,\n                'index': value\n              });\n            }\n          }\n        });\n      }\n      unitsArr = apartmentVariantMasterCollection.getApartmentMasterUnits();\n      $.each(unitsArr, function(index, value) {\n        var unitDetails;\n        unitDetails = window.unit.getUnitDetails(value.id);\n        return budget.push(parseFloat(unitDetails[3]));\n      });\n      filters.push({\n        'unitTypes': unitTypes,\n        'unitVariants': unitVariants,\n        'unitVariantNames': unitVariantNames,\n        'budget': budget,\n        'flooring': newtemp\n      });\n      $.each(filters[0], function(index, value) {\n        if ($.inArray(index, project.get('filters').Apartment) === -1 && index !== 'budget' && index !== 'unitVariants' && index !== 'flooring') {\n          filters[0][index] = [];\n        }\n        if (index === 'flooring') {\n          return $.each(value, function(ind, val) {\n            if ($.inArray(val.index, project.get('filters').Apartment) === -1) {\n              return filters[0][index] = [];\n            }\n          });\n        }\n      });\n      return filters;\n    };\n\n    FilterApartmentCtrl.prototype.getViewsFacings = function() {\n      var building_id, facings, facingsArr, units, url, viewArr, views;\n      views = [];\n      viewArr = [];\n      facingsArr = [];\n      url = Backbone.history.fragment;\n      building_id = parseInt(url.split('/')[1]);\n      units = unitCollection.where({\n        'building_id': building_id\n      });\n      _.each(units, function(item) {\n        return $.merge(views, item.get('views'));\n      });\n      views = _.uniq(views);\n      views = views.sort();\n      $.each(views, function(ind, val) {\n        return viewArr.push({\n          'id': val,\n          'name': val\n        });\n      });\n      facings = ['North', 'South', 'East', 'West', 'North-East', 'North-West', 'South-East', 'South-West'];\n      $.each(facings, function(ind, val) {\n        return facingsArr.push({\n          'id': val,\n          'name': val\n        });\n      });\n      if ($.inArray('views', project.get('filters').defaults) === -1 || _.isUndefined(project.get('filters').defaults)) {\n        viewArr = [];\n      }\n      if ($.inArray('direction', project.get('filters').defaults) === -1 || _.isUndefined(project.get('filters').defaults)) {\n        facingsArr = [];\n      }\n      return [viewArr, facingsArr];\n    };\n\n    return FilterApartmentCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/building-step3/apartment.filter.controller.js.map","(function() {\n  var BunglowListView, MasterBunglowListView, VillaEmptyView,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  BunglowListView = (function(superClass) {\n    extend(BunglowListView, superClass);\n\n    function BunglowListView() {\n      return BunglowListView.__super__.constructor.apply(this, arguments);\n    }\n\n    BunglowListView.prototype.template = Handlebars.compile('\t<div class=\" info\"> <label class=\"\">{{unit_name}}</label><span class=\"status-icon\"></span>  <!--{{super_built_up_area}}sqft--> </div> <div class=\"cost pull-left\"> <span class=\"icon-rupee-icn\"> </span>{{price}} </div> <div class=\"pull-right\"> {{unit_type}} </div> <div class=\"clearfix\"></div>');\n\n    BunglowListView.prototype.initialize = function() {\n      this.$el.prop(\"id\", 'unit' + this.model.get(\"id\"));\n      return this.classname = '';\n    };\n\n    BunglowListView.prototype.tagName = 'li';\n\n    BunglowListView.prototype.className = 'unit blocks';\n\n    BunglowListView.prototype.serializeData = function() {\n      var availability, data, response, status;\n      data = BunglowListView.__super__.serializeData.call(this);\n      response = window.unit.getUnitDetails(this.model.get('id'));\n      data.unit_type = response[1].get('name');\n      data.super_built_up_area = response[0].get('super_built_up_area');\n      availability = this.model.get('availability');\n      status = s.decapitalize(availability);\n      this.model.set('status', status);\n      data.price = window.numDifferentiation(response[3]);\n      return data;\n    };\n\n    BunglowListView.prototype.onShow = function() {\n      var availability, classname, id, status;\n      id = this.model.get('id');\n      availability = this.model.get('availability');\n      status = s.decapitalize(availability);\n      classname = $('#unit' + id).attr('class');\n      return $('#unit' + id).attr('class', classname + ' ' + status);\n    };\n\n    BunglowListView.prototype.events = {\n      'mouseover': function(e) {\n        var html, id;\n        html = this.getHtml(this.model.get('id'));\n        id = this.model.get('id');\n        $('#' + id + '.villa').attr('class', 'layer villa svg_active ' + this.model.get('status'));\n        $('#unit' + id).attr('class', 'unit blocks' + ' ' + this.model.get('status') + ' active');\n        $('#' + id).tooltipster('content', html);\n        return $('#' + id).tooltipster('show');\n      },\n      'mouseout': function(e) {\n        var id;\n        id = this.model.get('id');\n        $('#' + id + '.villa').attr('class', 'layer villa ' + this.model.get('status'));\n        $('#unit' + id).attr('class', 'unit blocks ' + ' ' + this.model.get('status'));\n        return $('#' + id).tooltipster('hide');\n      },\n      'click': function(e) {\n        var id, unit;\n        id = this.model.get('id');\n        unit = unitCollection.findWhere({\n          'id': id,\n          'availability': 'available'\n        });\n        if (!(_.isUndefined(unit)) && unit.get('availability') === 'available') {\n          $('.layer').tooltipster('hide');\n          $('svg').attr('class', 'zoom');\n          $('#spritespin').addClass('zoom');\n          $('.us-right-content').addClass('fadeOut');\n          $('.cf-loader').removeClass('hidden');\n          return setTimeout(function(x) {\n            return CommonFloor.navigate('/unit-view/' + id, {\n              trigger: true\n            });\n          }, 500);\n        }\n      }\n    };\n\n    BunglowListView.prototype.iniTooltip = function(id) {\n      return $('#' + id).trigger('click');\n    };\n\n    BunglowListView.prototype.getHtml = function(id) {\n      var availability, html, price, response, unit, unitMaster;\n      html = \"\";\n      unit = unitCollection.findWhere({\n        id: id\n      });\n      unitMaster = unitMasterCollection.findWhere({\n        id: id\n      });\n      if (unit === void 0) {\n        html += '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\">Villa details not entered </h5> </div>';\n        $('.layer').tooltipster('content', html);\n        return;\n      }\n      response = window.unit.getUnitDetails(id);\n      price = window.numDifferentiation(response[3]);\n      availability = unit.get('availability');\n      availability = s.decapitalize(availability);\n      html = \"\";\n      html += '<div class=\"svg-info ' + availability + ' \"> <div class=\"action-bar\"> <div class=\"villa\"></div> </div> <div class=\"pull-left\"> <h4 class=\"m-t-0\">' + unit.get('unit_name') + '</h4> <div class=\"details\"> <ul> <li> <h5 class=\"inline-block\">' + response[1].get('name') + '</h5> <span> - ' + response[0].get('super_built_up_area') + ' ' + project.get('measurement_units') + '</span> <!--<label>Variant</label> - ' + response[0].get('unit_variant_name') + '--> </li> </ul> <h5 class=\"m-t-0 m-b-0 price text-primary\"> <span class=\"text-primary icon-rupee-icn\"></span>' + price + '</h5> <span>' + s.capitalize(availability) + '</span> </div> </div>';\n      if (availability === 'available') {\n        html += '<div class=\"circle\"> <a href=\"#unit-view/' + id + '\" class=\"arrow-up icon-chevron-right\"></a> </div> </div>';\n      } else {\n        html += '</div>';\n      }\n      return html;\n    };\n\n    return BunglowListView;\n\n  })(Marionette.ItemView);\n\n  VillaEmptyView = (function(superClass) {\n    extend(VillaEmptyView, superClass);\n\n    function VillaEmptyView() {\n      return VillaEmptyView.__super__.constructor.apply(this, arguments);\n    }\n\n    VillaEmptyView.prototype.template = Handlebars.compile('\tNo units added');\n\n    return VillaEmptyView;\n\n  })(Marionette.ItemView);\n\n  MasterBunglowListView = (function(superClass) {\n    extend(MasterBunglowListView, superClass);\n\n    function MasterBunglowListView() {\n      return MasterBunglowListView.__super__.constructor.apply(this, arguments);\n    }\n\n    MasterBunglowListView.prototype.template = Handlebars.compile('\t<div id=\"trig\" class=\"toggle-button\"></div> <div id=\"view_toggle\" class=\"toggle-view-button map\"></div> <div class=\"list-view-container w-map animated fadeIn\"> <div class=\"text-center\"> <ul class=\"prop-select\"> <li class=\"prop-type buildings hidden\">Buildings</li> <li class=\"prop-type Villas active \">Villas</li> <li class=\"prop-type Plots hidden\">Plots</li> </ul> </div> <div class=\"advncd-filter-wrp  unit-list\"> <div class=\"legend clearfix\"> <ul> <!--<li class=\"available\">AVAILABLE</li>--> <li class=\"sold\">Not Available</li> <!--<li class=\"blocked\">BLOCKED</li>--> <li class=\"na\">Not in Selection</li> </ul> </div> <p class=\"text-center help-text\">Hover on the units for more details</p> <!--<div class=\"blck-wrap title-row\"> <div class=\"row\"> <div class=\"col-sm-4\"> <h5 class=\"accord-head\">Villa No</h5> </div> <div class=\"col-sm-4\"> <h5 class=\"accord-head\">Type</h5> </div> <div class=\"col-sm-4\"> <h5 class=\"accord-head\">Area</h5> </div> </div> </div>--> <ul class=\"units two\"> </ul> <div class=\"clearfix\"></div> </div> </div>');\n\n    MasterBunglowListView.prototype.childView = BunglowListView;\n\n    MasterBunglowListView.prototype.childViewContainer = '.units';\n\n    MasterBunglowListView.prototype.ui = {\n      viewtog: '#view_toggle',\n      trig: '#trig'\n    };\n\n    MasterBunglowListView.prototype.events = {\n      'click @ui.trig': function(e) {\n        return $('.list-container').toggleClass('closed');\n      },\n      'click @ui.viewtog': function(e) {\n        $('.us-left-content').toggleClass('not-visible visible');\n        return $('.us-right-content').toggleClass('not-visible visible');\n      },\n      'click .buildings': function(e) {\n        var data, units;\n        units = buildingCollection;\n        data = {};\n        data.units = units;\n        data.type = 'building';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        return new CommonFloor.MasterBuildingListCtrl({\n          region: this.region\n        });\n      },\n      'click .Villas': function(e) {\n        var data, units;\n        units = bunglowVariantCollection.getBunglowUnits();\n        data = {};\n        data.units = units;\n        data.type = 'villa';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        return new CommonFloor.MasterBunglowListCtrl({\n          region: this.region\n        });\n      },\n      'click .Plots': function(e) {\n        var data, units;\n        units = plotVariantCollection.getPlotUnits();\n        data = {};\n        data.units = units;\n        data.type = 'plot';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        return new CommonFloor.MasterPlotListCtrl({\n          region: this.region\n        });\n      }\n    };\n\n    MasterBunglowListView.prototype.onShow = function() {\n      if (buildingCollection.length !== 0) {\n        $('.buildings').removeClass('hidden');\n      }\n      if (plotVariantCollection.length !== 0) {\n        $('.Plots').removeClass('hidden');\n      }\n      if ($(window).width() > 991) {\n        return $('.units').mCustomScrollbar({\n          theme: 'cf-scroll'\n        });\n      }\n    };\n\n    return MasterBunglowListView;\n\n  })(Marionette.CompositeView);\n\n  CommonFloor.MasterBunglowListCtrl = (function(superClass) {\n    extend(MasterBunglowListCtrl, superClass);\n\n    function MasterBunglowListCtrl() {\n      this.loadController = bind(this.loadController, this);\n      return MasterBunglowListCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    MasterBunglowListCtrl.prototype.initialize = function() {\n      var newUnits, temp, unitsCollection, view;\n      newUnits = bunglowVariantCollection.getBunglowUnits();\n      temp = [];\n      $.each(newUnits, function(index, value) {\n        if (value.get('availability') !== 'archived') {\n          return temp.push(value);\n        }\n      });\n      unitsCollection = new Backbone.Collection(temp);\n      this.view = view = new MasterBunglowListView({\n        collection: unitsCollection\n      });\n      return this.show(view);\n    };\n\n    MasterBunglowListCtrl.prototype.loadController = function(data) {\n      return Backbone.trigger(\"load:units\", data);\n    };\n\n    return MasterBunglowListCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/master-list-bunglows/master.list.bunglows.controller.js.map","(function() {\n  var BuildingEmptyView, ListItemView, MasterBuildingListView,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  ListItemView = (function(superClass) {\n    extend(ListItemView, superClass);\n\n    function ListItemView() {\n      return ListItemView.__super__.constructor.apply(this, arguments);\n    }\n\n    ListItemView.prototype.template = Handlebars.compile('<div class=\"bldg-img\"></div> <div class=\"info\"> <h2 class=\"m-b-5\">{{building_name}}</h2> <div class=\"floors\"><span>{{floors}}</span> floors</div> </div> <div class=\"clearfix\"></div> <div class=\"unit-type-info\"> <ul> {{#types}} <li> {{name}}<!--: <span>{{units}}</span>--> </li> {{/types}} </ul> <span class=\"area {{areaname}}\">{{area}} {{measurement_units}}</span> <div class=\"text-primary price {{classname}}\">Starting price <span class=\"icon-rupee-icn\"></span>{{price}}</div> </div>');\n\n    ListItemView.prototype.tagName = 'li';\n\n    ListItemView.prototype.className = 'bldg blocks';\n\n    ListItemView.prototype.initialize = function() {\n      return this.$el.prop(\"id\", 'bldg' + this.model.get(\"id\"));\n    };\n\n    ListItemView.prototype.serializeData = function() {\n      var areaname, cost, data, floors, id, response, types;\n      data = ListItemView.__super__.serializeData.call(this);\n      id = this.model.get('id');\n      response = building.getUnitTypes(id);\n      types = building.getUnitTypesCount(id, response);\n      floors = this.model.get('floors');\n      areaname = \"\";\n      data.area = building.getMinimumArea(id);\n      if (data.area === 0) {\n        areaname = 'hidden';\n      }\n      data.areaname = areaname;\n      cost = building.getMinimumCost(id);\n      data.classname = \"\";\n      if (cost === 0) {\n        data.classname = 'hidden';\n      }\n      data.price = window.numDifferentiation(cost);\n      data.floors = this.model.get('no_of_floors');\n      data.types = types;\n      data.measurement_units = project.get('measurement_units');\n      return data;\n    };\n\n    ListItemView.prototype.events = {\n      'mouseover': function(e) {\n        var html, id;\n        this.iniTooltip(this.model.get('id'));\n        html = this.getHtml(this.model.get('id'));\n        id = this.model.get('id');\n        $('#' + id + '.building').attr('class', 'layer building svg_active');\n        $('#bldg' + id).attr('class', 'bldg blocks active');\n        $('#' + id).tooltipster('content', html);\n        return $('#' + id).tooltipster('show');\n      },\n      'mouseout': function(e) {\n        var id;\n        id = this.model.get('id');\n        $('#' + id + '.building').attr('class', 'layer building');\n        $('#bldg' + id).attr('class', 'bldg blocks');\n        return $('#' + id).tooltipster('hide');\n      },\n      'click ': function(e) {\n        var buildingModel, id, units;\n        id = this.model.get('id');\n        units = unitCollection.where({\n          'building_id': id,\n          'availability': 'available'\n        });\n        if (units.length === 0) {\n          return;\n        }\n        buildingModel = buildingCollection.findWhere({\n          'id': id\n        });\n        $('.layer').tooltipster('hide');\n        $('svg').attr('class', 'zoom');\n        $('#spritespin').addClass('zoom');\n        $('.us-right-content').addClass('fadeOut');\n        $('.cf-loader').removeClass('hidden');\n        return setTimeout(function(x) {\n          if (Object.keys(buildingModel.get('building_master')).length === 0) {\n            return CommonFloor.navigate('/building/' + id + '/apartments', true);\n          } else {\n            return CommonFloor.navigate('/building/' + id + '/master-view', true);\n          }\n        }, 500);\n      }\n    };\n\n    ListItemView.prototype.iniTooltip = function(id) {\n      return $('#' + id).trigger('mouseover');\n    };\n\n    ListItemView.prototype.getHtml = function(id) {\n      var availability, buildingModel, floors, html, minprice, price, response, unit, unitTypes, url;\n      html = \"\";\n      id = parseInt(id);\n      buildingModel = buildingCollection.findWhere({\n        'id': id\n      });\n      if (buildingModel === void 0) {\n        html = '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\"> Building details not entered </h5> </div>';\n        $('.layer').tooltipster('content', html);\n        return;\n      }\n      floors = buildingModel.get('no_of_floors');\n      unitTypes = building.getUnitTypes(id);\n      response = building.getUnitTypesCount(id, unitTypes);\n      minprice = building.getMinimumCost(id);\n      price = window.numDifferentiation(minprice);\n      unit = unitCollection.where({\n        'building_id': id,\n        'availability': 'available'\n      });\n      if (unit.length > 0) {\n        availability = ' available';\n      } else {\n        availability = ' sold';\n      }\n      html = '<div class=\"svg-info ' + availability + ' \"> <div class=\"action-bar\"> <div class=\"building\"></div> </div> <div class=\"pull-left\"> <h4 class=\"m-t-0 m-b-5\">' + buildingModel.get('building_name') + '\t<label class=\"text-muted\">(' + floors + ' floors)</label></h4> <div class=\"details\"> <div class=\"price\"> Starting from <span class=\"text-primary\"><span class=\"icon-rupee-icn\"></span> ' + price + '</span> </div> <ul class=\"bldg\">';\n      $.each(response, function(index, value) {\n        return html += '<li> <h5 class=\"m-t-0 m-b-0\">' + value.name + '</h5> <span>' + value.units + ' Available</span> </li>';\n      });\n      if (unit.length > 0) {\n        if (Object.keys(buildingModel.get('building_master')).length === 0) {\n          url = '/building/' + id + '/apartments';\n        } else {\n          url = '/building/' + id + '/master-view';\n        }\n        html += '</ul> </div> <a href=\"#' + url + '\" class=\"view-unit\"> <div class=\"circle\"> <span class=\"arrow-up icon-chevron-right\"></span> </div> </a> </div> </div>';\n      }\n      return html;\n    };\n\n    return ListItemView;\n\n  })(Marionette.ItemView);\n\n  BuildingEmptyView = (function(superClass) {\n    extend(BuildingEmptyView, superClass);\n\n    function BuildingEmptyView() {\n      return BuildingEmptyView.__super__.constructor.apply(this, arguments);\n    }\n\n    BuildingEmptyView.prototype.template = 'No units added';\n\n    return BuildingEmptyView;\n\n  })(Marionette.ItemView);\n\n  MasterBuildingListView = (function(superClass) {\n    extend(MasterBuildingListView, superClass);\n\n    function MasterBuildingListView() {\n      return MasterBuildingListView.__super__.constructor.apply(this, arguments);\n    }\n\n    MasterBuildingListView.prototype.template = Handlebars.compile('\t\t<div id=\"trig\" class=\"toggle-button\"></div> <div id=\"view_toggle\" class=\"toggle-view-button map\"></div> <div class=\"list-view-container w-map animated fadeIn\"> <!--<div class=\"controls map-View\"> <div class=\"toggle\"> <a href=\"#/master-view\" class=\"map\">Map</a><a href=\"#/list-view\" class=\"list active\">List</a> </div> </div>--> <div class=\"text-center\"> <ul class=\"prop-select\"> <li class=\"prop-type buildings active\">Buildings</li> <li class=\"prop-type Villas hidden\">Villas</li> <li class=\"prop-type Plots hidden\">Plots</li> </ul> </div> <div class=\"bldg-list\"> <p class=\"text-center help-text\">Hover on the buildings for more details</p> <ul class=\"units one\"> </ul> <div class=\"clearfix\"></div> </div> </div>');\n\n    MasterBuildingListView.prototype.childView = ListItemView;\n\n    MasterBuildingListView.prototype.childViewContainer = '.units';\n\n    MasterBuildingListView.prototype.ui = {\n      viewtog: '#view_toggle',\n      trig: '#trig'\n    };\n\n    MasterBuildingListView.prototype.events = {\n      'click @ui.trig': function(e) {\n        return $('.list-container').toggleClass('closed');\n      },\n      'click @ui.viewtog': function(e) {\n        $('.us-left-content').toggleClass('not-visible visible');\n        return $('.us-right-content').toggleClass('not-visible visible');\n      },\n      'click .buildings': function(e) {\n        var data, units;\n        units = buildingCollection;\n        data = {};\n        data.units = units;\n        data.type = 'building';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        return new CommonFloor.MasterBuildingListCtrl({\n          region: this.region\n        });\n      },\n      'click .Villas': function(e) {\n        var data, units;\n        units = bunglowVariantCollection.getBunglowUnits();\n        data = {};\n        data.units = units;\n        data.type = 'villa';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        return new CommonFloor.MasterBunglowListCtrl({\n          region: this.region\n        });\n      },\n      'click .Plots': function(e) {\n        var data, units;\n        units = plotVariantCollection.getPlotUnits();\n        data = {};\n        data.units = units;\n        data.type = 'plot';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        return new CommonFloor.MasterPlotListCtrl({\n          region: this.region\n        });\n      }\n    };\n\n    MasterBuildingListView.prototype.onShow = function() {\n      if (bunglowVariantCollection.length !== 0) {\n        $('.Villas').removeClass('hidden');\n      }\n      if (plotVariantCollection.length !== 0) {\n        $('.Plots').removeClass('hidden');\n      }\n      if ($(window).width() > 991) {\n        return $('.units').mCustomScrollbar({\n          theme: 'cf-scroll'\n        });\n      }\n    };\n\n    return MasterBuildingListView;\n\n  })(Marionette.CompositeView);\n\n  CommonFloor.MasterBuildingListCtrl = (function(superClass) {\n    extend(MasterBuildingListCtrl, superClass);\n\n    function MasterBuildingListCtrl() {\n      this.loadController = bind(this.loadController, this);\n      return MasterBuildingListCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    MasterBuildingListCtrl.prototype.initialize = function() {\n      var view;\n      this.view = view = new MasterBuildingListView({\n        collection: buildingCollection\n      });\n      return this.show(view);\n    };\n\n    MasterBuildingListCtrl.prototype.loadController = function(data) {\n      return Backbone.trigger(\"load:units\", data);\n    };\n\n    return MasterBuildingListCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/master-list-buildings/master.list.buildings.controller.js.map","(function() {\n  var MasterPlotListView, PlotEmptyView, PlotListView,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  PlotListView = (function(superClass) {\n    extend(PlotListView, superClass);\n\n    function PlotListView() {\n      return PlotListView.__super__.constructor.apply(this, arguments);\n    }\n\n    PlotListView.prototype.template = Handlebars.compile(' <div class=\"info\"> <h2 class=\"m-b-5\">{{unit_name}}</h2> <div class=\"floors\"><span>{{unit_type}}</span></div> </div> <div class=\"clearfix\"></div> <div class=\"unit-type-info\"> <div class=\" text-primary price {{classname}}\"> <span class=\"icon-rupee-icn\"></span>{{price}}</div> </div>');\n\n    PlotListView.prototype.initialize = function() {\n      this.$el.prop(\"id\", 'unit' + this.model.get(\"id\"));\n      return this.classname = '';\n    };\n\n    PlotListView.prototype.tagName = 'li';\n\n    PlotListView.prototype.className = 'bldg blocks';\n\n    PlotListView.prototype.serializeData = function() {\n      var availability, data, response, status;\n      data = PlotListView.__super__.serializeData.call(this);\n      response = window.unit.getUnitDetails(this.model.get('id'));\n      data.unit_type = response[1].get('name');\n      data.super_built_up_area = response[0].get('super_built_up_area');\n      availability = this.model.get('availability');\n      status = s.decapitalize(availability);\n      this.model.set('status', status);\n      data.price = window.numDifferentiation(response[3]);\n      return data;\n    };\n\n    PlotListView.prototype.onShow = function() {\n      var availability, classname, html, id, status;\n      html = this.getHtml(this.model.get('id'));\n      id = this.model.get('id');\n      availability = this.model.get('availability');\n      status = s.decapitalize(availability);\n      classname = $('#unit' + id).attr('class');\n      return $('#unit' + id).attr('class', classname + ' ' + status);\n    };\n\n    PlotListView.prototype.events = {\n      'mouseover': function(e) {\n        var html, id;\n        html = this.getHtml(this.model.get('id'));\n        id = this.model.get('id');\n        $('#' + id + '.plot').attr('class', 'layer plot svg_active ' + this.model.get('status'));\n        $('#unit' + id).attr('class', 'bldg blocks' + ' ' + this.model.get('status') + ' active');\n        $('#' + id).tooltipster('content', html);\n        return $('#' + id).tooltipster('show');\n      },\n      'mouseout': function(e) {\n        var id;\n        id = this.model.get('id');\n        $('#' + id + '.plot').attr('class', 'layer plot ' + this.model.get('status'));\n        $('#unit' + id).attr('class', 'bldg blocks' + ' ' + this.model.get('status'));\n        return $('#' + id).tooltipster('hide');\n      },\n      'click': function(e) {\n        var id, unit;\n        id = this.model.get('id');\n        unit = unitCollection.findWhere({\n          id: id\n        });\n        if (!(_.isUndefined(unit)) && unit.get('availability') === 'available') {\n          $('.layer').tooltipster('hide');\n          $('svg').attr('class', 'zoom');\n          $('#spritespin').addClass('zoom');\n          $('.us-right-content').addClass('fadeOut');\n          $('.cf-loader').removeClass('hidden');\n          return setTimeout(function(x) {\n            return CommonFloor.navigate('/unit-view/' + id, {\n              trigger: true\n            });\n          }, 500);\n        }\n      }\n    };\n\n    PlotListView.prototype.iniTooltip = function(id) {\n      return $('#' + id).trigger('click');\n    };\n\n    PlotListView.prototype.getHtml = function(id) {\n      var availability, html, price, response, unit, unitMaster;\n      html = \"\";\n      id = parseInt(id);\n      unit = unitCollection.findWhere({\n        id: id\n      });\n      unitMaster = unitMasterCollection.findWhere({\n        id: id\n      });\n      if (unit === void 0 && unitMaster !== void 0) {\n        html = '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\"> Not in selection </h5> </div>';\n        $('.layer').tooltipster('content', html);\n        return;\n      }\n      if (unit === void 0) {\n        html += '<div class=\"svg-info\"> <div class=\"action-bar2\"> <div class=\"txt-dft\"></div> </div> <h5 class=\"pull-left\"> Plot details not entered </h5> </div>';\n        $('.layer').tooltipster('content', html);\n        return;\n      }\n      response = window.unit.getUnitDetails(id);\n      price = window.numDifferentiation(response[3]);\n      availability = unit.get('availability');\n      availability = s.decapitalize(availability);\n      html = \"\";\n      html += '<div class=\"svg-info ' + availability + ' \"> <div class=\"action-bar\"> <div class=\"plot\"></div> </div> <div class=\"pull-left\"> <h4 class=\"m-t-0\">' + unit.get('unit_name') + '</h4> <div class=\"details\"> <ul> <li> <h5 class=\"inline-block\">' + response[1].get('name') + '</h5> <span> - ' + response[0].get('super_built_up_area') + ' ' + project.get('measurement_units') + '</span> <!--<label>Variant</label> - ' + response[0].get('unit_variant_name') + '--> </li> </ul> <h5 class=\"m-t-0 m-b-0 price text-primary\"> <span class=\"text-primary icon-rupee-icn\"></span>' + price + '</h5> <span>' + s.capitalize(availability) + '</span> </div> </div>';\n      if (availability === 'available') {\n        html += '<div class=\"circle\"> <a href=\"#unit-view/' + id + '\" class=\"arrow-up icon-chevron-right\"></a> </div> </div>';\n      } else {\n        html += '</div>';\n      }\n      return html;\n    };\n\n    return PlotListView;\n\n  })(Marionette.ItemView);\n\n  PlotEmptyView = (function(superClass) {\n    extend(PlotEmptyView, superClass);\n\n    function PlotEmptyView() {\n      return PlotEmptyView.__super__.constructor.apply(this, arguments);\n    }\n\n    PlotEmptyView.prototype.template = 'No units added';\n\n    return PlotEmptyView;\n\n  })(Marionette.ItemView);\n\n  MasterPlotListView = (function(superClass) {\n    extend(MasterPlotListView, superClass);\n\n    function MasterPlotListView() {\n      return MasterPlotListView.__super__.constructor.apply(this, arguments);\n    }\n\n    MasterPlotListView.prototype.template = Handlebars.compile(' <div id=\"trig\" class=\"toggle-button\"></div> <div id=\"view_toggle\" class=\"toggle-view-button map\"></div> <div class=\"list-view-container w-map animated fadeIn\"> <!--<div class=\"controls map-View\"> <div class=\"toggle\"> <a href=\"#/master-view\" class=\"map\">Map</a><a href=\"#/list-view\" class=\"list active\">List</a> </div> </div>--> <div class=\"text-center\"> <ul class=\"prop-select\"> <li class=\"prop-type buildings hidden\">Buildings</li> <li class=\"prop-type Villas  hidden \">Villas</li> <li class=\"prop-type Plots active\">Plots</li> </ul> </div> <div class=\"bldg-list\"> <div class=\"legend clearfix\"> <ul> <li class=\"available\">AVAILABLE</li> <li class=\"sold\">SOLD</li> <li class=\"blocked\">BLOCKED</li> <li class=\"na\">N/A</li> </ul> </div> <p class=\"text-center help-text\">Hover on the units for more details</p> <!--<div class=\"blck-wrap title-row\"> <div class=\"row\"> <div class=\"col-sm-4\"> <h5 class=\"accord-head\">Villa No</h5> </div> <div class=\"col-sm-4\"> <h5 class=\"accord-head\">Type</h5> </div> <div class=\"col-sm-4\"> <h5 class=\"accord-head\">Area</h5> </div> </div> </div>--> <ul class=\"units one\"> </ul> <div class=\"clearfix\"></div> </div> </div>');\n\n    MasterPlotListView.prototype.childView = PlotListView;\n\n    MasterPlotListView.prototype.childViewContainer = '.units';\n\n    MasterPlotListView.prototype.ui = {\n      viewtog: '#view_toggle',\n      trig: '#trig'\n    };\n\n    MasterPlotListView.prototype.events = {\n      'click @ui.trig': function(e) {\n        return $('.list-container').toggleClass('closed');\n      },\n      'click @ui.viewtog': function(e) {\n        $('.us-left-content').toggleClass('not-visible visible');\n        return $('.us-right-content').toggleClass('not-visible visible');\n      },\n      'click .buildings': function(e) {\n        var data, units;\n        units = buildingCollection;\n        data = {};\n        data.units = units;\n        data.type = 'building';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        return new CommonFloor.MasterBuildingListCtrl({\n          region: this.region\n        });\n      },\n      'click .Villas': function(e) {\n        var data, units;\n        units = bunglowVariantCollection.getBunglowUnits();\n        data = {};\n        data.units = units;\n        data.type = 'villa';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        return new CommonFloor.MasterBunglowListCtrl({\n          region: this.region\n        });\n      },\n      'click .Plots': function(e) {\n        var data, units;\n        units = plotVariantCollection.getPlotUnits();\n        data = {};\n        data.units = units;\n        data.type = 'plot';\n        this.region = new Marionette.Region({\n          el: '#leftregion'\n        });\n        return new CommonFloor.MasterPlotListCtrl({\n          region: this.region\n        });\n      }\n    };\n\n    MasterPlotListView.prototype.onShow = function() {\n      if (buildingCollection.length !== 0) {\n        $('.buildings').removeClass('hidden');\n      }\n      if (bunglowVariantCollection.length !== 0) {\n        $('.Villas').removeClass('hidden');\n      }\n      if ($(window).width() > 991) {\n        return $('.units').mCustomScrollbar({\n          theme: 'cf-scroll'\n        });\n      }\n    };\n\n    return MasterPlotListView;\n\n  })(Marionette.CompositeView);\n\n  CommonFloor.MasterPlotListCtrl = (function(superClass) {\n    extend(MasterPlotListCtrl, superClass);\n\n    function MasterPlotListCtrl() {\n      return MasterPlotListCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    MasterPlotListCtrl.prototype.initialize = function() {\n      var newUnits, temp, unitsCollection, view;\n      newUnits = plotVariantCollection.getPlotUnits();\n      temp = [];\n      $.each(newUnits, function(index, value) {\n        if (value.get('availability') !== 'archived') {\n          return temp.push(value);\n        }\n      });\n      unitsCollection = new Backbone.Collection(temp);\n      this.view = view = new MasterPlotListView({\n        collection: unitsCollection\n      });\n      return this.show(view);\n    };\n\n    return MasterPlotListCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/master-list-plots/master.list.plots.controller.js.map","(function() {\n  var PlotEmptyView, PlotItemView, PlotView,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  PlotItemView = (function(superClass) {\n    extend(PlotItemView, superClass);\n\n    function PlotItemView() {\n      return PlotItemView.__super__.constructor.apply(this, arguments);\n    }\n\n    PlotItemView.prototype.template = Handlebars.compile('<li class=\"unit blocks {{status}}\"> <div class=\"col-sm-2 col-xs-2\"> <i class=\"plot-ico m-t-10 \"></i> </div> <div class=\"col-sm-10 col-xs-10\"> <div class=\"pull-left info\"> <label>{{unit_name}}</label> ({{unit_type}} {{super_built_up_area}} {{measurement_units}}) </div> <div class=\"clearfix\"></div> <div class=\"text-primary m-t-5\"> <span class=\"icon-rupee-icn\"></span>{{price}} </div> </div> </li>');\n\n    PlotItemView.prototype.initialize = function() {\n      return this.$el.prop(\"id\", 'unit' + this.model.get(\"id\"));\n    };\n\n    PlotItemView.prototype.serializeData = function() {\n      var availability, data, response;\n      data = PlotItemView.__super__.serializeData.call(this);\n      response = window.unit.getUnitDetails(this.model.get('id'));\n      data.unit_type = response[1].get('name');\n      data.super_built_up_area = response[0].get('super_built_up_area');\n      availability = this.model.get('availability');\n      data.status = s.decapitalize(availability);\n      this.model.set('status', status);\n      data.price = window.numDifferentiation(response[3]);\n      this.model.set('status', data.status);\n      data.measurement_units = project.get('measurement_units');\n      return data;\n    };\n\n    PlotItemView.prototype.events = {\n      'click .unit': function(e) {\n        if (this.model.get('status') === 'available') {\n          return CommonFloor.navigate('/unit-view/' + this.model.get('id'), true);\n        }\n      }\n    };\n\n    return PlotItemView;\n\n  })(Marionette.ItemView);\n\n  PlotEmptyView = (function(superClass) {\n    extend(PlotEmptyView, superClass);\n\n    function PlotEmptyView() {\n      return PlotEmptyView.__super__.constructor.apply(this, arguments);\n    }\n\n    PlotEmptyView.prototype.template = 'No units added';\n\n    return PlotEmptyView;\n\n  })(Marionette.ItemView);\n\n  PlotView = (function(superClass) {\n    extend(PlotView, superClass);\n\n    function PlotView() {\n      return PlotView.__super__.constructor.apply(this, arguments);\n    }\n\n    PlotView.prototype.template = Handlebars.compile('<div class=\"col-md-12 us-right-content\"> <div class=\"list-view-container animated fadeInUp\"> <!--<div class=\"controls map-View\"> <div class=\"toggle\"> <a href=\"#/master-view\" class=\"map\">Map</a><a href=\"#/list-view\" class=\"list active\">List</a> </div> </div>--> <span class=\"pull-left top-legend\"> <ul> <li class=\"na\">N/A</li> </ul> </span> <h2 class=\"text-center\">List of Plots</h2> <hr class=\"margin-none\"> <div class=\"text-center\"> <ul class=\"prop-select\"> <li class=\"prop-type buildings hidden\">Buildings</li> <li class=\"prop-type Villas hidden \">Villas</li> <li class=\"prop-type Plots active\">Plots</li> </ul> </div> <div class=\"legend\"> <ul> <li class=\"available\">AVAILABLE</li> <li class=\"sold\">SOLD</li> <li class=\"blocked\">BLOCKED</li> <li class=\"na\">N/A</li> </ul> </div> <div class=\"clearfix\"></div> <div class=\"villa-list\"> <ul class=\"units\"> </ul> </div> </div> </div>');\n\n    PlotView.prototype.childView = PlotItemView;\n\n    PlotView.prototype.childViewContainer = '.units';\n\n    PlotView.prototype.events = {\n      'click .buildings': function(e) {\n        var data, units;\n        units = buildingCollection;\n        data = {};\n        data.units = units;\n        data.type = 'building';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        return new CommonFloor.BuildingListCtrl({\n          region: this.region\n        });\n      },\n      'click .Villas': function(e) {\n        var data, units;\n        units = bunglowVariantCollection.getBunglowUnits();\n        data = {};\n        data.units = units;\n        data.type = 'villa';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        return new CommonFloor.VillaListCtrl({\n          region: this.region\n        });\n      },\n      'click .Plots': function(e) {\n        var data, units;\n        units = plotVariantCollection.getPlotUnits();\n        data = {};\n        data.units = units;\n        data.type = 'plot';\n        this.region = new Marionette.Region({\n          el: '#centerregion'\n        });\n        return new CommonFloor.PlotListCtrl({\n          region: this.region\n        });\n      }\n    };\n\n    PlotView.prototype.onShow = function() {\n      if (buildingCollection.length !== 0) {\n        $('.buildings').removeClass('hidden');\n      }\n      if (bunglowVariantCollection.length !== 0) {\n        return $('.Villas').removeClass('hidden');\n      }\n    };\n\n    return PlotView;\n\n  })(Marionette.CompositeView);\n\n  CommonFloor.PlotListCtrl = (function(superClass) {\n    extend(PlotListCtrl, superClass);\n\n    function PlotListCtrl() {\n      this.loadController = bind(this.loadController, this);\n      return PlotListCtrl.__super__.constructor.apply(this, arguments);\n    }\n\n    PlotListCtrl.prototype.initialize = function() {\n      var newUnits, temp, unitsCollection, view;\n      newUnits = plotVariantCollection.getPlotUnits();\n      temp = [];\n      $.each(newUnits, function(index, value) {\n        if (value.get('availability') !== 'archived') {\n          return temp.push(value);\n        }\n      });\n      unitsCollection = new Backbone.Collection(temp);\n      this.view = view = new PlotView({\n        collection: unitsCollection\n      });\n      this.listenTo(this.view, \"load:units\", this.loadController);\n      return this.show(view);\n    };\n\n    PlotListCtrl.prototype.loadController = function(data) {\n      return Backbone.trigger(\"load:units\", data);\n    };\n\n    return PlotListCtrl;\n\n  })(Marionette.RegionController);\n\n}).call(this);\n\n//# sourceMappingURL=../../frontend/project-list-view/plot.list.controller.js.map","(function() {\n  _.extend(Marionette.AppStates.prototype, {\n    history: [],\n    storeRoute: function() {\n      var url;\n      url = Backbone.history.fragment;\n      if ($.inArray(url, this.history) === -1) {\n        return this.history.push(Backbone.history.fragment);\n      }\n    },\n    previous: function() {\n      if (this.history.length > 1) {\n        return this.history[this.history.length - 1];\n      }\n      if (this.history.length === 1) {\n        return this.history[0];\n      }\n    }\n  });\n\n}).call(this);\n\n//# sourceMappingURL=../frontend/router.js.map","(function() {\n  jQuery(document).ready(function($) {\n    CommonFloor.state('project', {\n      url: '/',\n      sections: {\n        'top': {\n          ctrl: 'TopCtrl'\n        },\n        'left': {\n          ctrl: 'LeftCtrl'\n        },\n        'center': {\n          ctrl: 'CenterCtrl'\n        }\n      }\n    });\n    CommonFloor.state('projectMaster', {\n      url: '/master-view',\n      sections: {\n        'top': {\n          ctrl: 'TopMasterCtrl'\n        },\n        'left': {\n          ctrl: 'LeftMasterCtrl'\n        },\n        'center': {\n          ctrl: 'CenterMasterCtrl'\n        },\n        'filter': {\n          ctrl: 'FilterMasterCtrl'\n        }\n      }\n    });\n    CommonFloor.state('unit', {\n      url: '/unit-view/:id',\n      sections: {\n        'top': {\n          ctrl: 'TopUnitCtrl'\n        },\n        'left': {\n          ctrl: 'LeftUnitCtrl'\n        },\n        'center': {\n          ctrl: 'CenterUnitCtrl'\n        }\n      }\n    });\n    CommonFloor.state('projectList', {\n      url: '/list-view',\n      sections: {\n        'top': {\n          ctrl: 'TopListCtrl'\n        },\n        'center': {\n          ctrl: 'CenterListCtrl'\n        },\n        'filter': {\n          ctrl: 'FilterMasterCtrl'\n        }\n      }\n    });\n    CommonFloor.state('apartmentsList', {\n      url: '/building/:id/apartments',\n      sections: {\n        'top': {\n          ctrl: 'TopApartmentCtrl'\n        },\n        'center': {\n          ctrl: 'CenterApartmentCtrl'\n        },\n        'filter': {\n          ctrl: 'FilterApartmentCtrl'\n        }\n      }\n    });\n    CommonFloor.state('apartmentsMaster', {\n      url: '/building/:id/master-view',\n      sections: {\n        'top': {\n          ctrl: 'TopApartmentMasterCtrl'\n        },\n        'left': {\n          ctrl: 'LeftApartmentMasterCtrl'\n        },\n        'center': {\n          ctrl: 'CenterApartmentMasterCtrl'\n        },\n        'filter': {\n          ctrl: 'FilterApartmentCtrl'\n        }\n      }\n    });\n    CommonFloor.addInitializer(function() {\n      Backbone.history.start();\n      return CommonFloor.router.storeRoute();\n    });\n    return CommonFloor.start();\n  });\n\n}).call(this);\n\n//# sourceMappingURL=../frontend/application.js.map"],"sourceRoot":"/source/"}